-- MySQL dump 10.13  Distrib 5.7.29, for Linux (x86_64)
--
-- Host: localhost    Database: coderdx
-- ------------------------------------------------------
-- Server version	5.7.29-0ubuntu0.16.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=51 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `comment_author_email` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_type` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`),
  KEY `comment_author_email` (`comment_author_email`(10))
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_name` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_image` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_target` varchar(25) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_description` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_visible` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_notes` mediumtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `link_rss` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `option_value` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `autoload` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`),
  KEY `autoload` (`autoload`)
) ENGINE=InnoDB AUTO_INCREMENT=12594 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES (1,'siteurl','http://coderdx.io','yes'),(2,'home','http://coderdx.io','yes'),(3,'blogname','Dave Brixius','yes'),(4,'blogdescription','Full Stack Web Developer','yes'),(5,'users_can_register','0','yes'),(6,'admin_email','dave.brixius@gmail.com','yes'),(7,'start_of_week','1','yes'),(8,'use_balanceTags','0','yes'),(9,'use_smilies','1','yes'),(10,'require_name_email','1','yes'),(11,'comments_notify','1','yes'),(12,'posts_per_rss','10','yes'),(13,'rss_use_excerpt','1','yes'),(14,'mailserver_url','mail.example.com','yes'),(15,'mailserver_login','login@example.com','yes'),(16,'mailserver_pass','password','yes'),(17,'mailserver_port','110','yes'),(18,'default_category','1','yes'),(19,'default_comment_status','open','yes'),(20,'default_ping_status','open','yes'),(21,'default_pingback_flag','1','yes'),(22,'posts_per_page','10','yes'),(23,'date_format','F j, Y','yes'),(24,'time_format','g:i a','yes'),(25,'links_updated_date_format','F j, Y g:i a','yes'),(26,'comment_moderation','0','yes'),(27,'moderation_notify','1','yes'),(28,'permalink_structure','/%postname%/','yes'),(29,'rewrite_rules','a:122:{s:11:\"^wp-json/?$\";s:22:\"index.php?rest_route=/\";s:14:\"^wp-json/(.*)?\";s:33:\"index.php?rest_route=/$matches[1]\";s:21:\"^index.php/wp-json/?$\";s:22:\"index.php?rest_route=/\";s:24:\"^index.php/wp-json/(.*)?\";s:33:\"index.php?rest_route=/$matches[1]\";s:47:\"category/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:42:\"category/(.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:23:\"category/(.+?)/embed/?$\";s:46:\"index.php?category_name=$matches[1]&embed=true\";s:35:\"category/(.+?)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:17:\"category/(.+?)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:44:\"tag/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:39:\"tag/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:20:\"tag/([^/]+)/embed/?$\";s:36:\"index.php?tag=$matches[1]&embed=true\";s:32:\"tag/([^/]+)/page/?([0-9]{1,})/?$\";s:43:\"index.php?tag=$matches[1]&paged=$matches[2]\";s:14:\"tag/([^/]+)/?$\";s:25:\"index.php?tag=$matches[1]\";s:45:\"type/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:40:\"type/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:21:\"type/([^/]+)/embed/?$\";s:44:\"index.php?post_format=$matches[1]&embed=true\";s:33:\"type/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?post_format=$matches[1]&paged=$matches[2]\";s:15:\"type/([^/]+)/?$\";s:33:\"index.php?post_format=$matches[1]\";s:39:\"amn_mi-lite/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:49:\"amn_mi-lite/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:69:\"amn_mi-lite/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:64:\"amn_mi-lite/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:64:\"amn_mi-lite/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:45:\"amn_mi-lite/[^/]+/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:28:\"amn_mi-lite/([^/]+)/embed/?$\";s:44:\"index.php?amn_mi-lite=$matches[1]&embed=true\";s:32:\"amn_mi-lite/([^/]+)/trackback/?$\";s:38:\"index.php?amn_mi-lite=$matches[1]&tb=1\";s:40:\"amn_mi-lite/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?amn_mi-lite=$matches[1]&paged=$matches[2]\";s:47:\"amn_mi-lite/([^/]+)/comment-page-([0-9]{1,})/?$\";s:51:\"index.php?amn_mi-lite=$matches[1]&cpage=$matches[2]\";s:36:\"amn_mi-lite/([^/]+)(?:/([0-9]+))?/?$\";s:50:\"index.php?amn_mi-lite=$matches[1]&page=$matches[2]\";s:28:\"amn_mi-lite/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:38:\"amn_mi-lite/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:58:\"amn_mi-lite/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:53:\"amn_mi-lite/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:53:\"amn_mi-lite/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:34:\"amn_mi-lite/[^/]+/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:36:\"amn_smtp/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:46:\"amn_smtp/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:66:\"amn_smtp/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:61:\"amn_smtp/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:61:\"amn_smtp/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:42:\"amn_smtp/[^/]+/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:25:\"amn_smtp/([^/]+)/embed/?$\";s:41:\"index.php?amn_smtp=$matches[1]&embed=true\";s:29:\"amn_smtp/([^/]+)/trackback/?$\";s:35:\"index.php?amn_smtp=$matches[1]&tb=1\";s:37:\"amn_smtp/([^/]+)/page/?([0-9]{1,})/?$\";s:48:\"index.php?amn_smtp=$matches[1]&paged=$matches[2]\";s:44:\"amn_smtp/([^/]+)/comment-page-([0-9]{1,})/?$\";s:48:\"index.php?amn_smtp=$matches[1]&cpage=$matches[2]\";s:33:\"amn_smtp/([^/]+)(?:/([0-9]+))?/?$\";s:47:\"index.php?amn_smtp=$matches[1]&page=$matches[2]\";s:25:\"amn_smtp/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:35:\"amn_smtp/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:55:\"amn_smtp/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:50:\"amn_smtp/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:50:\"amn_smtp/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:31:\"amn_smtp/[^/]+/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:12:\"robots\\.txt$\";s:18:\"index.php?robots=1\";s:13:\"favicon\\.ico$\";s:19:\"index.php?favicon=1\";s:48:\".*wp-(atom|rdf|rss|rss2|feed|commentsrss2)\\.php$\";s:18:\"index.php?feed=old\";s:20:\".*wp-app\\.php(/.*)?$\";s:19:\"index.php?error=403\";s:18:\".*wp-register.php$\";s:23:\"index.php?register=true\";s:32:\"feed/(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:27:\"(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:8:\"embed/?$\";s:21:\"index.php?&embed=true\";s:20:\"page/?([0-9]{1,})/?$\";s:28:\"index.php?&paged=$matches[1]\";s:41:\"comments/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:36:\"comments/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:17:\"comments/embed/?$\";s:21:\"index.php?&embed=true\";s:44:\"search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:39:\"search/(.+)/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:20:\"search/(.+)/embed/?$\";s:34:\"index.php?s=$matches[1]&embed=true\";s:32:\"search/(.+)/page/?([0-9]{1,})/?$\";s:41:\"index.php?s=$matches[1]&paged=$matches[2]\";s:14:\"search/(.+)/?$\";s:23:\"index.php?s=$matches[1]\";s:47:\"author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:42:\"author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:23:\"author/([^/]+)/embed/?$\";s:44:\"index.php?author_name=$matches[1]&embed=true\";s:35:\"author/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?author_name=$matches[1]&paged=$matches[2]\";s:17:\"author/([^/]+)/?$\";s:33:\"index.php?author_name=$matches[1]\";s:69:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:45:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/embed/?$\";s:74:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&embed=true\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&paged=$matches[4]\";s:39:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$\";s:63:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]\";s:56:\"([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:51:\"([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:32:\"([0-9]{4})/([0-9]{1,2})/embed/?$\";s:58:\"index.php?year=$matches[1]&monthnum=$matches[2]&embed=true\";s:44:\"([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&paged=$matches[3]\";s:26:\"([0-9]{4})/([0-9]{1,2})/?$\";s:47:\"index.php?year=$matches[1]&monthnum=$matches[2]\";s:43:\"([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:38:\"([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:19:\"([0-9]{4})/embed/?$\";s:37:\"index.php?year=$matches[1]&embed=true\";s:31:\"([0-9]{4})/page/?([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&paged=$matches[2]\";s:13:\"([0-9]{4})/?$\";s:26:\"index.php?year=$matches[1]\";s:27:\".?.+?/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:37:\".?.+?/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:57:\".?.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:33:\".?.+?/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:16:\"(.?.+?)/embed/?$\";s:41:\"index.php?pagename=$matches[1]&embed=true\";s:20:\"(.?.+?)/trackback/?$\";s:35:\"index.php?pagename=$matches[1]&tb=1\";s:40:\"(.?.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:35:\"(.?.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:28:\"(.?.+?)/page/?([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&paged=$matches[2]\";s:35:\"(.?.+?)/comment-page-([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&cpage=$matches[2]\";s:24:\"(.?.+?)(?:/([0-9]+))?/?$\";s:47:\"index.php?pagename=$matches[1]&page=$matches[2]\";s:27:\"[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:37:\"[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:57:\"[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\"[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\"[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:33:\"[^/]+/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:16:\"([^/]+)/embed/?$\";s:37:\"index.php?name=$matches[1]&embed=true\";s:20:\"([^/]+)/trackback/?$\";s:31:\"index.php?name=$matches[1]&tb=1\";s:40:\"([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?name=$matches[1]&feed=$matches[2]\";s:35:\"([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?name=$matches[1]&feed=$matches[2]\";s:28:\"([^/]+)/page/?([0-9]{1,})/?$\";s:44:\"index.php?name=$matches[1]&paged=$matches[2]\";s:35:\"([^/]+)/comment-page-([0-9]{1,})/?$\";s:44:\"index.php?name=$matches[1]&cpage=$matches[2]\";s:24:\"([^/]+)(?:/([0-9]+))?/?$\";s:43:\"index.php?name=$matches[1]&page=$matches[2]\";s:16:\"[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:26:\"[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:46:\"[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:41:\"[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:41:\"[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:22:\"[^/]+/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";}','yes'),(30,'hack_file','0','yes'),(31,'blog_charset','UTF-8','yes'),(32,'moderation_keys','','no'),(33,'active_plugins','a:4:{i:0;s:19:\"akismet/akismet.php\";i:1;s:36:\"contact-form-7/wp-contact-form-7.php\";i:2;s:50:\"google-analytics-for-wordpress/googleanalytics.php\";i:4;s:29:\"wp-mail-smtp/wp_mail_smtp.php\";}','yes'),(34,'category_base','','yes'),(35,'ping_sites','http://rpc.pingomatic.com/','yes'),(36,'comment_max_links','2','yes'),(37,'gmt_offset','-5','yes'),(38,'default_email_category','1','yes'),(39,'recently_edited','a:3:{i:0;s:67:\"/var/www/coderdx.io/wp-content/themes/twentyseventeen/functions.php\";i:2;s:63:\"/var/www/coderdx.io/wp-content/themes/twentyseventeen/style.css\";i:3;s:0:\"\";}','no'),(40,'template','atomic-blocks','yes'),(41,'stylesheet','atomic-blocks','yes'),(42,'comment_whitelist','1','yes'),(43,'blacklist_keys','','no'),(44,'comment_registration','0','yes'),(45,'html_type','text/html','yes'),(46,'use_trackback','0','yes'),(47,'default_role','subscriber','yes'),(48,'db_version','47018','yes'),(49,'uploads_use_yearmonth_folders','1','yes'),(50,'upload_path','','yes'),(51,'blog_public','1','yes'),(52,'default_link_category','2','yes'),(53,'show_on_front','posts','yes'),(54,'tag_base','','yes'),(55,'show_avatars','1','yes'),(56,'avatar_rating','G','yes'),(57,'upload_url_path','','yes'),(58,'thumbnail_size_w','150','yes'),(59,'thumbnail_size_h','150','yes'),(60,'thumbnail_crop','1','yes'),(61,'medium_size_w','300','yes'),(62,'medium_size_h','300','yes'),(63,'avatar_default','mystery','yes'),(64,'large_size_w','1024','yes'),(65,'large_size_h','1024','yes'),(66,'image_default_link_type','none','yes'),(67,'image_default_size','','yes'),(68,'image_default_align','','yes'),(69,'close_comments_for_old_posts','0','yes'),(70,'close_comments_days_old','14','yes'),(71,'thread_comments','1','yes'),(72,'thread_comments_depth','5','yes'),(73,'page_comments','0','yes'),(74,'comments_per_page','50','yes'),(75,'default_comments_page','newest','yes'),(76,'comment_order','asc','yes'),(77,'sticky_posts','a:0:{}','yes'),(78,'widget_categories','a:2:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(79,'widget_text','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(80,'widget_rss','a:2:{i:1;a:0:{}s:12:\"_multiwidget\";i:1;}','yes'),(81,'uninstall_plugins','a:1:{s:50:\"google-analytics-for-wordpress/googleanalytics.php\";s:35:\"monsterinsights_lite_uninstall_hook\";}','no'),(82,'timezone_string','','yes'),(83,'page_for_posts','0','yes'),(84,'page_on_front','0','yes'),(85,'default_post_format','0','yes'),(86,'link_manager_enabled','0','yes'),(87,'finished_splitting_shared_terms','1','yes'),(88,'site_icon','11','yes'),(89,'medium_large_size_w','768','yes'),(90,'medium_large_size_h','0','yes'),(91,'wp_page_for_privacy_policy','3','yes'),(92,'initial_db_version','38590','yes'),(93,'wp_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:73:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;s:11:\"edit_blocks\";b:1;s:18:\"edit_others_blocks\";b:1;s:14:\"publish_blocks\";b:1;s:19:\"read_private_blocks\";b:1;s:11:\"read_blocks\";b:1;s:13:\"delete_blocks\";b:1;s:21:\"delete_private_blocks\";b:1;s:23:\"delete_published_blocks\";b:1;s:20:\"delete_others_blocks\";b:1;s:19:\"edit_private_blocks\";b:1;s:21:\"edit_published_blocks\";b:1;s:13:\"create_blocks\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:46:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:11:\"edit_blocks\";b:1;s:18:\"edit_others_blocks\";b:1;s:14:\"publish_blocks\";b:1;s:19:\"read_private_blocks\";b:1;s:11:\"read_blocks\";b:1;s:13:\"delete_blocks\";b:1;s:21:\"delete_private_blocks\";b:1;s:23:\"delete_published_blocks\";b:1;s:20:\"delete_others_blocks\";b:1;s:19:\"edit_private_blocks\";b:1;s:21:\"edit_published_blocks\";b:1;s:13:\"create_blocks\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:17:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:11:\"edit_blocks\";b:1;s:14:\"publish_blocks\";b:1;s:11:\"read_blocks\";b:1;s:13:\"delete_blocks\";b:1;s:23:\"delete_published_blocks\";b:1;s:21:\"edit_published_blocks\";b:1;s:13:\"create_blocks\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:6:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:11:\"read_blocks\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes'),(94,'fresh_site','0','yes'),(95,'widget_search','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(96,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(97,'widget_recent-comments','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(98,'widget_archives','a:2:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(99,'widget_meta','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(100,'sidebars_widgets','a:5:{s:19:\"wp_inactive_widgets\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:8:\"footer-1\";a:0:{}s:8:\"footer-2\";a:0:{}s:8:\"footer-3\";a:0:{}s:13:\"array_version\";i:3;}','yes'),(101,'widget_pages','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(102,'widget_calendar','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(103,'widget_media_audio','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(104,'widget_media_image','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(105,'widget_media_gallery','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(106,'widget_media_video','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(107,'widget_tag_cloud','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(108,'widget_nav_menu','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(109,'widget_custom_html','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(110,'cron','a:8:{i:1587185794;a:1:{s:34:\"wp_privacy_delete_old_export_files\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"hourly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:3600;}}}i:1587194267;a:1:{s:24:\"akismet_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1587196594;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1587239832;a:2:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}s:25:\"delete_expired_transients\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1587267650;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1587268082;a:2:{s:30:\"wp_site_health_scheduled_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"weekly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:604800;}}s:32:\"recovery_mode_clean_expired_keys\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1587756314;a:1:{s:35:\"monsterinsights_usage_tracking_cron\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"weekly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:604800;}}}s:7:\"version\";i:2;}','yes'),(126,'theme_mods_twentyseventeen','a:6:{s:18:\"custom_css_post_id\";i:-1;s:11:\"custom_logo\";i:11;s:12:\"header_image\";s:20:\"random-default-image\";s:11:\"colorscheme\";s:4:\"dark\";s:18:\"nav_menu_locations\";a:1:{s:3:\"top\";i:2;}s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1533827014;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:9:\"sidebar-2\";a:0:{}s:9:\"sidebar-3\";a:0:{}}}}','yes'),(134,'recently_activated','a:0:{}','yes'),(135,'widget_akismet_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(136,'akismet_strictness','0','yes'),(137,'akismet_show_user_comments_approved','0','yes'),(138,'wordpress_api_key','5064f9be59b0','yes'),(139,'akismet_spam_count','20','yes'),(209,'nav_menu_options','a:1:{s:8:\"auto_add\";a:0:{}}','yes'),(370,'auto_core_update_notified','a:4:{s:4:\"type\";s:7:\"success\";s:5:\"email\";s:22:\"dave.brixius@gmail.com\";s:7:\"version\";s:5:\"5.0.8\";s:9:\"timestamp\";i:1576231302;}','no'),(392,'category_children','a:0:{}','yes'),(428,'wpcf7','a:4:{s:7:\"version\";s:5:\"5.1.7\";s:13:\"bulk_validate\";a:4:{s:9:\"timestamp\";i:1587163857;s:7:\"version\";s:5:\"5.1.7\";s:11:\"count_valid\";i:1;s:13:\"count_invalid\";i:0;}s:9:\"recaptcha\";a:1:{s:40:\"6LfmxowUAAAAALopBMgNiGYkdS2s42UMfgs5Y8ul\";s:40:\"6LfmxowUAAAAAD35jgrCVWt26nBJea9GPnuB_zaV\";}s:23:\"recaptcha_v2_v3_warning\";b:0;}','yes'),(466,'wp_mail_smtp_initial_version','1.3.3','no'),(467,'wp_mail_smtp_version','1.3.3','no'),(468,'wp_mail_smtp','a:5:{s:4:\"mail\";a:6:{s:10:\"from_email\";s:22:\"dave.brixius@gmail.com\";s:9:\"from_name\";s:23:\"Dave Brixius (@CoderDx)\";s:6:\"mailer\";s:5:\"gmail\";s:11:\"return_path\";b:0;s:16:\"from_email_force\";b:0;s:15:\"from_name_force\";b:0;}s:4:\"smtp\";a:7:{s:7:\"autotls\";s:3:\"yes\";s:4:\"host\";s:0:\"\";s:10:\"encryption\";s:4:\"none\";s:4:\"port\";s:0:\"\";s:4:\"user\";s:0:\"\";s:4:\"pass\";s:0:\"\";s:4:\"auth\";b:0;}s:5:\"gmail\";a:5:{s:9:\"client_id\";s:71:\"17076532172-gjdvtocm4d87umuk88ee88tut1u4legr.apps.googleusercontent.com\";s:13:\"client_secret\";s:24:\"0aZCBVDOrhvnlG9eAcB03xbq\";s:9:\"auth_code\";s:89:\"4/NACH_5jM4Wohq68YM2_V9bQdMOeJXioqlEBMXIDsUsaFDzDreKUheE84li2xOKjlhkjYRS1Aq599IzCNeYwPsmw\";s:12:\"access_token\";a:6:{s:12:\"access_token\";s:137:\"ya29.ImG1BwGDHXnVNDUHCaGrpWQCIBtyJNUu-Cgml1Q8WWjVbOFcaCEC-uo99gzyv6FUoArXTglsJ7QJj9aL25tG0C1YGiPmgS-Nr1gfbN-SHkT5qK73k9RE36XGWDitscevghXS\";s:10:\"expires_in\";i:3600;s:5:\"scope\";s:24:\"https://mail.google.com/\";s:10:\"token_type\";s:6:\"Bearer\";s:7:\"created\";i:1576231302;s:13:\"refresh_token\";s:45:\"1/0m09TgPa8UWABZ_Z_a52cSCcRiZVxtro_1ZvIaQLN_0\";}s:13:\"refresh_token\";s:45:\"1/0m09TgPa8UWABZ_Z_a52cSCcRiZVxtro_1ZvIaQLN_0\";}s:7:\"mailgun\";a:2:{s:7:\"api_key\";s:0:\"\";s:6:\"domain\";s:0:\"\";}s:8:\"sendgrid\";a:1:{s:7:\"api_key\";s:0:\"\";}}','no'),(469,'_amn_smtp_last_checked','1587168000','yes'),(470,'wp_mail_smtp_debug','a:0:{}','no'),(521,'monsterinsights_usage_tracking_config','a:6:{s:3:\"day\";i:5;s:4:\"hour\";i:19;s:6:\"minute\";i:25;s:6:\"second\";i:14;s:6:\"offset\";i:501914;s:8:\"initsend\";i:1534533914;}','yes'),(522,'monsterinsights_over_time','a:4:{s:17:\"installed_version\";s:5:\"7.1.0\";s:14:\"installed_date\";i:1533757070;s:13:\"installed_pro\";b:0;s:14:\"connected_date\";i:1569628466;}','yes'),(523,'monsterinsights_db_version','7.4.0','yes'),(525,'monsterinsights_current_version','7.10.0','yes'),(526,'monsterinsights_settings','a:22:{s:17:\"analytics_profile\";s:0:\"\";s:22:\"analytics_profile_code\";s:0:\"\";s:14:\"manual_ua_code\";s:0:\"\";s:26:\"track_internal_as_outbound\";i:0;s:23:\"track_internal_as_label\";s:0:\"\";s:14:\"allow_tracking\";i:0;s:13:\"tracking_mode\";s:9:\"analytics\";s:11:\"events_mode\";s:2:\"js\";s:12:\"demographics\";i:1;s:12:\"ignore_users\";a:2:{i:0;s:13:\"administrator\";i:1;s:6:\"editor\";}s:19:\"dashboards_disabled\";i:0;s:13:\"anonymize_ips\";i:0;s:19:\"extensions_of_files\";s:34:\"doc,pdf,ppt,zip,xls,docx,pptx,xlsx\";s:18:\"subdomain_tracking\";s:0:\"\";s:16:\"tag_links_in_rss\";i:0;s:12:\"allow_anchor\";i:0;s:16:\"add_allow_linker\";i:0;s:11:\"custom_code\";s:0:\"\";s:10:\"debug_mode\";i:0;s:14:\"anonymous_data\";i:0;s:13:\"save_settings\";a:0:{}s:12:\"view_reports\";a:0:{}}','yes'),(527,'_amn_mi-lite_last_checked','1569542400','yes'),(528,'monsterinsights_site_tt','d8f6dbe7b08ec466151714b8347299764fd7ea20c52b9f162bb45cd561109e1dc76f2707dab15d443a69e956dbd25b61e76f828c1d293ea8c8ff4a7502a9c0ef','yes'),(529,'monsterinsights_site_profile','a:9:{s:3:\"key\";s:128:\"c1ce628d66413335d83c496f70183f8fad28c3342ef36b2baa3fbd3277e3ed5c66823c3c3b508aa2e221dbc44f419a9c0177d0b9cccadee6a792acda7ad5683f\";s:5:\"token\";s:128:\"82f56dcc20e2f54a5ebde7272a41b40e913536b69a97d51ef628ed5d72f4eeb81040503a6dfd9f0bc2b78a1104189d359d4f9696bd7ae88e9bb129b81b53ac50\";s:2:\"ua\";s:14:\"UA-123682136-1\";s:8:\"viewname\";s:14:\"UA-123682136-1\";s:1:\"a\";s:9:\"123682136\";s:1:\"w\";s:9:\"181995714\";s:1:\"p\";s:9:\"179776193\";s:7:\"siteurl\";s:17:\"http://coderdx.io\";s:6:\"neturl\";s:27:\"http://coderdx.io/wp-admin/\";}','yes'),(552,'akismet_comment_form_privacy_notice','display','yes'),(561,'monsterinsights_report_data_overview','a:3:{s:7:\"expires\";i:86400;s:1:\"p\";s:9:\"179776193\";s:4:\"data\";a:5:{s:13:\"overviewgraph\";a:7:{s:5:\"count\";i:30;s:5:\"start\";i:1531180800;s:3:\"end\";i:1533686400;s:8:\"sessions\";a:4:{s:3:\"min\";i:0;s:3:\"max\";i:0;s:10:\"datapoints\";a:30:{i:0;i:0;i:1;i:0;i:2;i:0;i:3;i:0;i:4;i:0;i:5;i:0;i:6;i:0;i:7;i:0;i:8;i:0;i:9;i:0;i:10;i:0;i:11;i:0;i:12;i:0;i:13;i:0;i:14;i:0;i:15;i:0;i:16;i:0;i:17;i:0;i:18;i:0;i:19;i:0;i:20;i:0;i:21;i:0;i:22;i:0;i:23;i:0;i:24;i:0;i:25;i:0;i:26;i:0;i:27;i:0;i:28;i:0;i:29;i:0;}s:11:\"trendpoints\";a:30:{i:0;i:0;i:1;i:0;i:2;i:0;i:3;i:0;i:4;i:0;i:5;i:0;i:6;i:0;i:7;i:0;i:8;i:0;i:9;i:0;i:10;i:0;i:11;i:0;i:12;i:0;i:13;i:0;i:14;i:0;i:15;i:0;i:16;i:0;i:17;i:0;i:18;i:0;i:19;i:0;i:20;i:0;i:21;i:0;i:22;i:0;i:23;i:0;i:24;i:0;i:25;i:0;i:26;i:0;i:27;i:0;i:28;i:0;i:29;i:0;}}s:9:\"pageviews\";a:4:{s:10:\"datapoints\";a:30:{i:0;i:0;i:1;i:0;i:2;i:0;i:3;i:0;i:4;i:0;i:5;i:0;i:6;i:0;i:7;i:0;i:8;i:0;i:9;i:0;i:10;i:0;i:11;i:0;i:12;i:0;i:13;i:0;i:14;i:0;i:15;i:0;i:16;i:0;i:17;i:0;i:18;i:0;i:19;i:0;i:20;i:0;i:21;i:0;i:22;i:0;i:23;i:0;i:24;i:0;i:25;i:0;i:26;i:0;i:27;i:0;i:28;i:0;i:29;i:0;}s:3:\"min\";i:0;s:3:\"max\";i:0;s:11:\"trendpoints\";a:30:{i:0;i:0;i:1;i:0;i:2;i:0;i:3;i:0;i:4;i:0;i:5;i:0;i:6;i:0;i:7;i:0;i:8;i:0;i:9;i:0;i:10;i:0;i:11;i:0;i:12;i:0;i:13;i:0;i:14;i:0;i:15;i:0;i:16;i:0;i:17;i:0;i:18;i:0;i:19;i:0;i:20;i:0;i:21;i:0;i:22;i:0;i:23;i:0;i:24;i:0;i:25;i:0;i:26;i:0;i:27;i:0;i:28;i:0;i:29;i:0;}}s:6:\"labels\";a:30:{i:0;s:6:\"10 Jul\";i:1;s:6:\"11 Jul\";i:2;s:6:\"12 Jul\";i:3;s:6:\"13 Jul\";i:4;s:6:\"14 Jul\";i:5;s:6:\"15 Jul\";i:6;s:6:\"16 Jul\";i:7;s:6:\"17 Jul\";i:8;s:6:\"18 Jul\";i:9;s:6:\"19 Jul\";i:10;s:6:\"20 Jul\";i:11;s:6:\"21 Jul\";i:12;s:6:\"22 Jul\";i:13;s:6:\"23 Jul\";i:14;s:6:\"24 Jul\";i:15;s:6:\"25 Jul\";i:16;s:6:\"26 Jul\";i:17;s:6:\"27 Jul\";i:18;s:6:\"28 Jul\";i:19;s:6:\"29 Jul\";i:20;s:6:\"30 Jul\";i:21;s:6:\"31 Jul\";i:22;s:5:\"1 Aug\";i:23;s:5:\"2 Aug\";i:24;s:5:\"3 Aug\";i:25;s:5:\"4 Aug\";i:26;s:5:\"5 Aug\";i:27;s:5:\"6 Aug\";i:28;s:5:\"7 Aug\";i:29;s:5:\"8 Aug\";}s:10:\"timestamps\";a:30:{i:0;i:1531180800;i:1;i:1531267200;i:2;i:1531353600;i:3;i:1531440000;i:4;i:1531526400;i:5;i:1531612800;i:6;i:1531699200;i:7;i:1531785600;i:8;i:1531872000;i:9;i:1531958400;i:10;i:1532044800;i:11;i:1532131200;i:12;i:1532217600;i:13;i:1532304000;i:14;i:1532390400;i:15;i:1532476800;i:16;i:1532563200;i:17;i:1532649600;i:18;i:1532736000;i:19;i:1532822400;i:20;i:1532908800;i:21;i:1532995200;i:22;i:1533081600;i:23;i:1533168000;i:24;i:1533254400;i:25;i:1533340800;i:26;i:1533427200;i:27;i:1533513600;i:28;i:1533600000;i:29;i:1533686400;}}s:7:\"infobox\";a:7:{s:5:\"range\";i:30;s:7:\"current\";a:2:{s:7:\"endDate\";s:10:\"2018-08-08\";s:9:\"startDate\";s:10:\"2018-07-10\";}s:8:\"previous\";a:2:{s:7:\"endDate\";s:10:\"2018-07-09\";s:9:\"startDate\";s:10:\"2018-06-10\";}s:8:\"sessions\";a:2:{s:5:\"value\";i:0;s:4:\"prev\";i:0;}s:9:\"pageviews\";a:2:{s:5:\"value\";i:0;s:4:\"prev\";i:0;}s:6:\"bounce\";a:2:{s:5:\"value\";i:0;s:4:\"prev\";i:0;}s:8:\"duration\";a:2:{s:5:\"value\";s:0:\"\";s:4:\"prev\";i:0;}}s:11:\"newvsreturn\";a:2:{s:3:\"new\";i:0;s:9:\"returning\";i:100;}s:18:\"reportcurrentrange\";a:2:{s:7:\"endDate\";s:10:\"2018-08-08\";s:9:\"startDate\";s:10:\"2018-07-10\";}s:15:\"reportprevrange\";a:2:{s:7:\"endDate\";s:10:\"2018-07-09\";s:9:\"startDate\";s:10:\"2018-06-10\";}}}','yes'),(567,'_transient_twentyseventeen_categories','1','yes'),(568,'WPLANG','','yes'),(569,'new_admin_email','dave.brixius@gmail.com','yes'),(580,'current_theme','Atomic Blocks','yes'),(581,'theme_mods_atomic-blocks','a:5:{i:0;b:0;s:18:\"nav_menu_locations\";a:1:{s:7:\"primary\";i:2;}s:18:\"custom_css_post_id\";i:-1;s:25:\"atomic_blocks_footer_text\";s:19:\"©2019 Dave Brixius\";s:11:\"custom_logo\";i:144;}','yes'),(582,'theme_switched','','yes'),(2624,'monsterinsights_version_upgraded_from','7.8.2','yes'),(2630,'show_comments_cookies_opt_in','0','yes'),(2631,'db_upgraded','','yes'),(7235,'_amn_mi-lite_to_check','1587440784','yes'),(7236,'monsterinsights_review','a:2:{s:4:\"time\";i:1587181650;s:9:\"dismissed\";b:1;}','yes'),(8221,'monsterinsights_frontend_tracking_notice_viewed','1','yes'),(12571,'_site_transient_timeout_browser_797d215496aa026dd2270218312a29c6','1587786385','no'),(12572,'_site_transient_browser_797d215496aa026dd2270218312a29c6','a:10:{s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"80.0.3987.163\";s:8:\"platform\";s:9:\"Macintosh\";s:10:\"update_url\";s:29:\"https://www.google.com/chrome\";s:7:\"img_src\";s:43:\"http://s.w.org/images/browsers/chrome.png?1\";s:11:\"img_src_ssl\";s:44:\"https://s.w.org/images/browsers/chrome.png?1\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:0;}','no'),(12573,'_site_transient_timeout_community-events-3b8a702a7fbb562c33c5cc732241f977','1587224786','no'),(12574,'_site_transient_community-events-3b8a702a7fbb562c33c5cc732241f977','a:3:{s:9:\"sandboxed\";b:0;s:8:\"location\";a:1:{s:2:\"ip\";s:13:\"107.140.190.0\";}s:6:\"events\";a:6:{i:0;a:7:{s:4:\"type\";s:8:\"wordcamp\";s:5:\"title\";s:29:\"WordCamp Santa Clarita Online\";s:3:\"url\";s:39:\"https://2020.santaclarita.wordcamp.org/\";s:6:\"meetup\";N;s:10:\"meetup_url\";N;s:4:\"date\";s:19:\"2020-04-18 12:00:00\";s:8:\"location\";a:1:{s:8:\"location\";s:10:\"Everywhere\";}}i:1;a:8:{s:4:\"type\";s:6:\"meetup\";s:5:\"title\";s:33:\"WPATX Beginners: How Plugins Work\";s:3:\"url\";s:56:\"https://www.meetup.com/austinwordpress/events/268315981/\";s:6:\"meetup\";s:16:\"WordPress Austin\";s:10:\"meetup_url\";s:39:\"https://www.meetup.com/austinwordpress/\";s:4:\"date\";s:19:\"2020-04-21 19:00:00\";s:8:\"end_date\";s:19:\"2020-04-21 21:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:15:\"Austin, TX, USA\";s:7:\"country\";s:2:\"us\";s:8:\"latitude\";d:30.393878936768001;s:9:\"longitude\";d:-97.84790802002;}}i:2;a:8:{s:4:\"type\";s:6:\"meetup\";s:5:\"title\";s:21:\"WPATX eCommerce - TBD\";s:3:\"url\";s:56:\"https://www.meetup.com/austinwordpress/events/267131634/\";s:6:\"meetup\";s:16:\"WordPress Austin\";s:10:\"meetup_url\";s:39:\"https://www.meetup.com/austinwordpress/\";s:4:\"date\";s:19:\"2020-04-27 19:00:00\";s:8:\"end_date\";s:19:\"2020-04-27 21:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:11:\"Austin, USA\";s:7:\"country\";s:2:\"US\";s:8:\"latitude\";d:30.268993377686002;s:9:\"longitude\";d:-97.740547180175994;}}i:3;a:8:{s:4:\"type\";s:8:\"wordcamp\";s:5:\"title\";s:16:\"WordCamp Houston\";s:3:\"url\";s:33:\"https://2020.houston.wordcamp.org\";s:6:\"meetup\";N;s:10:\"meetup_url\";N;s:4:\"date\";s:19:\"2020-05-09 00:00:00\";s:8:\"end_date\";s:19:\"2020-05-10 00:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:7:\"Houston\";s:7:\"country\";s:2:\"US\";s:8:\"latitude\";d:29.556235600000001;s:9:\"longitude\";d:-95.075078599999998;}}i:4;a:8:{s:4:\"type\";s:6:\"meetup\";s:5:\"title\";s:35:\"WPATX Beginners: Intro to Gutenberg\";s:3:\"url\";s:56:\"https://www.meetup.com/austinwordpress/events/268316047/\";s:6:\"meetup\";s:16:\"WordPress Austin\";s:10:\"meetup_url\";s:39:\"https://www.meetup.com/austinwordpress/\";s:4:\"date\";s:19:\"2020-05-19 19:00:00\";s:8:\"end_date\";s:19:\"2020-05-19 21:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:15:\"Austin, TX, USA\";s:7:\"country\";s:2:\"us\";s:8:\"latitude\";d:30.393878936768001;s:9:\"longitude\";d:-97.84790802002;}}i:5;a:8:{s:4:\"type\";s:6:\"meetup\";s:5:\"title\";s:21:\"WPATX eCommerce - TBD\";s:3:\"url\";s:56:\"https://www.meetup.com/austinwordpress/events/267131637/\";s:6:\"meetup\";s:16:\"WordPress Austin\";s:10:\"meetup_url\";s:39:\"https://www.meetup.com/austinwordpress/\";s:4:\"date\";s:19:\"2020-05-25 19:00:00\";s:8:\"end_date\";s:19:\"2020-05-25 21:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:11:\"Austin, USA\";s:7:\"country\";s:2:\"US\";s:8:\"latitude\";d:30.268993377686002;s:9:\"longitude\";d:-97.740547180175994;}}}}','no'),(12575,'_transient_timeout_dash_v2_88ae138922fe95674369b1cb3d215a2b','1587224786','no'),(12576,'_transient_dash_v2_88ae138922fe95674369b1cb3d215a2b','<div class=\"rss-widget\"><ul><li>An error has occurred, which probably means the feed is down. Try again later.</li></ul></div><div class=\"rss-widget\"><ul><li>An error has occurred, which probably means the feed is down. Try again later.</li></ul></div>','no'),(12577,'monsterinsights_admin_menu_tooltip','1587181641','yes'),(12578,'_site_transient_timeout_theme_roots','1587183541','no'),(12579,'_site_transient_theme_roots','a:6:{s:13:\"atomic-blocks\";s:7:\"/themes\";s:13:\"twentyfifteen\";s:7:\"/themes\";s:14:\"twentynineteen\";s:7:\"/themes\";s:15:\"twentyseventeen\";s:7:\"/themes\";s:13:\"twentysixteen\";s:7:\"/themes\";s:12:\"twentytwenty\";s:7:\"/themes\";}','no'),(12581,'admin_email_lifespan','0','yes'),(12583,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:1:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:6:\"latest\";s:8:\"download\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.4.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.4.zip\";s:10:\"no_content\";s:68:\"https://downloads.wordpress.org/release/wordpress-5.4-no-content.zip\";s:11:\"new_bundled\";s:69:\"https://downloads.wordpress.org/release/wordpress-5.4-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:3:\"5.4\";s:7:\"version\";s:3:\"5.4\";s:11:\"php_version\";s:6:\"5.6.20\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.3\";s:15:\"partial_version\";s:0:\"\";}}s:12:\"last_checked\";i:1587182137;s:15:\"version_checked\";s:3:\"5.4\";s:12:\"translations\";a:0:{}}','no'),(12585,'recovery_keys','a:0:{}','yes'),(12586,'can_compress_scripts','1','no'),(12587,'_site_transient_timeout_php_check_17eada30aceef87ac030e9bc0261495a','1587786505','no'),(12588,'_site_transient_php_check_17eada30aceef87ac030e9bc0261495a','a:5:{s:19:\"recommended_version\";s:3:\"7.3\";s:15:\"minimum_version\";s:6:\"5.6.20\";s:12:\"is_supported\";b:0;s:9:\"is_secure\";b:0;s:13:\"is_acceptable\";b:1;}','no'),(12589,'_site_transient_update_plugins','O:8:\"stdClass\":5:{s:12:\"last_checked\";i:1587182141;s:7:\"checked\";a:6:{s:19:\"akismet/akismet.php\";s:5:\"4.1.4\";s:36:\"contact-form-7/wp-contact-form-7.php\";s:5:\"5.1.7\";s:50:\"google-analytics-for-wordpress/googleanalytics.php\";s:6:\"7.10.4\";s:23:\"gutenberg/gutenberg.php\";s:5:\"7.9.1\";s:21:\"hello-dolly/hello.php\";s:5:\"1.7.2\";s:29:\"wp-mail-smtp/wp_mail_smtp.php\";s:5:\"1.9.0\";}s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:6:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:21:\"w.org/plugins/akismet\";s:4:\"slug\";s:7:\"akismet\";s:6:\"plugin\";s:19:\"akismet/akismet.php\";s:11:\"new_version\";s:5:\"4.1.4\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/akismet/\";s:7:\"package\";s:56:\"https://downloads.wordpress.org/plugin/akismet.4.1.4.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:59:\"https://ps.w.org/akismet/assets/icon-256x256.png?rev=969272\";s:2:\"1x\";s:59:\"https://ps.w.org/akismet/assets/icon-128x128.png?rev=969272\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:61:\"https://ps.w.org/akismet/assets/banner-772x250.jpg?rev=479904\";}s:11:\"banners_rtl\";a:0:{}}s:36:\"contact-form-7/wp-contact-form-7.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:28:\"w.org/plugins/contact-form-7\";s:4:\"slug\";s:14:\"contact-form-7\";s:6:\"plugin\";s:36:\"contact-form-7/wp-contact-form-7.php\";s:11:\"new_version\";s:5:\"5.1.7\";s:3:\"url\";s:45:\"https://wordpress.org/plugins/contact-form-7/\";s:7:\"package\";s:63:\"https://downloads.wordpress.org/plugin/contact-form-7.5.1.7.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:67:\"https://ps.w.org/contact-form-7/assets/icon-256x256.png?rev=2279696\";s:2:\"1x\";s:67:\"https://ps.w.org/contact-form-7/assets/icon-128x128.png?rev=2279696\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:69:\"https://ps.w.org/contact-form-7/assets/banner-1544x500.png?rev=860901\";s:2:\"1x\";s:68:\"https://ps.w.org/contact-form-7/assets/banner-772x250.png?rev=880427\";}s:11:\"banners_rtl\";a:0:{}}s:50:\"google-analytics-for-wordpress/googleanalytics.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:44:\"w.org/plugins/google-analytics-for-wordpress\";s:4:\"slug\";s:30:\"google-analytics-for-wordpress\";s:6:\"plugin\";s:50:\"google-analytics-for-wordpress/googleanalytics.php\";s:11:\"new_version\";s:6:\"7.10.4\";s:3:\"url\";s:61:\"https://wordpress.org/plugins/google-analytics-for-wordpress/\";s:7:\"package\";s:80:\"https://downloads.wordpress.org/plugin/google-analytics-for-wordpress.7.10.4.zip\";s:5:\"icons\";a:3:{s:2:\"2x\";s:83:\"https://ps.w.org/google-analytics-for-wordpress/assets/icon-256x256.png?rev=1598927\";s:2:\"1x\";s:75:\"https://ps.w.org/google-analytics-for-wordpress/assets/icon.svg?rev=1598927\";s:3:\"svg\";s:75:\"https://ps.w.org/google-analytics-for-wordpress/assets/icon.svg?rev=1598927\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:86:\"https://ps.w.org/google-analytics-for-wordpress/assets/banner-1544x500.png?rev=2159532\";s:2:\"1x\";s:85:\"https://ps.w.org/google-analytics-for-wordpress/assets/banner-772x250.png?rev=2159532\";}s:11:\"banners_rtl\";a:0:{}}s:23:\"gutenberg/gutenberg.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:23:\"w.org/plugins/gutenberg\";s:4:\"slug\";s:9:\"gutenberg\";s:6:\"plugin\";s:23:\"gutenberg/gutenberg.php\";s:11:\"new_version\";s:5:\"7.9.1\";s:3:\"url\";s:40:\"https://wordpress.org/plugins/gutenberg/\";s:7:\"package\";s:58:\"https://downloads.wordpress.org/plugin/gutenberg.7.9.1.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:62:\"https://ps.w.org/gutenberg/assets/icon-256x256.jpg?rev=1776042\";s:2:\"1x\";s:62:\"https://ps.w.org/gutenberg/assets/icon-128x128.jpg?rev=1776042\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:65:\"https://ps.w.org/gutenberg/assets/banner-1544x500.jpg?rev=1718710\";s:2:\"1x\";s:64:\"https://ps.w.org/gutenberg/assets/banner-772x250.jpg?rev=1718710\";}s:11:\"banners_rtl\";a:0:{}}s:21:\"hello-dolly/hello.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:25:\"w.org/plugins/hello-dolly\";s:4:\"slug\";s:11:\"hello-dolly\";s:6:\"plugin\";s:21:\"hello-dolly/hello.php\";s:11:\"new_version\";s:5:\"1.7.2\";s:3:\"url\";s:42:\"https://wordpress.org/plugins/hello-dolly/\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/plugin/hello-dolly.1.7.2.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:64:\"https://ps.w.org/hello-dolly/assets/icon-256x256.jpg?rev=2052855\";s:2:\"1x\";s:64:\"https://ps.w.org/hello-dolly/assets/icon-128x128.jpg?rev=2052855\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:66:\"https://ps.w.org/hello-dolly/assets/banner-772x250.jpg?rev=2052855\";}s:11:\"banners_rtl\";a:0:{}}s:29:\"wp-mail-smtp/wp_mail_smtp.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:26:\"w.org/plugins/wp-mail-smtp\";s:4:\"slug\";s:12:\"wp-mail-smtp\";s:6:\"plugin\";s:29:\"wp-mail-smtp/wp_mail_smtp.php\";s:11:\"new_version\";s:5:\"1.9.0\";s:3:\"url\";s:43:\"https://wordpress.org/plugins/wp-mail-smtp/\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/plugin/wp-mail-smtp.1.9.0.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:65:\"https://ps.w.org/wp-mail-smtp/assets/icon-256x256.png?rev=1755440\";s:2:\"1x\";s:65:\"https://ps.w.org/wp-mail-smtp/assets/icon-128x128.png?rev=1755440\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:68:\"https://ps.w.org/wp-mail-smtp/assets/banner-1544x500.png?rev=2120094\";s:2:\"1x\";s:67:\"https://ps.w.org/wp-mail-smtp/assets/banner-772x250.png?rev=2120094\";}s:11:\"banners_rtl\";a:0:{}}}}','no'),(12590,'_site_transient_update_themes','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1587182137;s:7:\"checked\";a:6:{s:13:\"atomic-blocks\";s:5:\"1.2.6\";s:13:\"twentyfifteen\";s:3:\"2.6\";s:14:\"twentynineteen\";s:3:\"1.5\";s:15:\"twentyseventeen\";s:3:\"2.3\";s:13:\"twentysixteen\";s:3:\"2.1\";s:12:\"twentytwenty\";s:3:\"1.2\";}s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}}','no'),(12591,'_site_transient_timeout_available_translations','1587192714','no'),(12592,'_site_transient_available_translations','a:121:{s:2:\"af\";a:8:{s:8:\"language\";s:2:\"af\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-31 13:46:18\";s:12:\"english_name\";s:9:\"Afrikaans\";s:11:\"native_name\";s:9:\"Afrikaans\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/af.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"af\";i:2;s:3:\"afr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Gaan voort\";}}s:2:\"ar\";a:8:{s:8:\"language\";s:2:\"ar\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-01 01:35:47\";s:12:\"english_name\";s:6:\"Arabic\";s:11:\"native_name\";s:14:\"العربية\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/ar.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ar\";i:2;s:3:\"ara\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"المتابعة\";}}s:3:\"ary\";a:8:{s:8:\"language\";s:3:\"ary\";s:7:\"version\";s:5:\"4.7.7\";s:7:\"updated\";s:19:\"2017-01-26 15:42:35\";s:12:\"english_name\";s:15:\"Moroccan Arabic\";s:11:\"native_name\";s:31:\"العربية المغربية\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.7/ary.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ar\";i:3;s:3:\"ary\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"المتابعة\";}}s:2:\"as\";a:8:{s:8:\"language\";s:2:\"as\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-22 18:59:07\";s:12:\"english_name\";s:8:\"Assamese\";s:11:\"native_name\";s:21:\"অসমীয়া\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/as.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"as\";i:2;s:3:\"asm\";i:3;s:3:\"asm\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:2:\"az\";a:8:{s:8:\"language\";s:2:\"az\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-06 00:09:27\";s:12:\"english_name\";s:11:\"Azerbaijani\";s:11:\"native_name\";s:16:\"Azərbaycan dili\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/az.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"az\";i:2;s:3:\"aze\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Davam\";}}s:3:\"azb\";a:8:{s:8:\"language\";s:3:\"azb\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-12 20:34:31\";s:12:\"english_name\";s:17:\"South Azerbaijani\";s:11:\"native_name\";s:29:\"گؤنئی آذربایجان\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/azb.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"az\";i:3;s:3:\"azb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:3:\"bel\";a:8:{s:8:\"language\";s:3:\"bel\";s:7:\"version\";s:6:\"4.9.13\";s:7:\"updated\";s:19:\"2019-10-29 07:54:22\";s:12:\"english_name\";s:10:\"Belarusian\";s:11:\"native_name\";s:29:\"Беларуская мова\";s:7:\"package\";s:63:\"https://downloads.wordpress.org/translation/core/4.9.13/bel.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"be\";i:2;s:3:\"bel\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Працягнуць\";}}s:5:\"bg_BG\";a:8:{s:8:\"language\";s:5:\"bg_BG\";s:7:\"version\";s:5:\"5.3.2\";s:7:\"updated\";s:19:\"2020-01-22 10:57:09\";s:12:\"english_name\";s:9:\"Bulgarian\";s:11:\"native_name\";s:18:\"Български\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.3.2/bg_BG.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bg\";i:2;s:3:\"bul\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:22:\"Продължение\";}}s:5:\"bn_BD\";a:8:{s:8:\"language\";s:5:\"bn_BD\";s:7:\"version\";s:6:\"4.8.12\";s:7:\"updated\";s:19:\"2017-10-01 12:57:10\";s:12:\"english_name\";s:20:\"Bengali (Bangladesh)\";s:11:\"native_name\";s:15:\"বাংলা\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.8.12/bn_BD.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"bn\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:23:\"এগিয়ে চল.\";}}s:2:\"bo\";a:8:{s:8:\"language\";s:2:\"bo\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-31 12:33:33\";s:12:\"english_name\";s:7:\"Tibetan\";s:11:\"native_name\";s:21:\"བོད་ཡིག\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/bo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bo\";i:2;s:3:\"tib\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:24:\"མུ་མཐུད།\";}}s:5:\"bs_BA\";a:8:{s:8:\"language\";s:5:\"bs_BA\";s:7:\"version\";s:5:\"5.3.2\";s:7:\"updated\";s:19:\"2020-01-18 19:20:00\";s:12:\"english_name\";s:7:\"Bosnian\";s:11:\"native_name\";s:8:\"Bosanski\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.3.2/bs_BA.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bs\";i:2;s:3:\"bos\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nastavi\";}}s:2:\"ca\";a:8:{s:8:\"language\";s:2:\"ca\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-12 05:54:08\";s:12:\"english_name\";s:7:\"Catalan\";s:11:\"native_name\";s:7:\"Català\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/ca.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ca\";i:2;s:3:\"cat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continua\";}}s:3:\"ceb\";a:8:{s:8:\"language\";s:3:\"ceb\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-03-02 17:25:51\";s:12:\"english_name\";s:7:\"Cebuano\";s:11:\"native_name\";s:7:\"Cebuano\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/ceb.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"ceb\";i:3;s:3:\"ceb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Padayun\";}}s:5:\"cs_CZ\";a:8:{s:8:\"language\";s:5:\"cs_CZ\";s:7:\"version\";s:5:\"5.3.2\";s:7:\"updated\";s:19:\"2020-01-27 14:39:02\";s:12:\"english_name\";s:5:\"Czech\";s:11:\"native_name\";s:9:\"Čeština\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.3.2/cs_CZ.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"cs\";i:2;s:3:\"ces\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:11:\"Pokračovat\";}}s:2:\"cy\";a:8:{s:8:\"language\";s:2:\"cy\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-02 08:17:25\";s:12:\"english_name\";s:5:\"Welsh\";s:11:\"native_name\";s:7:\"Cymraeg\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/cy.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"cy\";i:2;s:3:\"cym\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Parhau\";}}s:5:\"da_DK\";a:8:{s:8:\"language\";s:5:\"da_DK\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-17 23:41:31\";s:12:\"english_name\";s:6:\"Danish\";s:11:\"native_name\";s:5:\"Dansk\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/da_DK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"da\";i:2;s:3:\"dan\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Forts&#230;t\";}}s:12:\"de_DE_formal\";a:8:{s:8:\"language\";s:12:\"de_DE_formal\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-13 20:26:58\";s:12:\"english_name\";s:15:\"German (Formal)\";s:11:\"native_name\";s:13:\"Deutsch (Sie)\";s:7:\"package\";s:69:\"https://downloads.wordpress.org/translation/core/5.4/de_DE_formal.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Fortfahren\";}}s:14:\"de_CH_informal\";a:8:{s:8:\"language\";s:14:\"de_CH_informal\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-09 09:47:26\";s:12:\"english_name\";s:30:\"German (Switzerland, Informal)\";s:11:\"native_name\";s:21:\"Deutsch (Schweiz, Du)\";s:7:\"package\";s:71:\"https://downloads.wordpress.org/translation/core/5.4/de_CH_informal.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:5:\"de_CH\";a:8:{s:8:\"language\";s:5:\"de_CH\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-09 09:46:58\";s:12:\"english_name\";s:20:\"German (Switzerland)\";s:11:\"native_name\";s:17:\"Deutsch (Schweiz)\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/de_CH.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Fortfahren\";}}s:5:\"de_AT\";a:8:{s:8:\"language\";s:5:\"de_AT\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-07 21:08:21\";s:12:\"english_name\";s:16:\"German (Austria)\";s:11:\"native_name\";s:21:\"Deutsch (Österreich)\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/de_AT.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:5:\"de_DE\";a:8:{s:8:\"language\";s:5:\"de_DE\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-15 20:04:12\";s:12:\"english_name\";s:6:\"German\";s:11:\"native_name\";s:7:\"Deutsch\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/de_DE.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Fortfahren\";}}s:3:\"dzo\";a:8:{s:8:\"language\";s:3:\"dzo\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-06-29 08:59:03\";s:12:\"english_name\";s:8:\"Dzongkha\";s:11:\"native_name\";s:18:\"རྫོང་ཁ\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/dzo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"dz\";i:2;s:3:\"dzo\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:2:\"el\";a:8:{s:8:\"language\";s:2:\"el\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-11 18:49:34\";s:12:\"english_name\";s:5:\"Greek\";s:11:\"native_name\";s:16:\"Ελληνικά\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/el.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"el\";i:2;s:3:\"ell\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"Συνέχεια\";}}s:5:\"en_NZ\";a:8:{s:8:\"language\";s:5:\"en_NZ\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-31 22:29:33\";s:12:\"english_name\";s:21:\"English (New Zealand)\";s:11:\"native_name\";s:21:\"English (New Zealand)\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/en_NZ.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_CA\";a:8:{s:8:\"language\";s:5:\"en_CA\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-30 14:26:50\";s:12:\"english_name\";s:16:\"English (Canada)\";s:11:\"native_name\";s:16:\"English (Canada)\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/en_CA.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_AU\";a:8:{s:8:\"language\";s:5:\"en_AU\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-30 09:33:04\";s:12:\"english_name\";s:19:\"English (Australia)\";s:11:\"native_name\";s:19:\"English (Australia)\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/en_AU.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_GB\";a:8:{s:8:\"language\";s:5:\"en_GB\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-07 15:53:44\";s:12:\"english_name\";s:12:\"English (UK)\";s:11:\"native_name\";s:12:\"English (UK)\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/en_GB.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_ZA\";a:8:{s:8:\"language\";s:5:\"en_ZA\";s:7:\"version\";s:5:\"5.2.5\";s:7:\"updated\";s:19:\"2019-06-20 10:05:05\";s:12:\"english_name\";s:22:\"English (South Africa)\";s:11:\"native_name\";s:22:\"English (South Africa)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.2.5/en_ZA.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:2:\"eo\";a:8:{s:8:\"language\";s:2:\"eo\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-09 09:50:08\";s:12:\"english_name\";s:9:\"Esperanto\";s:11:\"native_name\";s:9:\"Esperanto\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/eo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"eo\";i:2;s:3:\"epo\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Daŭrigi\";}}s:5:\"es_AR\";a:8:{s:8:\"language\";s:5:\"es_AR\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-15 12:49:11\";s:12:\"english_name\";s:19:\"Spanish (Argentina)\";s:11:\"native_name\";s:21:\"Español de Argentina\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/es_AR.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CO\";a:8:{s:8:\"language\";s:5:\"es_CO\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-31 21:27:23\";s:12:\"english_name\";s:18:\"Spanish (Colombia)\";s:11:\"native_name\";s:20:\"Español de Colombia\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/es_CO.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_MX\";a:8:{s:8:\"language\";s:5:\"es_MX\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-26 14:31:24\";s:12:\"english_name\";s:16:\"Spanish (Mexico)\";s:11:\"native_name\";s:19:\"Español de México\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/es_MX.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_ES\";a:8:{s:8:\"language\";s:5:\"es_ES\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-17 07:21:46\";s:12:\"english_name\";s:15:\"Spanish (Spain)\";s:11:\"native_name\";s:8:\"Español\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/es_ES.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_UY\";a:8:{s:8:\"language\";s:5:\"es_UY\";s:7:\"version\";s:5:\"5.3.2\";s:7:\"updated\";s:19:\"2019-11-12 04:43:11\";s:12:\"english_name\";s:17:\"Spanish (Uruguay)\";s:11:\"native_name\";s:19:\"Español de Uruguay\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.3.2/es_UY.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_VE\";a:8:{s:8:\"language\";s:5:\"es_VE\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-01 12:31:31\";s:12:\"english_name\";s:19:\"Spanish (Venezuela)\";s:11:\"native_name\";s:21:\"Español de Venezuela\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/es_VE.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CR\";a:8:{s:8:\"language\";s:5:\"es_CR\";s:7:\"version\";s:5:\"5.3.2\";s:7:\"updated\";s:19:\"2020-02-10 15:47:49\";s:12:\"english_name\";s:20:\"Spanish (Costa Rica)\";s:11:\"native_name\";s:22:\"Español de Costa Rica\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.3.2/es_CR.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CL\";a:8:{s:8:\"language\";s:5:\"es_CL\";s:7:\"version\";s:5:\"5.2.5\";s:7:\"updated\";s:19:\"2019-12-07 04:01:34\";s:12:\"english_name\";s:15:\"Spanish (Chile)\";s:11:\"native_name\";s:17:\"Español de Chile\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.2.5/es_CL.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_GT\";a:8:{s:8:\"language\";s:5:\"es_GT\";s:7:\"version\";s:3:\"5.1\";s:7:\"updated\";s:19:\"2019-03-02 06:35:01\";s:12:\"english_name\";s:19:\"Spanish (Guatemala)\";s:11:\"native_name\";s:21:\"Español de Guatemala\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.1/es_GT.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_PE\";a:8:{s:8:\"language\";s:5:\"es_PE\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-04 01:49:30\";s:12:\"english_name\";s:14:\"Spanish (Peru)\";s:11:\"native_name\";s:17:\"Español de Perú\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/es_PE.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:2:\"et\";a:8:{s:8:\"language\";s:2:\"et\";s:7:\"version\";s:9:\"5.0-beta3\";s:7:\"updated\";s:19:\"2018-11-28 16:04:33\";s:12:\"english_name\";s:8:\"Estonian\";s:11:\"native_name\";s:5:\"Eesti\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/5.0-beta3/et.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"et\";i:2;s:3:\"est\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Jätka\";}}s:2:\"eu\";a:8:{s:8:\"language\";s:2:\"eu\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-29 06:22:39\";s:12:\"english_name\";s:6:\"Basque\";s:11:\"native_name\";s:7:\"Euskara\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/eu.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"eu\";i:2;s:3:\"eus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Jarraitu\";}}s:5:\"fa_IR\";a:8:{s:8:\"language\";s:5:\"fa_IR\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-01 16:16:08\";s:12:\"english_name\";s:7:\"Persian\";s:11:\"native_name\";s:10:\"فارسی\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/fa_IR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fa\";i:2;s:3:\"fas\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"ادامه\";}}s:2:\"fi\";a:8:{s:8:\"language\";s:2:\"fi\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-31 04:35:33\";s:12:\"english_name\";s:7:\"Finnish\";s:11:\"native_name\";s:5:\"Suomi\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/fi.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fi\";i:2;s:3:\"fin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Jatka\";}}s:5:\"fr_FR\";a:8:{s:8:\"language\";s:5:\"fr_FR\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-17 14:26:22\";s:12:\"english_name\";s:15:\"French (France)\";s:11:\"native_name\";s:9:\"Français\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/fr_FR.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"fr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:5:\"fr_CA\";a:8:{s:8:\"language\";s:5:\"fr_CA\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-16 22:05:34\";s:12:\"english_name\";s:15:\"French (Canada)\";s:11:\"native_name\";s:19:\"Français du Canada\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/fr_CA.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fr\";i:2;s:3:\"fra\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:5:\"fr_BE\";a:8:{s:8:\"language\";s:5:\"fr_BE\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-01-31 11:16:06\";s:12:\"english_name\";s:16:\"French (Belgium)\";s:11:\"native_name\";s:21:\"Français de Belgique\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/fr_BE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fr\";i:2;s:3:\"fra\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:3:\"fur\";a:8:{s:8:\"language\";s:3:\"fur\";s:7:\"version\";s:5:\"4.8.6\";s:7:\"updated\";s:19:\"2018-01-29 17:32:35\";s:12:\"english_name\";s:8:\"Friulian\";s:11:\"native_name\";s:8:\"Friulian\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.8.6/fur.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"fur\";i:3;s:3:\"fur\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:2:\"gd\";a:8:{s:8:\"language\";s:2:\"gd\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-08-23 17:41:37\";s:12:\"english_name\";s:15:\"Scottish Gaelic\";s:11:\"native_name\";s:9:\"Gàidhlig\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/gd.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"gd\";i:2;s:3:\"gla\";i:3;s:3:\"gla\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"Lean air adhart\";}}s:5:\"gl_ES\";a:8:{s:8:\"language\";s:5:\"gl_ES\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-28 18:04:12\";s:12:\"english_name\";s:8:\"Galician\";s:11:\"native_name\";s:6:\"Galego\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/gl_ES.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"gl\";i:2;s:3:\"glg\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:2:\"gu\";a:8:{s:8:\"language\";s:2:\"gu\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-09-14 12:33:48\";s:12:\"english_name\";s:8:\"Gujarati\";s:11:\"native_name\";s:21:\"ગુજરાતી\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.8/gu.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"gu\";i:2;s:3:\"guj\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:31:\"ચાલુ રાખવું\";}}s:3:\"haz\";a:8:{s:8:\"language\";s:3:\"haz\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-05 00:59:09\";s:12:\"english_name\";s:8:\"Hazaragi\";s:11:\"native_name\";s:15:\"هزاره گی\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.4.2/haz.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"haz\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"ادامه\";}}s:5:\"he_IL\";a:8:{s:8:\"language\";s:5:\"he_IL\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-16 23:00:31\";s:12:\"english_name\";s:6:\"Hebrew\";s:11:\"native_name\";s:16:\"עִבְרִית\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/he_IL.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"he\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"להמשיך\";}}s:5:\"hi_IN\";a:8:{s:8:\"language\";s:5:\"hi_IN\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-06-17 09:33:44\";s:12:\"english_name\";s:5:\"Hindi\";s:11:\"native_name\";s:18:\"हिन्दी\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/hi_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hi\";i:2;s:3:\"hin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"जारी\";}}s:2:\"hr\";a:8:{s:8:\"language\";s:2:\"hr\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-04 10:17:08\";s:12:\"english_name\";s:8:\"Croatian\";s:11:\"native_name\";s:8:\"Hrvatski\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/hr.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hr\";i:2;s:3:\"hrv\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nastavi\";}}s:3:\"hsb\";a:8:{s:8:\"language\";s:3:\"hsb\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-24 17:30:39\";s:12:\"english_name\";s:13:\"Upper Sorbian\";s:11:\"native_name\";s:17:\"Hornjoserbšćina\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/translation/core/5.4/hsb.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"hsb\";i:3;s:3:\"hsb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:4:\"Dale\";}}s:5:\"hu_HU\";a:8:{s:8:\"language\";s:5:\"hu_HU\";s:7:\"version\";s:5:\"5.1.1\";s:7:\"updated\";s:19:\"2019-03-19 14:36:40\";s:12:\"english_name\";s:9:\"Hungarian\";s:11:\"native_name\";s:6:\"Magyar\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.1.1/hu_HU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hu\";i:2;s:3:\"hun\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Tovább\";}}s:2:\"hy\";a:8:{s:8:\"language\";s:2:\"hy\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-12-03 16:21:10\";s:12:\"english_name\";s:8:\"Armenian\";s:11:\"native_name\";s:14:\"Հայերեն\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/hy.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hy\";i:2;s:3:\"hye\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Շարունակել\";}}s:5:\"id_ID\";a:8:{s:8:\"language\";s:5:\"id_ID\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-28 23:32:14\";s:12:\"english_name\";s:10:\"Indonesian\";s:11:\"native_name\";s:16:\"Bahasa Indonesia\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/id_ID.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"id\";i:2;s:3:\"ind\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Lanjutkan\";}}s:5:\"is_IS\";a:8:{s:8:\"language\";s:5:\"is_IS\";s:7:\"version\";s:6:\"4.7.11\";s:7:\"updated\";s:19:\"2018-09-20 11:13:37\";s:12:\"english_name\";s:9:\"Icelandic\";s:11:\"native_name\";s:9:\"Íslenska\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.7.11/is_IS.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"is\";i:2;s:3:\"isl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Áfram\";}}s:5:\"it_IT\";a:8:{s:8:\"language\";s:5:\"it_IT\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-14 10:03:06\";s:12:\"english_name\";s:7:\"Italian\";s:11:\"native_name\";s:8:\"Italiano\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/it_IT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"it\";i:2;s:3:\"ita\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continua\";}}s:2:\"ja\";a:8:{s:8:\"language\";s:2:\"ja\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-15 06:16:12\";s:12:\"english_name\";s:8:\"Japanese\";s:11:\"native_name\";s:9:\"日本語\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/ja.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"ja\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"続ける\";}}s:5:\"jv_ID\";a:8:{s:8:\"language\";s:5:\"jv_ID\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-24 13:53:29\";s:12:\"english_name\";s:8:\"Javanese\";s:11:\"native_name\";s:9:\"Basa Jawa\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/jv_ID.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"jv\";i:2;s:3:\"jav\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nutugne\";}}s:5:\"ka_GE\";a:8:{s:8:\"language\";s:5:\"ka_GE\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-27 08:22:12\";s:12:\"english_name\";s:8:\"Georgian\";s:11:\"native_name\";s:21:\"ქართული\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/ka_GE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ka\";i:2;s:3:\"kat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"გაგრძელება\";}}s:3:\"kab\";a:8:{s:8:\"language\";s:3:\"kab\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-12 14:40:47\";s:12:\"english_name\";s:6:\"Kabyle\";s:11:\"native_name\";s:9:\"Taqbaylit\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/translation/core/5.4/kab.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"kab\";i:3;s:3:\"kab\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:2:\"kk\";a:8:{s:8:\"language\";s:2:\"kk\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-12 08:08:32\";s:12:\"english_name\";s:6:\"Kazakh\";s:11:\"native_name\";s:19:\"Қазақ тілі\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.5/kk.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"kk\";i:2;s:3:\"kaz\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Жалғастыру\";}}s:2:\"km\";a:8:{s:8:\"language\";s:2:\"km\";s:7:\"version\";s:5:\"5.0.3\";s:7:\"updated\";s:19:\"2019-01-09 07:34:10\";s:12:\"english_name\";s:5:\"Khmer\";s:11:\"native_name\";s:27:\"ភាសាខ្មែរ\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/5.0.3/km.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"km\";i:2;s:3:\"khm\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"បន្ត\";}}s:2:\"kn\";a:8:{s:8:\"language\";s:2:\"kn\";s:7:\"version\";s:6:\"4.9.13\";s:7:\"updated\";s:19:\"2019-12-04 12:22:34\";s:12:\"english_name\";s:7:\"Kannada\";s:11:\"native_name\";s:15:\"ಕನ್ನಡ\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.9.13/kn.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"kn\";i:2;s:3:\"kan\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"ಮುಂದುವರೆಸಿ\";}}s:5:\"ko_KR\";a:8:{s:8:\"language\";s:5:\"ko_KR\";s:7:\"version\";s:5:\"5.2.5\";s:7:\"updated\";s:19:\"2019-11-05 01:54:57\";s:12:\"english_name\";s:6:\"Korean\";s:11:\"native_name\";s:9:\"한국어\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.2.5/ko_KR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ko\";i:2;s:3:\"kor\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"계속\";}}s:3:\"ckb\";a:8:{s:8:\"language\";s:3:\"ckb\";s:7:\"version\";s:5:\"4.9.9\";s:7:\"updated\";s:19:\"2018-12-18 14:32:44\";s:12:\"english_name\";s:16:\"Kurdish (Sorani)\";s:11:\"native_name\";s:13:\"كوردی‎\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.9.9/ckb.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ku\";i:3;s:3:\"ckb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"به‌رده‌وام به‌\";}}s:2:\"lo\";a:8:{s:8:\"language\";s:2:\"lo\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-12 09:59:23\";s:12:\"english_name\";s:3:\"Lao\";s:11:\"native_name\";s:21:\"ພາສາລາວ\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/lo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lo\";i:2;s:3:\"lao\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"ຕໍ່\";}}s:5:\"lt_LT\";a:8:{s:8:\"language\";s:5:\"lt_LT\";s:7:\"version\";s:5:\"5.2.5\";s:7:\"updated\";s:19:\"2019-10-19 19:23:46\";s:12:\"english_name\";s:10:\"Lithuanian\";s:11:\"native_name\";s:15:\"Lietuvių kalba\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.2.5/lt_LT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lt\";i:2;s:3:\"lit\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Tęsti\";}}s:2:\"lv\";a:8:{s:8:\"language\";s:2:\"lv\";s:7:\"version\";s:6:\"4.7.15\";s:7:\"updated\";s:19:\"2019-05-10 10:24:08\";s:12:\"english_name\";s:7:\"Latvian\";s:11:\"native_name\";s:16:\"Latviešu valoda\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.15/lv.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lv\";i:2;s:3:\"lav\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Turpināt\";}}s:5:\"mk_MK\";a:8:{s:8:\"language\";s:5:\"mk_MK\";s:7:\"version\";s:5:\"5.2.3\";s:7:\"updated\";s:19:\"2019-09-08 12:57:25\";s:12:\"english_name\";s:10:\"Macedonian\";s:11:\"native_name\";s:31:\"Македонски јазик\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.2.3/mk_MK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"mk\";i:2;s:3:\"mkd\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"Продолжи\";}}s:5:\"ml_IN\";a:8:{s:8:\"language\";s:5:\"ml_IN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-27 03:43:32\";s:12:\"english_name\";s:9:\"Malayalam\";s:11:\"native_name\";s:18:\"മലയാളം\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/ml_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ml\";i:2;s:3:\"mal\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:18:\"തുടരുക\";}}s:2:\"mn\";a:8:{s:8:\"language\";s:2:\"mn\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-12 07:29:35\";s:12:\"english_name\";s:9:\"Mongolian\";s:11:\"native_name\";s:12:\"Монгол\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/mn.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"mn\";i:2;s:3:\"mon\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:24:\"Үргэлжлүүлэх\";}}s:2:\"mr\";a:8:{s:8:\"language\";s:2:\"mr\";s:7:\"version\";s:6:\"4.8.12\";s:7:\"updated\";s:19:\"2018-02-13 07:38:55\";s:12:\"english_name\";s:7:\"Marathi\";s:11:\"native_name\";s:15:\"मराठी\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.8.12/mr.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"mr\";i:2;s:3:\"mar\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:25:\"सुरु ठेवा\";}}s:5:\"ms_MY\";a:8:{s:8:\"language\";s:5:\"ms_MY\";s:7:\"version\";s:5:\"4.9.8\";s:7:\"updated\";s:19:\"2018-08-30 20:27:25\";s:12:\"english_name\";s:5:\"Malay\";s:11:\"native_name\";s:13:\"Bahasa Melayu\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.8/ms_MY.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ms\";i:2;s:3:\"msa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Teruskan\";}}s:5:\"my_MM\";a:8:{s:8:\"language\";s:5:\"my_MM\";s:7:\"version\";s:6:\"4.1.20\";s:7:\"updated\";s:19:\"2015-03-26 15:57:42\";s:12:\"english_name\";s:17:\"Myanmar (Burmese)\";s:11:\"native_name\";s:15:\"ဗမာစာ\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.1.20/my_MM.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"my\";i:2;s:3:\"mya\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:54:\"ဆက်လက်လုပ်ေဆာင်ပါ။\";}}s:5:\"nb_NO\";a:8:{s:8:\"language\";s:5:\"nb_NO\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-31 23:44:30\";s:12:\"english_name\";s:19:\"Norwegian (Bokmål)\";s:11:\"native_name\";s:13:\"Norsk bokmål\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/nb_NO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nb\";i:2;s:3:\"nob\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Fortsett\";}}s:5:\"ne_NP\";a:8:{s:8:\"language\";s:5:\"ne_NP\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-27 10:30:26\";s:12:\"english_name\";s:6:\"Nepali\";s:11:\"native_name\";s:18:\"नेपाली\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/ne_NP.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ne\";i:2;s:3:\"nep\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:31:\"जारीराख्नु \";}}s:5:\"nl_NL\";a:8:{s:8:\"language\";s:5:\"nl_NL\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-01 08:16:51\";s:12:\"english_name\";s:5:\"Dutch\";s:11:\"native_name\";s:10:\"Nederlands\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/nl_NL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:12:\"nl_NL_formal\";a:8:{s:8:\"language\";s:12:\"nl_NL_formal\";s:7:\"version\";s:5:\"5.3.2\";s:7:\"updated\";s:19:\"2019-12-15 20:22:22\";s:12:\"english_name\";s:14:\"Dutch (Formal)\";s:11:\"native_name\";s:20:\"Nederlands (Formeel)\";s:7:\"package\";s:71:\"https://downloads.wordpress.org/translation/core/5.3.2/nl_NL_formal.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:5:\"nl_BE\";a:8:{s:8:\"language\";s:5:\"nl_BE\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-01 15:32:20\";s:12:\"english_name\";s:15:\"Dutch (Belgium)\";s:11:\"native_name\";s:20:\"Nederlands (België)\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/nl_BE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:5:\"nn_NO\";a:8:{s:8:\"language\";s:5:\"nn_NO\";s:7:\"version\";s:5:\"5.3.2\";s:7:\"updated\";s:19:\"2020-01-01 08:53:00\";s:12:\"english_name\";s:19:\"Norwegian (Nynorsk)\";s:11:\"native_name\";s:13:\"Norsk nynorsk\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.3.2/nn_NO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nn\";i:2;s:3:\"nno\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Hald fram\";}}s:3:\"oci\";a:8:{s:8:\"language\";s:3:\"oci\";s:7:\"version\";s:5:\"4.8.3\";s:7:\"updated\";s:19:\"2017-08-25 10:03:08\";s:12:\"english_name\";s:7:\"Occitan\";s:11:\"native_name\";s:7:\"Occitan\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.8.3/oci.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"oc\";i:2;s:3:\"oci\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Contunhar\";}}s:5:\"pa_IN\";a:8:{s:8:\"language\";s:5:\"pa_IN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-16 05:19:43\";s:12:\"english_name\";s:7:\"Punjabi\";s:11:\"native_name\";s:18:\"ਪੰਜਾਬੀ\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/pa_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pa\";i:2;s:3:\"pan\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:25:\"ਜਾਰੀ ਰੱਖੋ\";}}s:5:\"pl_PL\";a:8:{s:8:\"language\";s:5:\"pl_PL\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-14 17:01:13\";s:12:\"english_name\";s:6:\"Polish\";s:11:\"native_name\";s:6:\"Polski\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/pl_PL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pl\";i:2;s:3:\"pol\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Kontynuuj\";}}s:2:\"ps\";a:8:{s:8:\"language\";s:2:\"ps\";s:7:\"version\";s:6:\"4.1.20\";s:7:\"updated\";s:19:\"2015-03-29 22:19:48\";s:12:\"english_name\";s:6:\"Pashto\";s:11:\"native_name\";s:8:\"پښتو\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.1.20/ps.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ps\";i:2;s:3:\"pus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"دوام\";}}s:5:\"pt_PT\";a:8:{s:8:\"language\";s:5:\"pt_PT\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-18 00:41:44\";s:12:\"english_name\";s:21:\"Portuguese (Portugal)\";s:11:\"native_name\";s:10:\"Português\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/pt_PT.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"pt\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:10:\"pt_PT_ao90\";a:8:{s:8:\"language\";s:10:\"pt_PT_ao90\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-30 09:19:21\";s:12:\"english_name\";s:27:\"Portuguese (Portugal, AO90)\";s:11:\"native_name\";s:17:\"Português (AO90)\";s:7:\"package\";s:67:\"https://downloads.wordpress.org/translation/core/5.4/pt_PT_ao90.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"pt\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"pt_BR\";a:8:{s:8:\"language\";s:5:\"pt_BR\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-31 21:55:46\";s:12:\"english_name\";s:19:\"Portuguese (Brazil)\";s:11:\"native_name\";s:20:\"Português do Brasil\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/pt_BR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pt\";i:2;s:3:\"por\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"pt_AO\";a:8:{s:8:\"language\";s:5:\"pt_AO\";s:7:\"version\";s:5:\"5.3.2\";s:7:\"updated\";s:19:\"2019-12-14 08:20:00\";s:12:\"english_name\";s:19:\"Portuguese (Angola)\";s:11:\"native_name\";s:20:\"Português de Angola\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.3.2/pt_AO.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"pt\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:3:\"rhg\";a:8:{s:8:\"language\";s:3:\"rhg\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-03-16 13:03:18\";s:12:\"english_name\";s:8:\"Rohingya\";s:11:\"native_name\";s:8:\"Ruáinga\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/rhg.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"rhg\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"ro_RO\";a:8:{s:8:\"language\";s:5:\"ro_RO\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-17 09:49:20\";s:12:\"english_name\";s:8:\"Romanian\";s:11:\"native_name\";s:8:\"Română\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/ro_RO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ro\";i:2;s:3:\"ron\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuă\";}}s:5:\"ru_RU\";a:8:{s:8:\"language\";s:5:\"ru_RU\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-24 17:05:08\";s:12:\"english_name\";s:7:\"Russian\";s:11:\"native_name\";s:14:\"Русский\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/ru_RU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ru\";i:2;s:3:\"rus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продолжить\";}}s:3:\"sah\";a:8:{s:8:\"language\";s:3:\"sah\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-21 02:06:41\";s:12:\"english_name\";s:5:\"Sakha\";s:11:\"native_name\";s:14:\"Сахалыы\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/sah.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"sah\";i:3;s:3:\"sah\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Салҕаа\";}}s:3:\"snd\";a:8:{s:8:\"language\";s:3:\"snd\";s:7:\"version\";s:3:\"5.3\";s:7:\"updated\";s:19:\"2019-11-12 04:37:38\";s:12:\"english_name\";s:6:\"Sindhi\";s:11:\"native_name\";s:8:\"سنڌي\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/translation/core/5.3/snd.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"sd\";i:2;s:2:\"sd\";i:3;s:3:\"snd\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"اڳتي هلو\";}}s:5:\"si_LK\";a:8:{s:8:\"language\";s:5:\"si_LK\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-12 06:00:52\";s:12:\"english_name\";s:7:\"Sinhala\";s:11:\"native_name\";s:15:\"සිංහල\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/si_LK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"si\";i:2;s:3:\"sin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:44:\"දිගටම කරගෙන යන්න\";}}s:5:\"sk_SK\";a:8:{s:8:\"language\";s:5:\"sk_SK\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-16 06:27:02\";s:12:\"english_name\";s:6:\"Slovak\";s:11:\"native_name\";s:11:\"Slovenčina\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/sk_SK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sk\";i:2;s:3:\"slk\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Pokračovať\";}}s:3:\"skr\";a:8:{s:8:\"language\";s:3:\"skr\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-15 03:12:06\";s:12:\"english_name\";s:7:\"Saraiki\";s:11:\"native_name\";s:14:\"سرائیکی\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/translation/core/5.4/skr.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"skr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:17:\"جاری رکھو\";}}s:5:\"sl_SI\";a:8:{s:8:\"language\";s:5:\"sl_SI\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2018-01-04 13:33:13\";s:12:\"english_name\";s:9:\"Slovenian\";s:11:\"native_name\";s:13:\"Slovenščina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.2/sl_SI.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sl\";i:2;s:3:\"slv\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Nadaljujte\";}}s:2:\"sq\";a:8:{s:8:\"language\";s:2:\"sq\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-08 13:12:01\";s:12:\"english_name\";s:8:\"Albanian\";s:11:\"native_name\";s:5:\"Shqip\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/sq.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sq\";i:2;s:3:\"sqi\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Vazhdo\";}}s:5:\"sr_RS\";a:8:{s:8:\"language\";s:5:\"sr_RS\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-01 01:42:23\";s:12:\"english_name\";s:7:\"Serbian\";s:11:\"native_name\";s:23:\"Српски језик\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/sr_RS.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sr\";i:2;s:3:\"srp\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:14:\"Настави\";}}s:5:\"sv_SE\";a:8:{s:8:\"language\";s:5:\"sv_SE\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-24 17:02:49\";s:12:\"english_name\";s:7:\"Swedish\";s:11:\"native_name\";s:7:\"Svenska\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/sv_SE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sv\";i:2;s:3:\"swe\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Fortsätt\";}}s:2:\"sw\";a:8:{s:8:\"language\";s:2:\"sw\";s:7:\"version\";s:5:\"5.2.5\";s:7:\"updated\";s:19:\"2019-10-22 00:19:41\";s:12:\"english_name\";s:7:\"Swahili\";s:11:\"native_name\";s:9:\"Kiswahili\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/5.2.5/sw.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sw\";i:2;s:3:\"swa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Endelea\";}}s:3:\"szl\";a:8:{s:8:\"language\";s:3:\"szl\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-24 19:58:14\";s:12:\"english_name\";s:8:\"Silesian\";s:11:\"native_name\";s:17:\"Ślōnskŏ gŏdka\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/szl.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"szl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:13:\"Kōntynuować\";}}s:5:\"ta_IN\";a:8:{s:8:\"language\";s:5:\"ta_IN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-27 03:22:47\";s:12:\"english_name\";s:5:\"Tamil\";s:11:\"native_name\";s:15:\"தமிழ்\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/ta_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ta\";i:2;s:3:\"tam\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:24:\"தொடரவும்\";}}s:2:\"te\";a:8:{s:8:\"language\";s:2:\"te\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-26 15:47:39\";s:12:\"english_name\";s:6:\"Telugu\";s:11:\"native_name\";s:18:\"తెలుగు\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/te.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"te\";i:2;s:3:\"tel\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"కొనసాగించు\";}}s:2:\"th\";a:8:{s:8:\"language\";s:2:\"th\";s:7:\"version\";s:5:\"5.2.4\";s:7:\"updated\";s:19:\"2019-10-19 08:19:37\";s:12:\"english_name\";s:4:\"Thai\";s:11:\"native_name\";s:9:\"ไทย\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/5.2.4/th.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"th\";i:2;s:3:\"tha\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"ต่อไป\";}}s:2:\"tl\";a:8:{s:8:\"language\";s:2:\"tl\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-12-30 02:38:08\";s:12:\"english_name\";s:7:\"Tagalog\";s:11:\"native_name\";s:7:\"Tagalog\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/tl.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tl\";i:2;s:3:\"tgl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Magpatuloy\";}}s:5:\"tr_TR\";a:8:{s:8:\"language\";s:5:\"tr_TR\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-13 20:18:20\";s:12:\"english_name\";s:7:\"Turkish\";s:11:\"native_name\";s:8:\"Türkçe\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/tr_TR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tr\";i:2;s:3:\"tur\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Devam\";}}s:5:\"tt_RU\";a:8:{s:8:\"language\";s:5:\"tt_RU\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-20 20:20:50\";s:12:\"english_name\";s:5:\"Tatar\";s:11:\"native_name\";s:19:\"Татар теле\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/tt_RU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tt\";i:2;s:3:\"tat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:17:\"дәвам итү\";}}s:3:\"tah\";a:8:{s:8:\"language\";s:3:\"tah\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-03-06 18:39:39\";s:12:\"english_name\";s:8:\"Tahitian\";s:11:\"native_name\";s:10:\"Reo Tahiti\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/tah.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"ty\";i:2;s:3:\"tah\";i:3;s:3:\"tah\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"ug_CN\";a:8:{s:8:\"language\";s:5:\"ug_CN\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-04-12 12:31:53\";s:12:\"english_name\";s:6:\"Uighur\";s:11:\"native_name\";s:16:\"ئۇيغۇرچە\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/ug_CN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ug\";i:2;s:3:\"uig\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:26:\"داۋاملاشتۇرۇش\";}}s:2:\"uk\";a:8:{s:8:\"language\";s:2:\"uk\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-04-13 09:37:25\";s:12:\"english_name\";s:9:\"Ukrainian\";s:11:\"native_name\";s:20:\"Українська\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/translation/core/5.4/uk.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"uk\";i:2;s:3:\"ukr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продовжити\";}}s:2:\"ur\";a:8:{s:8:\"language\";s:2:\"ur\";s:7:\"version\";s:5:\"5.1.4\";s:7:\"updated\";s:19:\"2020-04-09 10:48:08\";s:12:\"english_name\";s:4:\"Urdu\";s:11:\"native_name\";s:8:\"اردو\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/5.1.4/ur.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ur\";i:2;s:3:\"urd\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:19:\"جاری رکھیں\";}}s:5:\"uz_UZ\";a:8:{s:8:\"language\";s:5:\"uz_UZ\";s:7:\"version\";s:5:\"5.0.8\";s:7:\"updated\";s:19:\"2019-01-23 12:32:40\";s:12:\"english_name\";s:5:\"Uzbek\";s:11:\"native_name\";s:11:\"O‘zbekcha\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.0.8/uz_UZ.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"uz\";i:2;s:3:\"uzb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продолжить\";}}s:2:\"vi\";a:8:{s:8:\"language\";s:2:\"vi\";s:7:\"version\";s:5:\"5.3.2\";s:7:\"updated\";s:19:\"2019-12-07 15:52:24\";s:12:\"english_name\";s:10:\"Vietnamese\";s:11:\"native_name\";s:14:\"Tiếng Việt\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/5.3.2/vi.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"vi\";i:2;s:3:\"vie\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Tiếp tục\";}}s:5:\"zh_TW\";a:8:{s:8:\"language\";s:5:\"zh_TW\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-26 15:11:53\";s:12:\"english_name\";s:16:\"Chinese (Taiwan)\";s:11:\"native_name\";s:12:\"繁體中文\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/zh_TW.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"繼續\";}}s:5:\"zh_CN\";a:8:{s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:3:\"5.4\";s:7:\"updated\";s:19:\"2020-03-30 20:54:59\";s:12:\"english_name\";s:15:\"Chinese (China)\";s:11:\"native_name\";s:12:\"简体中文\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/5.4/zh_CN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"继续\";}}s:5:\"zh_HK\";a:8:{s:8:\"language\";s:5:\"zh_HK\";s:7:\"version\";s:5:\"5.3.2\";s:7:\"updated\";s:19:\"2020-03-08 12:12:22\";s:12:\"english_name\";s:19:\"Chinese (Hong Kong)\";s:11:\"native_name\";s:16:\"香港中文版	\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.3.2/zh_HK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"繼續\";}}}','no');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=259 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` VALUES (2,3,'_wp_page_template','default'),(3,5,'_edit_last','1'),(4,5,'_edit_lock','1533654120:1'),(14,10,'_edit_last','1'),(15,10,'_edit_lock','1548436480:1'),(16,11,'_wp_attached_file','2018/07/meface.jpeg'),(17,11,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:200;s:6:\"height\";i:200;s:4:\"file\";s:19:\"2018/07/meface.jpeg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(25,15,'_menu_item_type','custom'),(26,15,'_menu_item_menu_item_parent','0'),(27,15,'_menu_item_object_id','15'),(28,15,'_menu_item_object','custom'),(29,15,'_menu_item_target',''),(30,15,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(31,15,'_menu_item_xfn',''),(32,15,'_menu_item_url','/'),(48,19,'_edit_last','1'),(49,19,'_edit_lock','1550340129:1'),(50,21,'_menu_item_type','post_type'),(51,21,'_menu_item_menu_item_parent','0'),(52,21,'_menu_item_object_id','19'),(53,21,'_menu_item_object','page'),(54,21,'_menu_item_target',''),(55,21,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(56,21,'_menu_item_xfn',''),(57,21,'_menu_item_url',''),(59,22,'_wp_attached_file','2018/07/AIoTLogo.jpg'),(60,22,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:262;s:6:\"height\";i:268;s:4:\"file\";s:20:\"2018/07/AIoTLogo.jpg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(61,19,'_thumbnail_id','22'),(62,23,'_edit_last','1'),(63,23,'_edit_lock','1530920919:1'),(64,24,'_wp_attached_file','2018/07/kerbob.png'),(65,24,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:424;s:6:\"height\";i:186;s:4:\"file\";s:18:\"2018/07/kerbob.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(66,23,'_thumbnail_id','24'),(67,26,'_menu_item_type','post_type'),(68,26,'_menu_item_menu_item_parent','0'),(69,26,'_menu_item_object_id','23'),(70,26,'_menu_item_object','page'),(71,26,'_menu_item_target',''),(72,26,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(73,26,'_menu_item_xfn',''),(74,26,'_menu_item_url',''),(79,31,'_menu_item_type','custom'),(80,31,'_menu_item_menu_item_parent','0'),(81,31,'_menu_item_object_id','31'),(82,31,'_menu_item_object','custom'),(83,31,'_menu_item_target',''),(84,31,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(85,31,'_menu_item_xfn',''),(86,31,'_menu_item_url','http://coderdx.io/wp-content/uploads/2019/02/DaveBrixiusResume.pdf'),(118,44,'_form','<label> Your Name (required)\n    [text* your-name] </label>\n\n<label> Your Email (required)\n    [email* your-email] </label>\n\n<label> Subject\n    [text your-subject] </label>\n\n<label> Your Message\n    [textarea your-message] </label>\n\n[recaptcha]\n&nbsp;\n&nbsp;\n[submit \"Send\"]'),(119,44,'_mail','a:9:{s:6:\"active\";b:1;s:7:\"subject\";s:40:\"Dave Brixius (@CoderDx) \"[your-subject]\"\";s:6:\"sender\";s:34:\"[your-name] <wordpress@coderdx.io>\";s:9:\"recipient\";s:22:\"dave.brixius@gmail.com\";s:4:\"body\";s:179:\"From: [your-name] <[your-email]>\nSubject: [your-subject]\n\nMessage Body:\n[your-message]\n\n-- \nThis e-mail was sent from a contact form on Dave Brixius (@CoderDx) (http://coderdx.io)\";s:18:\"additional_headers\";s:22:\"Reply-To: [your-email]\";s:11:\"attachments\";s:0:\"\";s:8:\"use_html\";b:0;s:13:\"exclude_blank\";b:0;}'),(120,44,'_mail_2','a:9:{s:6:\"active\";b:0;s:7:\"subject\";s:40:\"Dave Brixius (@CoderDx) \"[your-subject]\"\";s:6:\"sender\";s:46:\"Dave Brixius (@CoderDx) <wordpress@coderdx.io>\";s:9:\"recipient\";s:12:\"[your-email]\";s:4:\"body\";s:121:\"Message Body:\n[your-message]\n\n-- \nThis e-mail was sent from a contact form on Dave Brixius (@CoderDx) (http://coderdx.io)\";s:18:\"additional_headers\";s:32:\"Reply-To: dave.brixius@gmail.com\";s:11:\"attachments\";s:0:\"\";s:8:\"use_html\";b:0;s:13:\"exclude_blank\";b:0;}'),(121,44,'_messages','a:23:{s:12:\"mail_sent_ok\";s:45:\"Thank you for your message. It has been sent.\";s:12:\"mail_sent_ng\";s:71:\"There was an error trying to send your message. Please try again later.\";s:16:\"validation_error\";s:61:\"One or more fields have an error. Please check and try again.\";s:4:\"spam\";s:71:\"There was an error trying to send your message. Please try again later.\";s:12:\"accept_terms\";s:69:\"You must accept the terms and conditions before sending your message.\";s:16:\"invalid_required\";s:22:\"The field is required.\";s:16:\"invalid_too_long\";s:22:\"The field is too long.\";s:17:\"invalid_too_short\";s:23:\"The field is too short.\";s:12:\"invalid_date\";s:29:\"The date format is incorrect.\";s:14:\"date_too_early\";s:44:\"The date is before the earliest one allowed.\";s:13:\"date_too_late\";s:41:\"The date is after the latest one allowed.\";s:13:\"upload_failed\";s:46:\"There was an unknown error uploading the file.\";s:24:\"upload_file_type_invalid\";s:49:\"You are not allowed to upload files of this type.\";s:21:\"upload_file_too_large\";s:20:\"The file is too big.\";s:23:\"upload_failed_php_error\";s:38:\"There was an error uploading the file.\";s:14:\"invalid_number\";s:29:\"The number format is invalid.\";s:16:\"number_too_small\";s:47:\"The number is smaller than the minimum allowed.\";s:16:\"number_too_large\";s:46:\"The number is larger than the maximum allowed.\";s:23:\"quiz_answer_not_correct\";s:36:\"The answer to the quiz is incorrect.\";s:17:\"captcha_not_match\";s:31:\"Your entered code is incorrect.\";s:13:\"invalid_email\";s:38:\"The e-mail address entered is invalid.\";s:11:\"invalid_url\";s:19:\"The URL is invalid.\";s:11:\"invalid_tel\";s:32:\"The telephone number is invalid.\";}'),(122,44,'_additional_settings',''),(123,44,'_locale','en_US'),(124,45,'_edit_last','1'),(125,45,'_edit_lock','1533656179:1'),(126,48,'_menu_item_type','post_type'),(127,48,'_menu_item_menu_item_parent','0'),(128,48,'_menu_item_object_id','45'),(129,48,'_menu_item_object','page'),(130,48,'_menu_item_target',''),(131,48,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(132,48,'_menu_item_xfn',''),(133,48,'_menu_item_url',''),(135,50,'_edit_last','1'),(136,50,'_edit_lock','1533746445:1'),(137,52,'_wp_attached_file','2018/08/androidStudioDownload.png'),(138,52,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1920;s:6:\"height\";i:1053;s:4:\"file\";s:33:\"2018/08/androidStudioDownload.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(139,53,'_wp_attached_file','2018/08/androidStudioDownload2.png'),(140,53,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1920;s:6:\"height\";i:1053;s:4:\"file\";s:34:\"2018/08/androidStudioDownload2.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(141,54,'_wp_attached_file','2018/08/androidDirectory.png'),(142,54,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:708;s:6:\"height\";i:307;s:4:\"file\";s:28:\"2018/08/androidDirectory.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(143,55,'_wp_attached_file','2018/08/androidWelcome.png'),(144,55,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:26:\"2018/08/androidWelcome.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(145,57,'_wp_attached_file','2018/08/androidStandardScreen.png'),(146,57,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:33:\"2018/08/androidStandardScreen.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(147,58,'_wp_attached_file','2018/08/androidStudioTheme.png'),(148,58,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:30:\"2018/08/androidStudioTheme.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(149,59,'_wp_attached_file','2018/08/androidStudioVerify.png'),(150,59,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:31:\"2018/08/androidStudioVerify.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(151,60,'_wp_attached_file','2018/08/androidStudioDone.png'),(152,60,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:800;s:6:\"height\";i:600;s:4:\"file\";s:29:\"2018/08/androidStudioDone.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(153,61,'_wp_attached_file','2018/08/androidStudioComplete.png'),(154,61,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:676;s:6:\"height\";i:496;s:4:\"file\";s:33:\"2018/08/androidStudioComplete.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(157,66,'_wp_attached_file','2018/08/me2.jpg'),(158,66,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:524;s:6:\"height\";i:350;s:4:\"file\";s:15:\"2018/08/me2.jpg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(159,66,'_wp_attachment_is_custom_background','atomic-blocks'),(187,91,'_menu_item_type','post_type'),(188,91,'_menu_item_menu_item_parent','0'),(189,91,'_menu_item_object_id','89'),(190,91,'_menu_item_object','page'),(191,91,'_menu_item_target',''),(192,91,'_menu_item_classes','a:1:{i:0;s:0:\"\";}'),(193,91,'_menu_item_xfn',''),(194,91,'_menu_item_url',''),(196,125,'_wp_attached_file','2018/08/cig-logo.jpg'),(197,125,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:230;s:6:\"height\";i:119;s:4:\"file\";s:20:\"2018/08/cig-logo.jpg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(200,144,'_wp_attached_file','2018/08/me.png'),(201,144,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:200;s:6:\"height\";i:200;s:4:\"file\";s:14:\"2018/08/me.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(206,149,'_wp_attached_file','2018/08/h2o-logo-web2.jpg'),(207,149,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:250;s:6:\"height\";i:90;s:4:\"file\";s:25:\"2018/08/h2o-logo-web2.jpg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(208,154,'_wp_attached_file','2018/08/rodman-logo.jpg'),(209,154,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:197;s:6:\"height\";i:97;s:4:\"file\";s:23:\"2018/08/rodman-logo.jpg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(212,158,'_wp_attached_file','2018/08/alfreds-catering-logo.png'),(213,158,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:250;s:6:\"height\";i:79;s:4:\"file\";s:33:\"2018/08/alfreds-catering-logo.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(214,169,'_wp_attached_file','2018/08/artinvesta-logo.gif'),(215,169,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:250;s:6:\"height\";i:92;s:4:\"file\";s:27:\"2018/08/artinvesta-logo.gif\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(216,183,'_wp_attached_file','2018/08/ionicHomePage.png'),(217,183,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1917;s:6:\"height\";i:1079;s:4:\"file\";s:25:\"2018/08/ionicHomePage.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(218,184,'_wp_attached_file','2018/08/ionicCreateAccount.png'),(219,184,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1920;s:6:\"height\";i:1080;s:4:\"file\";s:30:\"2018/08/ionicCreateAccount.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(220,185,'_wp_attached_file','2018/08/ionicWelcome.png'),(221,185,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1920;s:6:\"height\";i:1080;s:4:\"file\";s:24:\"2018/08/ionicWelcome.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(222,186,'_wp_attached_file','2018/08/ionicIntroduction.png'),(223,186,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1920;s:6:\"height\";i:1080;s:4:\"file\";s:29:\"2018/08/ionicIntroduction.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(224,188,'_wp_attached_file','2018/08/ionicSetupInstall.png'),(225,188,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1920;s:6:\"height\";i:1080;s:4:\"file\";s:29:\"2018/08/ionicSetupInstall.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(226,189,'_wp_attached_file','2018/08/ionixSetup.png'),(227,189,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1765;s:6:\"height\";i:192;s:4:\"file\";s:22:\"2018/08/ionixSetup.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(228,190,'_wp_attached_file','2018/08/ionicCreateApp.png'),(229,190,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1920;s:6:\"height\";i:1080;s:4:\"file\";s:26:\"2018/08/ionicCreateApp.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(230,191,'_wp_attached_file','2018/08/ionicAndroid.png'),(231,191,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1440;s:6:\"height\";i:2560;s:4:\"file\";s:24:\"2018/08/ionicAndroid.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(232,192,'_wp_attached_file','2018/08/ionicServe.png'),(233,192,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1866;s:6:\"height\";i:743;s:4:\"file\";s:22:\"2018/08/ionicServe.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(234,193,'_wp_attached_file','2018/08/ionicRunning.png'),(235,193,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1920;s:6:\"height\";i:1080;s:4:\"file\";s:24:\"2018/08/ionicRunning.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(236,194,'_wp_attached_file','2018/08/ionicPush.png'),(237,194,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:820;s:6:\"height\";i:529;s:4:\"file\";s:21:\"2018/08/ionicPush.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(238,195,'_wp_attached_file','2018/08/ionicNextSteps.png'),(239,195,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:814;s:6:\"height\";i:469;s:4:\"file\";s:26:\"2018/08/ionicNextSteps.png\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(246,202,'_edit_lock','1548950597:1'),(247,202,'_oembed_96e10645368867898c33ef421e97cf71','{{unknown}}'),(248,203,'_wp_attached_file','2019/01/0130191243.jpg'),(249,203,'_wp_attachment_metadata','a:4:{s:5:\"width\";i:1000;s:6:\"height\";i:563;s:4:\"file\";s:22:\"2019/01/0130191243.jpg\";s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:3:\"1.8\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:5:\"VS986\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:10:\"1548852184\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:4:\"4.42\";s:3:\"iso\";s:2:\"50\";s:13:\"shutter_speed\";s:18:\"0.0083333333333333\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"1\";s:8:\"keywords\";a:0:{}}}'),(258,212,'_wp_attached_file','2019/02/DaveBrixiusResume.pdf');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_title` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_excerpt` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_status` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'open',
  `post_password` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `post_name` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `to_ping` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `pinged` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`(191)),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB AUTO_INCREMENT=216 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES (3,1,'2018-07-01 19:56:29','2018-07-01 19:56:29','<h2>Who we are</h2><p>Our website address is: http://coderdx.io.</p><h2>What personal data we collect and why we collect it</h2><h3>Comments</h3><p>When visitors leave comments on the site we collect the data shown in the comments form, and also the visitor&#8217;s IP address and browser user agent string to help spam detection.</p><p>An anonymized string created from your email address (also called a hash) may be provided to the Gravatar service to see if you are using it. The Gravatar service privacy policy is available here: https://automattic.com/privacy/. After approval of your comment, your profile picture is visible to the public in the context of your comment.</p><h3>Media</h3><p>If you upload images to the website, you should avoid uploading images with embedded location data (EXIF GPS) included. Visitors to the website can download and extract any location data from images on the website.</p><h3>Contact forms</h3><h3>Cookies</h3><p>If you leave a comment on our site you may opt-in to saving your name, email address and website in cookies. These are for your convenience so that you do not have to fill in your details again when you leave another comment. These cookies will last for one year.</p><p>If you have an account and you log in to this site, we will set a temporary cookie to determine if your browser accepts cookies. This cookie contains no personal data and is discarded when you close your browser.</p><p>When you log in, we will also set up several cookies to save your login information and your screen display choices. Login cookies last for two days, and screen options cookies last for a year. If you select &quot;Remember Me&quot;, your login will persist for two weeks. If you log out of your account, the login cookies will be removed.</p><p>If you edit or publish an article, an additional cookie will be saved in your browser. This cookie includes no personal data and simply indicates the post ID of the article you just edited. It expires after 1 day.</p><h3>Embedded content from other websites</h3><p>Articles on this site may include embedded content (e.g. videos, images, articles, etc.). Embedded content from other websites behaves in the exact same way as if the visitor has visited the other website.</p><p>These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor your interaction with that embedded content, including tracing your interaction with the embedded content if you have an account and are logged in to that website.</p><h3>Analytics</h3><h2>Who we share your data with</h2><h2>How long we retain your data</h2><p>If you leave a comment, the comment and its metadata are retained indefinitely. This is so we can recognize and approve any follow-up comments automatically instead of holding them in a moderation queue.</p><p>For users that register on our website (if any), we also store the personal information they provide in their user profile. All users can see, edit, or delete their personal information at any time (except they cannot change their username). Website administrators can also see and edit that information.</p><h2>What rights you have over your data</h2><p>If you have an account on this site, or have left comments, you can request to receive an exported file of the personal data we hold about you, including any data you have provided to us. You can also request that we erase any personal data we hold about you. This does not include any data we are obliged to keep for administrative, legal, or security purposes.</p><h2>Where we send your data</h2><p>Visitor comments may be checked through an automated spam detection service.</p><h2>Your contact information</h2><h2>Additional information</h2><h3>How we protect your data</h3><h3>What data breach procedures we have in place</h3><h3>What third parties we receive data from</h3><h3>What automated decision making and/or profiling we do with user data</h3><h3>Industry regulatory disclosure requirements</h3>','Privacy Policy','','draft','closed','open','','privacy-policy','','','2018-07-01 19:56:29','2018-07-01 19:56:29','',0,'http://coderdx.io/?page_id=3',0,'page','',0),(5,1,'2018-07-01 20:21:57','2018-07-01 20:21:57','Why are we here? That\'s a question that has been asked by man since the beginning of time.  I am now going to attempt to answer that question, albeit in a considerably more narrow context.\r\n\r\nCoderDx.io is my attempt at creating a website that will become the all encompassing reflection of me and who I am, both personally and professionally.  This site will feature:\r\n\r\nMy observation of things I see and experience\r\nTutorial blog posts about cool things I learned\r\nInformation about my tech meetup, Austin Internet of Things\r\nHardware and software projects I have done and am currently working on\r\n\r\nHope you will find my site useful.\r\n\r\nCheers,\r\n\r\nDave Brixius\r\n@CoderDx\r\n\r\n&nbsp;','Why Are We Here','','publish','open','open','','why-are-we-here','','','2018-07-01 20:22:51','2018-07-01 20:22:51','',0,'http://coderdx.io/?p=5',0,'post','',0),(6,1,'2018-07-01 20:11:49','2018-07-01 20:11:49','Why are we here? That\'s a question that has been asked by man since the beginning of time.  I am now going to attempt to answer that question, albeit in a considerably more narrow context.\r\n\r\nCoderDx.io is my attempt at creating a website that will become the all encompassing reflection of me and who I am, both personally and professionally.  This site will feature:\r\n<ul>\r\n 	<li>My observation of things I see and experience</li>\r\n 	<li>Tutorial blog posts about cool things I learned</li>\r\n 	<li>Information about my tech meetup, Austin Internet of Things</li>\r\n 	<li>Hardware and software project I have done and am currently working on</li>\r\n</ul>\r\nHope you will find my site useful.\r\n\r\nCheers,\r\n\r\nDave Brixius\r\n@CoderDx\r\n\r\n&nbsp;','Why Are We Here','','inherit','closed','closed','','5-revision-v1','','','2018-07-01 20:11:49','2018-07-01 20:11:49','',5,'http://coderdx.io/?p=6',0,'revision','',0),(8,1,'2018-07-01 20:16:51','2018-07-01 20:16:51','Why are we here? That\'s a question that has been asked by man since the beginning of time.  I am now going to attempt to answer that question, albeit in a considerably more narrow context.\r\n\r\nCoderDx.io is my attempt at creating a website that will become the all encompassing reflection of me and who I am, both personally and professionally.  This site will feature:\r\n\r\nMy observation of things I see and experience\r\nTutorial blog posts about cool things I learned\r\nInformation about my tech meetup, Austin Internet of Things\r\nHardware and software project I have done and am currently working on\r\n\r\nHope you will find my site useful.\r\n\r\nCheers,\r\n\r\nDave Brixius\r\n@CoderDx\r\n\r\n&nbsp;','Why Are We Here','','inherit','closed','closed','','5-revision-v1','','','2018-07-01 20:16:51','2018-07-01 20:16:51','',5,'http://coderdx.io/?p=8',0,'revision','',0),(9,1,'2018-07-01 20:22:51','2018-07-01 20:22:51','Why are we here? That\'s a question that has been asked by man since the beginning of time.  I am now going to attempt to answer that question, albeit in a considerably more narrow context.\r\n\r\nCoderDx.io is my attempt at creating a website that will become the all encompassing reflection of me and who I am, both personally and professionally.  This site will feature:\r\n\r\nMy observation of things I see and experience\r\nTutorial blog posts about cool things I learned\r\nInformation about my tech meetup, Austin Internet of Things\r\nHardware and software projects I have done and am currently working on\r\n\r\nHope you will find my site useful.\r\n\r\nCheers,\r\n\r\nDave Brixius\r\n@CoderDx\r\n\r\n&nbsp;','Why Are We Here','','inherit','closed','closed','','5-revision-v1','','','2018-07-01 20:22:51','2018-07-01 20:22:51','',5,'http://coderdx.io/5-revision-v1/',0,'revision','',0),(10,1,'2018-07-02 04:09:38','0000-00-00 00:00:00','When used in conjunction with select AWS services, Amazon will issue you a public HTTPS certificate, free of charge. They will also renew it every year for free too, for as long as you continue to use it with an AWS service. For today\'s lesson we will be showing how to implement a free AWS public certificate using AWS CloudFront. A full list of compatible AWS products can be seen <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/acm-services.html\" target=\"_blank\" rel=\"noopener\">here</a>.\n\nThe first step is to create an AWS CloudFront distribution for your site. Log in to your AWS account. From the list of Services click \'CloudFront\'.\n\nOn the page that loads, click \'Create Distribution\'. Then on that page, in the \'Web\' section, click \'Get Started\'.\n\nIn the \'Origin Domain Name\' field, enter the fully qualified domain name for your website (www.example.com).\n\nLeave all other fields at their default values for now. Scroll to the bottom of the page and click \'Create Distribution\'. On the page you are returned to you should see a new entry for the distribution you just created.  The \'Status\' column should display a progress spinner, along with the words \'In Progress\'. AWS CloudFront CDN distributions can take several minutes to complete. So go call you Mom and come back when you\'re done.\n\nOkay, If your new distribution is complete the \'Status\' column should now read \'Deployed\'. You are now ready to request your certificate.\n\nHowever, we need to do one thing first. Locate the entry for your newly created distribution on the AWS CloudFront home screen. Locate the column labeled \'Domain Name\'. You will need to copy the value here and update your DNS settings to now point to this domain. Modifying DNS settings is beyond the scope of this tutorial. Go ahead and do that now. I\'ll be here when you get back.\n\nOkay, now we are ready to request your new certificate.\n\n&nbsp;\n\n&nbsp;','HTTPS For Free On AWS','','draft','open','open','','','','','2018-07-02 04:09:38','2018-07-02 04:09:38','',0,'http://coderdx.io/?p=10',0,'post','',0),(11,1,'2018-07-06 19:41:09','2018-07-06 19:41:09','','meface','','inherit','open','closed','','meface','','','2018-07-06 19:41:09','2018-07-06 19:41:09','',0,'http://coderdx.io/wp-content/uploads/2018/07/meface.jpeg',0,'attachment','image/jpeg',0),(15,1,'2018-07-06 19:50:38','2018-07-06 19:50:38','','Home','','publish','closed','closed','','home','','','2018-08-12 19:27:03','2018-08-13 00:27:03','',0,'http://coderdx.io/?p=15',1,'nav_menu_item','',0),(19,1,'2018-07-06 20:32:48','2018-07-06 20:32:48','On June 5, 2014 I was laying in bed on my laptop and a thought occurred to me. I wonder if Austin has an IoT meetup group. I checked and sure enough, we didn\'t.\n\nMy next thought was I wonder what Silicon Valley is doing. A quick search for meetups in the Bay area revealed 13 groups that had \'IoT\' in their name.\n\nSo I filled out the form, sent in my $19 and went to bed. I didn\'t think anything of it. I thought it was going to evaporate in the light of day, like most of my other 2am brainstorms.\n\nOver the next few days I started to notice people were signing up for this thing. I called my buddy Jeff and said, oh shit, now I have to come up with something.\n\nThat was just over 4 years ago and, at the time of the writing of this article, the Austin Internet of Things meetup is just over 2,900 members. We have enjoyed notoriety and sponsorship from big name companies like Intel, Microsoft, Dell, IBM, NXP Semiconductor, and many others.\n\nWe have become the leader in Internet of Things meetups in Austin, and are continuing to grow.\n\nClick&nbsp;<a href=\"http://www.austiniot.org\" target=\"_blank\" rel=\"noopener\">here</a>&nbsp;to check out our website.\n\nIf you live or work in the Austin, TX area, or are planning to visit, please check our meetup page&nbsp;<a href=\"https://www.meetup.com/AustinIoT\" target=\"_blank\" rel=\"noopener\">here</a>&nbsp;and stop in at one of our meetups!\n\n&nbsp;','Austin IoT Meetup Group','','publish','closed','closed','','austin-iot','','','2019-02-16 12:51:03','2019-02-16 17:51:03','',0,'http://coderdx.io/?page_id=19',0,'page','',0),(20,1,'2018-07-06 20:32:48','2018-07-06 20:32:48','On June 5, 2014 I was laying in bed on my laptop and a thought occurred to me. I wonder if Austin has an IoT meetup group. I checked and sure enough, we didn\'t.\r\n\r\nMy next thought was I wonder what Silicon Valley is doing. A quick search for meetups in the Bay area revealed 13 groups that had \'IoT\' in their name.\r\n\r\nSo I filled out the form, sent in my $19 and went to bed. I didn\'t think anything of it. I thought it was going to evaporate in the light of day, like most of my other 2am brainstorms.\r\n\r\nOver the next few days I started to notice people were signing up for this thing. I called my buddy Jeff and said, oh shit, now I have to come up with something.\r\n\r\nThat was just over 4 years ago and, at the time of the writing of this article, the Austin Internet of Things meetup is just over 2,900 members. We have enjoyed notoriety and sponsorship from big name companies like Intel, Microsoft, Dell, IBM, NXP Semiconductor, and many others.\r\n\r\nWe have become the leader in Internet of Things meetups in Austin, and are continuing to grow.\r\n\r\nif you live or work in the Austin, TX area, or are planning to visit, please check our meetup calendar and stop in at one of our meetups!\r\n\r\n&nbsp;','Austin IoT','','inherit','closed','closed','','19-revision-v1','','','2018-07-06 20:32:48','2018-07-06 20:32:48','',19,'http://coderdx.io/19-revision-v1/',0,'revision','',0),(21,1,'2018-07-06 20:33:14','2018-07-06 20:33:14','','Austin IoT','','publish','closed','closed','','21','','','2018-08-12 19:27:03','2018-08-13 00:27:03','',0,'http://coderdx.io/?p=21',2,'nav_menu_item','',0),(22,1,'2018-07-06 23:19:49','2018-07-06 23:19:49','','AIoTLogo','','inherit','open','closed','','aiotlogo','','','2018-07-06 23:19:49','2018-07-06 23:19:49','',19,'http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg',0,'attachment','image/jpeg',0),(23,1,'2018-07-06 23:35:13','2018-07-06 23:35:13','I have over ten years of web development experience in JavaScript, React, NoSQL, and LAMP stack web development, including three years of freelance experience.\r\n\r\nI am also available for hire. My freelance website is <a href=\"http://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>. Please contact me to arrange a meeting!','Hire Me!','','publish','closed','closed','','hire-me','','','2018-07-06 23:51:00','2018-07-06 23:51:00','',0,'http://coderdx.io/?page_id=23',0,'page','',0),(24,1,'2018-07-06 23:35:08','2018-07-06 23:35:08','','kerbob','','inherit','open','closed','','kerbob','','','2018-07-06 23:35:08','2018-07-06 23:35:08','',23,'http://coderdx.io/wp-content/uploads/2018/07/kerbob.png',0,'attachment','image/png',0),(25,1,'2018-07-06 23:35:13','2018-07-06 23:35:13','I have over ten years of web development experience in JavaScript, React, NoSQL, and LAMP stack web development, including three years of freelance experience.\r\n\r\nI am also available for hire. Please contact me to arrange a meeting!','Hire Me!','','inherit','closed','closed','','23-revision-v1','','','2018-07-06 23:35:13','2018-07-06 23:35:13','',23,'http://coderdx.io/?p=25',0,'revision','',0),(26,1,'2018-07-06 23:35:27','2018-07-06 23:35:27','','Hire Me','','publish','closed','closed','','26','','','2018-08-12 19:27:03','2018-08-13 00:27:03','',0,'http://coderdx.io/?p=26',5,'nav_menu_item','',0),(27,1,'2018-07-06 23:50:17','2018-07-06 23:50:17','I have over ten years of web development experience in JavaScript, React, NoSQL, and LAMP stack web development, including three years of freelance experience.\r\n\r\nI am also available for hire. My freelance website is www.kerbob.io. Please contact me to arrange a meeting!','Hire Me!','','inherit','closed','closed','','23-revision-v1','','','2018-07-06 23:50:17','2018-07-06 23:50:17','',23,'http://coderdx.io/?p=27',0,'revision','',0),(28,1,'2018-07-06 23:51:00','2018-07-06 23:51:00','I have over ten years of web development experience in JavaScript, React, NoSQL, and LAMP stack web development, including three years of freelance experience.\r\n\r\nI am also available for hire. My freelance website is <a href=\"http://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>. Please contact me to arrange a meeting!','Hire Me!','','inherit','closed','closed','','23-revision-v1','','','2018-07-06 23:51:00','2018-07-06 23:51:00','',23,'http://coderdx.io/?p=28',0,'revision','',0),(31,1,'2018-07-06 23:57:09','2018-07-06 23:57:09','','My Resume','','publish','closed','closed','','resume','','','2019-02-16 12:47:14','2019-02-16 17:47:14','',0,'http://coderdx.io/?p=31',3,'nav_menu_item','',0),(32,1,'2018-07-06 23:58:41','2018-07-06 23:58:41','On June 5, 2014 I was laying in bed on my laptop and a thought occurred to me. I wonder if Austin has an IoT meetup group. I checked and sure enough, we didn\'t.\r\n\r\nMy next thought was I wonder what Silicon Valley is doing. A quick search for meetups in the Bay area revealed 13 groups that had \'IoT\' in their name.\r\n\r\nSo I filled out the form, sent in my $19 and went to bed. I didn\'t think anything of it. I thought it was going to evaporate in the light of day, like most of my other 2am brainstorms.\r\n\r\nOver the next few days I started to notice people were signing up for this thing. I called my buddy Jeff and said, oh shit, now I have to come up with something.\r\n\r\nThat was just over 4 years ago and, at the time of the writing of this article, the Austin Internet of Things meetup is just over 2,900 members. We have enjoyed notoriety and sponsorship from big name companies like Intel, Microsoft, Dell, IBM, NXP Semiconductor, and many others.\r\n\r\nWe have become the leader in Internet of Things meetups in Austin, and are continuing to grow.\r\n\r\nif you live or work in the Austin, TX area, or are planning to visit, please check our meetup page <a href=\"https://www.meetup.com/AustinIoT\">here</a> and stop in at one of our meetups!\r\n\r\n&nbsp;','Austin IoT','','inherit','closed','closed','','19-revision-v1','','','2018-07-06 23:58:41','2018-07-06 23:58:41','',19,'http://coderdx.io/?p=32',0,'revision','',0),(33,1,'2018-07-07 00:00:50','2018-07-07 00:00:50','On June 5, 2014 I was laying in bed on my laptop and a thought occurred to me. I wonder if Austin has an IoT meetup group. I checked and sure enough, we didn\'t.\r\n\r\nMy next thought was I wonder what Silicon Valley is doing. A quick search for meetups in the Bay area revealed 13 groups that had \'IoT\' in their name.\r\n\r\nSo I filled out the form, sent in my $19 and went to bed. I didn\'t think anything of it. I thought it was going to evaporate in the light of day, like most of my other 2am brainstorms.\r\n\r\nOver the next few days I started to notice people were signing up for this thing. I called my buddy Jeff and said, oh shit, now I have to come up with something.\r\n\r\nThat was just over 4 years ago and, at the time of the writing of this article, the Austin Internet of Things meetup is just over 2,900 members. We have enjoyed notoriety and sponsorship from big name companies like Intel, Microsoft, Dell, IBM, NXP Semiconductor, and many others.\r\n\r\nWe have become the leader in Internet of Things meetups in Austin, and are continuing to grow.\r\n\r\nClick <a href=\"http://www.austiniot.org\" target=\"_blank\" rel=\"noopener\">here</a> to check out our website.\r\n\r\nif you live or work in the Austin, TX area, or are planning to visit, please check our meetup page <a href=\"https://www.meetup.com/AustinIoT\">here</a> and stop in at one of our meetups!\r\n\r\n&nbsp;','Austin IoT','','inherit','closed','closed','','19-revision-v1','','','2018-07-07 00:00:50','2018-07-07 00:00:50','',19,'http://coderdx.io/?p=33',0,'revision','',0),(34,1,'2018-07-07 00:01:49','2018-07-07 00:01:49','On June 5, 2014 I was laying in bed on my laptop and a thought occurred to me. I wonder if Austin has an IoT meetup group. I checked and sure enough, we didn\'t.\r\n\r\nMy next thought was I wonder what Silicon Valley is doing. A quick search for meetups in the Bay area revealed 13 groups that had \'IoT\' in their name.\r\n\r\nSo I filled out the form, sent in my $19 and went to bed. I didn\'t think anything of it. I thought it was going to evaporate in the light of day, like most of my other 2am brainstorms.\r\n\r\nOver the next few days I started to notice people were signing up for this thing. I called my buddy Jeff and said, oh shit, now I have to come up with something.\r\n\r\nThat was just over 4 years ago and, at the time of the writing of this article, the Austin Internet of Things meetup is just over 2,900 members. We have enjoyed notoriety and sponsorship from big name companies like Intel, Microsoft, Dell, IBM, NXP Semiconductor, and many others.\r\n\r\nWe have become the leader in Internet of Things meetups in Austin, and are continuing to grow.\r\n\r\nClick <a href=\"http://www.austiniot.org\" target=\"_blank\" rel=\"noopener\">here</a> to check out our website.\r\n\r\nif you live or work in the Austin, TX area, or are planning to visit, please check our meetup page <a href=\"https://www.meetup.com/AustinIoT\" target=\"_blank\" rel=\"noopener\">here</a> and stop in at one of our meetups!\r\n\r\n&nbsp;','Austin IoT','','inherit','closed','closed','','19-revision-v1','','','2018-07-07 00:01:49','2018-07-07 00:01:49','',19,'http://coderdx.io/?p=34',0,'revision','',0),(44,1,'2018-08-07 15:08:00','2018-08-07 15:08:00','<label> Your Name (required)\r\n    [text* your-name] </label>\r\n\r\n<label> Your Email (required)\r\n    [email* your-email] </label>\r\n\r\n<label> Subject\r\n    [text your-subject] </label>\r\n\r\n<label> Your Message\r\n    [textarea your-message] </label>\r\n\r\n[recaptcha]\r\n&nbsp;\r\n&nbsp;\r\n[submit \"Send\"]\n1\nDave Brixius (@CoderDx) \"[your-subject]\"\n[your-name] <wordpress@coderdx.io>\ndave.brixius@gmail.com\nFrom: [your-name] <[your-email]>\r\nSubject: [your-subject]\r\n\r\nMessage Body:\r\n[your-message]\r\n\r\n-- \r\nThis e-mail was sent from a contact form on Dave Brixius (@CoderDx) (http://coderdx.io)\nReply-To: [your-email]\n\n\n\n\nDave Brixius (@CoderDx) \"[your-subject]\"\nDave Brixius (@CoderDx) <wordpress@coderdx.io>\n[your-email]\nMessage Body:\r\n[your-message]\r\n\r\n-- \r\nThis e-mail was sent from a contact form on Dave Brixius (@CoderDx) (http://coderdx.io)\nReply-To: dave.brixius@gmail.com\n\n\n\nThank you for your message. It has been sent.\nThere was an error trying to send your message. Please try again later.\nOne or more fields have an error. Please check and try again.\nThere was an error trying to send your message. Please try again later.\nYou must accept the terms and conditions before sending your message.\nThe field is required.\nThe field is too long.\nThe field is too short.\nThe date format is incorrect.\nThe date is before the earliest one allowed.\nThe date is after the latest one allowed.\nThere was an unknown error uploading the file.\nYou are not allowed to upload files of this type.\nThe file is too big.\nThere was an error uploading the file.\nThe number format is invalid.\nThe number is smaller than the minimum allowed.\nThe number is larger than the maximum allowed.\nThe answer to the quiz is incorrect.\nYour entered code is incorrect.\nThe e-mail address entered is invalid.\nThe URL is invalid.\nThe telephone number is invalid.','Contact form 1','','publish','closed','closed','','contact-form-1','','','2018-08-09 14:15:55','2018-08-09 14:15:55','',0,'http://coderdx.io/?post_type=wpcf7_contact_form&#038;p=44',0,'wpcf7_contact_form','',0),(45,1,'2018-08-07 15:16:10','2018-08-07 15:16:10','[contact-form-7 id=\"44\" title=\"Contact form 1\"]\r\n<div class=\"g-recaptcha\" data-sitekey=\"6LfSxGgUAAAAALuOJsE7p_sgZH3EaRD267RnJ2az\"></div>','Contact','','publish','closed','closed','','contact-us','','','2018-08-07 15:38:39','2018-08-07 15:38:39','',0,'http://coderdx.io/?page_id=45',0,'page','',0),(46,1,'2018-08-07 15:16:10','2018-08-07 15:16:10','[contact-form-7 id=\"44\" title=\"Contact form 1\"]\r\n\r\n<code class=\"code-block\">&lt;div class=\"g-recaptcha\" data-sitekey=\"6LfSxGgUAAAAALuOJsE7p_sgZH3EaRD267RnJ2az\"&gt;&lt;/div&gt;</code>','Contact Us','','inherit','closed','closed','','45-revision-v1','','','2018-08-07 15:16:10','2018-08-07 15:16:10','',45,'http://coderdx.io/45-revision-v1/',0,'revision','',0),(47,1,'2018-08-07 15:18:46','2018-08-07 15:18:46','[contact-form-7 id=\"44\" title=\"Contact form 1\"]\r\n\r\n<code class=\"code-block\">&lt;div class=\"g-recaptcha\" data-sitekey=\"6LfSxGgUAAAAALuOJsE7p_sgZH3EaRD267RnJ2az\"&gt;&lt;/div&gt;</code>','Contact','','inherit','closed','closed','','45-revision-v1','','','2018-08-07 15:18:46','2018-08-07 15:18:46','',45,'http://coderdx.io/45-revision-v1/',0,'revision','',0),(48,1,'2018-08-07 15:31:28','2018-08-07 15:31:28',' ','','','publish','closed','closed','','48','','','2018-08-12 19:27:03','2018-08-13 00:27:03','',0,'http://coderdx.io/?p=48',6,'nav_menu_item','',0),(49,1,'2018-08-07 15:38:39','2018-08-07 15:38:39','[contact-form-7 id=\"44\" title=\"Contact form 1\"]\r\n<div class=\"g-recaptcha\" data-sitekey=\"6LfSxGgUAAAAALuOJsE7p_sgZH3EaRD267RnJ2az\"></div>','Contact','','inherit','closed','closed','','45-revision-v1','','','2018-08-07 15:38:39','2018-08-07 15:38:39','',45,'http://coderdx.io/?p=49',0,'revision','',0),(50,1,'2018-08-08 16:43:06','2018-08-08 16:43:06','I recently enrolled in a free online React Native bootcamp offered by tylermcginnis.com. In the past I also took his React bootcamp, and found that educational and informative as well.\n\nAt one point in the React Native bootcamp, the instructor talks about IDE\'s and mentioned Xcode and Android Studio. I don\'t have a Mac right now, so I went ahead and installed Android Studio on my MSI GT72-2QD Dominator. That machine sports an Intel i7 CPU, 32 GB RAM, and 2, 525GB M.1 SATA drives, on a RAID-0 mirror.<!--more-->\n\nThe first step in installing Android Studio is to visit their website at https://developer.android.com/studio/. On the page that loads, you should see the download button. Under that button should show you current operating system. In my case, that was \'3.1.4 for Linux 64-bit (856 MB)\'.\n\n<img class=\"alignnone size-full wp-image-52\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload.png\" alt=\"\" width=\"1920\" height=\"1053\" />\n\nClick on the download button. With this, you should be presented with a terms and conditions page, with a checkbox to accept the terms and conditions. Click the checkbox to enable the download button. Then click the Download button to begin your download. In my case, the download was almost 900MB. Probably wouldn\'t recommend downloading from your mobile hotspot on your phone. Do it from your home, or some other place that has a fast internet connection, and no data limits.\n\n<img class=\"alignnone size-full wp-image-53\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload2.png\" alt=\"\" width=\"1920\" height=\"1053\" />\n\nOnce the download is complete, move the new .zip file to a directory of your choice. Personally, I prefer to install my downloaded applications in the /opt directory. Change directories to the one that you downloaded the .zip file to and issue the following command...\n<pre>sudo mv ./android-studio-ide-173.4907809-linux.zip /opt</pre>\nNext, unzip the file into the /opt directory by issuing the following command...\n<pre>sudo unzip ./android-studio-ide-173.4907809-linux.zip</pre>\nWhen complete, you should see a new directory, android-studio, under /opt, and it should look like this...\n\n<img class=\"alignnone size-full wp-image-54\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidDirectory.png\" alt=\"\" width=\"708\" height=\"307\" />\n\nNext, change to the bin directory by issuing the following command...\n<pre>cd /opt/bin</pre>\nOnce there, issue the following command to start the Android Studio IDE...\n<pre>./studio.sh</pre>\nThis should give you the welcome screen below. Now we will get Android Studio set up for first use. These steps should only need to be done once.\n\n<img class=\"alignnone size-full wp-image-55\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidWelcome.png\" alt=\"\" width=\"800\" height=\"600\" />\n\nClick \'Next\' to get to the next screen.\n\n<img class=\"alignnone size-full wp-image-57\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStandardScreen.png\" alt=\"\" width=\"800\" height=\"600\" />\n\nMake sure that \'Standard\' is checked and click \'Next\'.\n\n<img class=\"alignnone size-full wp-image-58\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioTheme.png\" alt=\"\" width=\"800\" height=\"600\" />\n\nSelect a theme you like. I prefer \'Darkula\'. Then click \'Next\' to continue.\n\nOn the next screen, verify your installation settings. If you need to change anything click \'Previous\' to go back. Otherwise, click \'Next\' to begin the installation. Installation will take a few minutes, so go grab a beer and come back.\n\n<img class=\"alignnone size-medium wp-image-59\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioVerify.png\" alt=\"\" width=\"300\" height=\"225\" />\n\nAt the end of the installation your screen should look like this. Press \'Finish\' to complete the installation.\n\n<img class=\"alignnone size-full wp-image-60\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDone.png\" alt=\"\" width=\"800\" height=\"600\" />\n\nYour Android Studio installation is now complete. You should see the Welcome screen below.\n\n<img class=\"alignnone size-full wp-image-61\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioComplete.png\" alt=\"\" width=\"676\" height=\"496\" />\n\nThat completes this tutorial on installing Android Studio on Linux Mint 18.2.\n\nPlease leave any questions or comments below, or contact me directly using the site\'s Contact Us form.\n\nThank you for visiting!','Installing Android Studio on Linux Mint 18.2','Step by step instruction with screenshots.','publish','open','open','','installing-android-studio-on-linux-mint-18-2','','','2018-08-09 11:18:21','2018-08-09 16:18:21','',0,'http://coderdx.io/?p=50',0,'post','',0),(51,1,'2018-08-08 14:52:30','2018-08-08 14:52:30','I recently enrolled in a free online React Native bootcamp offered by tylermcginnis.com. In the past I also took his React bootcamp, and found that educational and informative as well.\r\n\r\nAt one point in the React Native bootcamp, the instructor talks about IDE\'s and mentioned Xcode and Android Studio. I don\'t have a Mac right now, so I went ahead and installed Android Studio on my MCI GT72-2QD Dominator. This machine sports an Intel i7 CPU, 32 GB RAM, and 2, 525GB M.1 SATA drives, on a RAID-0 mirror.\r\n\r\nThe first step in installing Android Studio is to visit their website at https://developer.android.com/studio/. On the page that loads, you should see the download button. Under that button showing you current operating system. In my case, that was \'3.1.4 for Linux 64-bit (856 MB)\'.\r\n\r\nClick on the download button. With this, you should be presented with a terms and conditions page, with a checkbox to accept the terms and conditions. Click the checkbox to enable the download button. Then click the button to begin your download. In my case, the download was almost 900MB. Probably wouldn\'t recommend downloading from your mobile hotspot on your phone. Do it from your home, or some other place that has a fast internet connection, and no data limits.\r\n\r\n \r\n\r\n','Installing Android Studio on Linux Mint 18.2','','inherit','closed','closed','','50-revision-v1','','','2018-08-08 14:52:30','2018-08-08 14:52:30','',50,'http://coderdx.io/?p=51',0,'revision','',0),(52,1,'2018-08-08 14:56:04','2018-08-08 14:56:04','','androidStudioDownload','','inherit','open','closed','','androidstudiodownload','','','2018-08-08 14:56:33','2018-08-08 14:56:33','',50,'http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload.png',0,'attachment','image/png',0),(53,1,'2018-08-08 15:00:54','2018-08-08 15:00:54','','androidStudioDownload2','','inherit','open','closed','','androidstudiodownload2','','','2018-08-08 15:00:54','2018-08-08 15:00:54','',50,'http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload2.png',0,'attachment','image/png',0),(54,1,'2018-08-08 15:16:29','2018-08-08 15:16:29','','androidDirectory','','inherit','open','closed','','androiddirectory','','','2018-08-08 15:16:29','2018-08-08 15:16:29','',50,'http://coderdx.io/wp-content/uploads/2018/08/androidDirectory.png',0,'attachment','image/png',0),(55,1,'2018-08-08 15:26:56','2018-08-08 15:26:56','','androidWelcome','','inherit','open','closed','','androidwelcome','','','2018-08-08 15:26:56','2018-08-08 15:26:56','',50,'http://coderdx.io/wp-content/uploads/2018/08/androidWelcome.png',0,'attachment','image/png',0),(56,1,'2018-08-08 15:28:02','2018-08-08 15:28:02','I recently enrolled in a free online React Native bootcamp offered by tylermcginnis.com. In the past I also took his React bootcamp, and found that educational and informative as well.\r\n\r\nAt one point in the React Native bootcamp, the instructor talks about IDE\'s and mentioned Xcode and Android Studio. I don\'t have a Mac right now, so I went ahead and installed Android Studio on my MCI GT72-2QD Dominator. This machine sports an Intel i7 CPU, 32 GB RAM, and 2, 525GB M.1 SATA drives, on a RAID-0 mirror.\r\n\r\nThe first step in installing Android Studio is to visit their website at https://developer.android.com/studio/. On the page that loads, you should see the download button. Under that button showing you current operating system. In my case, that was \'3.1.4 for Linux 64-bit (856 MB)\'.\r\n\r\n<img class=\"alignnone size-full wp-image-52\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload.png\" alt=\"\" width=\"1920\" height=\"1053\" />\r\n\r\nClick on the download button. With this, you should be presented with a terms and conditions page, with a checkbox to accept the terms and conditions. Click the checkbox to enable the download button. Then click the button to begin your download. In my case, the download was almost 900MB. Probably wouldn\'t recommend downloading from your mobile hotspot on your phone. Do it from your home, or some other place that has a fast internet connection, and no data limits.\r\n\r\n<img class=\"alignnone size-full wp-image-53\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload2.png\" alt=\"\" width=\"1920\" height=\"1053\" />\r\n\r\nOnce the download is complete, move the new .zip file to a directory of your choice. Personally, I prefer to install my downloaded applications in the /opt directory. Change directories to the one that you downloaded the .zip file to and issue the following command...\r\n<pre>sudo mv ./android-studio-ide-173.4907809-linux.zip /opt</pre>\r\nNext, unzip the file into the /opt directory by issuing the following command...\r\n<pre>sudo unzip ./android-studio-ide-173.4907809-linux.zip /opt</pre>\r\nWhen complete, you should see a new directory, android-studio, under /opt, and it should look like this...\r\n\r\n<img class=\"alignnone size-full wp-image-54\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidDirectory.png\" alt=\"\" width=\"708\" height=\"307\" />\r\n\r\nNext, change to the bin directory by issuing the following command...\r\n<pre>cd /opt/bin</pre>\r\nOnce there, issue the following command to start the Android Studio IDE...\r\n<pre>./studio.sh</pre>\r\nThis should give you the welcome screen below. Now we will get Android Studio set up for first use. These steps should only need to be done once.\r\n\r\n<img class=\"alignnone size-full wp-image-55\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidWelcome.png\" alt=\"\" width=\"800\" height=\"600\" />','Installing Android Studio on Linux Mint 18.2','','inherit','closed','closed','','50-revision-v1','','','2018-08-08 15:28:02','2018-08-08 15:28:02','',50,'http://coderdx.io/?p=56',0,'revision','',0),(57,1,'2018-08-08 16:17:43','2018-08-08 16:17:43','','androidStandardScreen','','inherit','open','closed','','androidstandardscreen','','','2018-08-08 16:17:43','2018-08-08 16:17:43','',50,'http://coderdx.io/wp-content/uploads/2018/08/androidStandardScreen.png',0,'attachment','image/png',0),(58,1,'2018-08-08 16:19:34','2018-08-08 16:19:34','','androidStudioTheme','','inherit','open','closed','','androidstudiotheme','','','2018-08-08 16:19:34','2018-08-08 16:19:34','',50,'http://coderdx.io/wp-content/uploads/2018/08/androidStudioTheme.png',0,'attachment','image/png',0),(59,1,'2018-08-08 16:27:22','2018-08-08 16:27:22','','androidStudioVerify','','inherit','open','closed','','androidstudioverify','','','2018-08-08 16:27:22','2018-08-08 16:27:22','',50,'http://coderdx.io/wp-content/uploads/2018/08/androidStudioVerify.png',0,'attachment','image/png',0),(60,1,'2018-08-08 16:34:03','2018-08-08 16:34:03','','androidStudioDone','','inherit','open','closed','','androidstudiodone','','','2018-08-08 16:34:03','2018-08-08 16:34:03','',50,'http://coderdx.io/wp-content/uploads/2018/08/androidStudioDone.png',0,'attachment','image/png',0),(61,1,'2018-08-08 16:35:43','2018-08-08 16:35:43','','androidStudioComplete','','inherit','open','closed','','androidstudiocomplete','','','2018-08-08 16:35:43','2018-08-08 16:35:43','',50,'http://coderdx.io/wp-content/uploads/2018/08/androidStudioComplete.png',0,'attachment','image/png',0),(62,1,'2018-08-08 16:38:42','2018-08-08 16:38:42','I recently enrolled in a free online React Native bootcamp offered by tylermcginnis.com. In the past I also took his React bootcamp, and found that educational and informative as well.\r\n\r\nAt one point in the React Native bootcamp, the instructor talks about IDE\'s and mentioned Xcode and Android Studio. I don\'t have a Mac right now, so I went ahead and installed Android Studio on my MCI GT72-2QD Dominator. This machine sports an Intel i7 CPU, 32 GB RAM, and 2, 525GB M.1 SATA drives, on a RAID-0 mirror.\r\n\r\nThe first step in installing Android Studio is to visit their website at https://developer.android.com/studio/. On the page that loads, you should see the download button. Under that button showing you current operating system. In my case, that was \'3.1.4 for Linux 64-bit (856 MB)\'.\r\n\r\n<img class=\"alignnone size-full wp-image-52\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload.png\" alt=\"\" width=\"1920\" height=\"1053\" />\r\n\r\nClick on the download button. With this, you should be presented with a terms and conditions page, with a checkbox to accept the terms and conditions. Click the checkbox to enable the download button. Then click the button to begin your download. In my case, the download was almost 900MB. Probably wouldn\'t recommend downloading from your mobile hotspot on your phone. Do it from your home, or some other place that has a fast internet connection, and no data limits.\r\n\r\n<img class=\"alignnone size-full wp-image-53\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload2.png\" alt=\"\" width=\"1920\" height=\"1053\" />\r\n\r\nOnce the download is complete, move the new .zip file to a directory of your choice. Personally, I prefer to install my downloaded applications in the /opt directory. Change directories to the one that you downloaded the .zip file to and issue the following command...\r\n<pre>sudo mv ./android-studio-ide-173.4907809-linux.zip /opt</pre>\r\nNext, unzip the file into the /opt directory by issuing the following command...\r\n<pre>sudo unzip ./android-studio-ide-173.4907809-linux.zip /opt</pre>\r\nWhen complete, you should see a new directory, android-studio, under /opt, and it should look like this...\r\n\r\n<img class=\"alignnone size-full wp-image-54\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidDirectory.png\" alt=\"\" width=\"708\" height=\"307\" />\r\n\r\nNext, change to the bin directory by issuing the following command...\r\n<pre>cd /opt/bin</pre>\r\nOnce there, issue the following command to start the Android Studio IDE...\r\n<pre>./studio.sh</pre>\r\nThis should give you the welcome screen below. Now we will get Android Studio set up for first use. These steps should only need to be done once.\r\n\r\n<img class=\"alignnone size-full wp-image-55\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidWelcome.png\" alt=\"\" width=\"800\" height=\"600\" />\r\n\r\nClick \'Next\' to get to the next screen.\r\n\r\n<img class=\"alignnone size-full wp-image-57\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStandardScreen.png\" alt=\"\" width=\"800\" height=\"600\" />\r\n\r\nMake sure that \'Standard\' is checked and click \'Next\'.\r\n\r\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioTheme.png\" alt=\"\" width=\"800\" height=\"600\" class=\"alignnone size-full wp-image-58\" />\r\n\r\nSelect a theme you like. I prefer \'Darkula\'. Then click \'Next\' to continue.\r\n\r\nOn the next screen, verify your installation settings. If you need to change anything click \'Previous\' to go back. Otherwise, click \'Next\' to begin the installation. Installation will take a few minutes, so go grab a beer and come back.\r\n\r\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioVerify.png\" alt=\"\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-59\" />\r\n\r\nAt the end of the installation your screen should look like this. Press \'Finish\' to complete the installation.\r\n\r\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDone.png\" alt=\"\" width=\"800\" height=\"600\" class=\"alignnone size-full wp-image-60\" />\r\n\r\nYour Android Studio installation is now complete. You should see the Welcome screen below.\r\n\r\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioComplete.png\" alt=\"\" width=\"676\" height=\"496\" class=\"alignnone size-full wp-image-61\" />\r\n\r\nThat completes this tutorial Installing Android Studio on Linux Mint 18.2. Please leave any questions or comments below, or contact me directly using the site\'s Contact Us \r\nform. Thank you for visiting! \r\n\r\n\r\n\r\n\r\n','Installing Android Studio on Linux Mint 18.2','','inherit','closed','closed','','50-revision-v1','','','2018-08-08 16:38:42','2018-08-08 16:38:42','',50,'http://coderdx.io/?p=62',0,'revision','',0),(63,1,'2018-08-08 16:42:59','2018-08-08 16:42:59','I recently enrolled in a free online React Native bootcamp offered by tylermcginnis.com. In the past I also took his React bootcamp, and found that educational and informative as well.\r\n\r\nAt one point in the React Native bootcamp, the instructor talks about IDE\'s and mentioned Xcode and Android Studio. I don\'t have a Mac right now, so I went ahead and installed Android Studio on my MSI GT72-2QD Dominator. That machine sports an Intel i7 CPU, 32 GB RAM, and 2, 525GB M.1 SATA drives, on a RAID-0 mirror.\r\n\r\nThe first step in installing Android Studio is to visit their website at https://developer.android.com/studio/. On the page that loads, you should see the download button. Under that button should show you current operating system. In my case, that was \'3.1.4 for Linux 64-bit (856 MB)\'.\r\n\r\n<img class=\"alignnone size-full wp-image-52\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload.png\" alt=\"\" width=\"1920\" height=\"1053\" />\r\n\r\nClick on the download button. With this, you should be presented with a terms and conditions page, with a checkbox to accept the terms and conditions. Click the checkbox to enable the download button. Then click the Download button to begin your download. In my case, the download was almost 900MB. Probably wouldn\'t recommend downloading from your mobile hotspot on your phone. Do it from your home, or some other place that has a fast internet connection, and no data limits.\r\n\r\n<img class=\"alignnone size-full wp-image-53\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload2.png\" alt=\"\" width=\"1920\" height=\"1053\" />\r\n\r\nOnce the download is complete, move the new .zip file to a directory of your choice. Personally, I prefer to install my downloaded applications in the /opt directory. Change directories to the one that you downloaded the .zip file to and issue the following command...\r\n<pre>sudo mv ./android-studio-ide-173.4907809-linux.zip /opt</pre>\r\nNext, unzip the file into the /opt directory by issuing the following command...\r\n<pre>sudo unzip ./android-studio-ide-173.4907809-linux.zip</pre>\r\nWhen complete, you should see a new directory, android-studio, under /opt, and it should look like this...\r\n\r\n<img class=\"alignnone size-full wp-image-54\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidDirectory.png\" alt=\"\" width=\"708\" height=\"307\" />\r\n\r\nNext, change to the bin directory by issuing the following command...\r\n<pre>cd /opt/bin</pre>\r\nOnce there, issue the following command to start the Android Studio IDE...\r\n<pre>./studio.sh</pre>\r\nThis should give you the welcome screen below. Now we will get Android Studio set up for first use. These steps should only need to be done once.\r\n\r\n<img class=\"alignnone size-full wp-image-55\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidWelcome.png\" alt=\"\" width=\"800\" height=\"600\" />\r\n\r\nClick \'Next\' to get to the next screen.\r\n\r\n<img class=\"alignnone size-full wp-image-57\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStandardScreen.png\" alt=\"\" width=\"800\" height=\"600\" />\r\n\r\nMake sure that \'Standard\' is checked and click \'Next\'.\r\n\r\n<img class=\"alignnone size-full wp-image-58\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioTheme.png\" alt=\"\" width=\"800\" height=\"600\" />\r\n\r\nSelect a theme you like. I prefer \'Darkula\'. Then click \'Next\' to continue.\r\n\r\nOn the next screen, verify your installation settings. If you need to change anything click \'Previous\' to go back. Otherwise, click \'Next\' to begin the installation. Installation will take a few minutes, so go grab a beer and come back.\r\n\r\n<img class=\"alignnone size-medium wp-image-59\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioVerify.png\" alt=\"\" width=\"300\" height=\"225\" />\r\n\r\nAt the end of the installation your screen should look like this. Press \'Finish\' to complete the installation.\r\n\r\n<img class=\"alignnone size-full wp-image-60\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDone.png\" alt=\"\" width=\"800\" height=\"600\" />\r\n\r\nYour Android Studio installation is now complete. You should see the Welcome screen below.\r\n\r\n<img class=\"alignnone size-full wp-image-61\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioComplete.png\" alt=\"\" width=\"676\" height=\"496\" />\r\n\r\nThat completes this tutorial on installing Android Studio on Linux Mint 18.2.\r\n\r\nPlease leave any questions or comments below, or contact me directly using the site\'s Contact Us form.\r\n\r\nThank you for visiting!','Installing Android Studio on Linux Mint 18.2','','inherit','closed','closed','','50-revision-v1','','','2018-08-08 16:42:59','2018-08-08 16:42:59','',50,'http://coderdx.io/?p=63',0,'revision','',0),(66,1,'2018-08-09 15:06:28','2018-08-09 15:06:28','','me2','','inherit','open','closed','','me2','','','2018-08-09 15:06:28','2018-08-09 15:06:28','',0,'http://coderdx.io/wp-content/uploads/2018/08/me2.jpg',0,'attachment','image/jpeg',0),(74,1,'2018-08-09 15:59:28','2018-08-09 15:59:28','I recently enrolled in a free online React Native bootcamp offered by tylermcginnis.com. In the past I also took his React bootcamp, and found that educational and informative as well.\n\nAt one point in the React Native bootcamp, the instructor talks about IDE\'s and mentioned Xcode and Android Studio. I don\'t have a Mac right now, so I went ahead and installed Android Studio on my MSI GT72-2QD Dominator. That machine sports an Intel i7 CPU, 32 GB RAM, and 2, 525GB M.1 SATA drives, on a RAID-0 mirror.\n\nThe first step in installing Android Studio is to visit their website at https://developer.android.com/studio/. On the page that loads, you should see the download button. Under that button should show you current operating system. In my case, that was \'3.1.4 for Linux 64-bit (856 MB)\'.\n\n<img class=\"alignnone size-full wp-image-52\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload.png\" alt=\"\" width=\"1920\" height=\"1053\">\n\nClick on the download button. With this, you should be presented with a terms and conditions page, with a checkbox to accept the terms and conditions. Click the checkbox to enable the download button. Then click the Download button to begin your download. In my case, the download was almost 900MB. Probably wouldn\'t recommend downloading from your mobile hotspot on your phone. Do it from your home, or some other place that has a fast internet connection, and no data limits.\n\n<img class=\"alignnone size-full wp-image-53\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload2.png\" alt=\"\" width=\"1920\" height=\"1053\">\n\nOnce the download is complete, move the new .zip file to a directory of your choice. Personally, I prefer to install my downloaded applications in the /opt directory. Change directories to the one that you downloaded the .zip file to and issue the following command...\n<pre>sudo mv ./android-studio-ide-173.4907809-linux.zip /opt</pre>\nNext, unzip the file into the /opt directory by issuing the following command...\n<pre>sudo unzip ./android-studio-ide-173.4907809-linux.zip</pre>\nWhen complete, you should see a new directory, android-studio, under /opt, and it should look like this...\n\n<img class=\"alignnone size-full wp-image-54\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidDirectory.png\" alt=\"\" width=\"708\" height=\"307\">\n\nNext, change to the bin directory by issuing the following command...\n<pre>cd /opt/bin</pre>\nOnce there, issue the following command to start the Android Studio IDE...\n<pre>./studio.sh</pre>\nThis should give you the welcome screen below. Now we will get Android Studio set up for first use. These steps should only need to be done once.\n\n<img class=\"alignnone size-full wp-image-55\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidWelcome.png\" alt=\"\" width=\"800\" height=\"600\">\n\nClick \'Next\' to get to the next screen.\n\n<img class=\"alignnone size-full wp-image-57\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStandardScreen.png\" alt=\"\" width=\"800\" height=\"600\">\n\nMake sure that \'Standard\' is checked and click \'Next\'.\n\n<img class=\"alignnone size-full wp-image-58\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioTheme.png\" alt=\"\" width=\"800\" height=\"600\">\n\nSelect a theme you like. I prefer \'Darkula\'. Then click \'Next\' to continue.\n\nOn the next screen, verify your installation settings. If you need to change anything click \'Previous\' to go back. Otherwise, click \'Next\' to begin the installation. Installation will take a few minutes, so go grab a beer and come back.\n\n<img class=\"alignnone size-medium wp-image-59\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioVerify.png\" alt=\"\" width=\"300\" height=\"225\">\n\nAt the end of the installation your screen should look like this. Press \'Finish\' to complete the installation.\n\n<img class=\"alignnone size-full wp-image-60\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDone.png\" alt=\"\" width=\"800\" height=\"600\">\n\nYour Android Studio installation is now complete. You should see the Welcome screen below.\n\n<img class=\"alignnone size-full wp-image-61\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioComplete.png\" alt=\"\" width=\"676\" height=\"496\">\n\nThat completes this tutorial on installing Android Studio on Linux Mint 18.2.\n\nPlease leave any questions or comments below, or contact me directly using the site\'s Contact Us form.\n\nThank you for visiting!','Installing Android Studio on Linux Mint 18.2','Step by step instruction with screenshots.','inherit','closed','closed','','50-revision-v1','','','2018-08-09 15:59:28','2018-08-09 15:59:28','',50,'http://coderdx.io/50-revision-v1/',0,'revision','',0),(79,1,'2018-08-09 11:08:28','2018-08-09 16:08:28','On June 5, 2014 I was laying in bed on my laptop and a thought occurred to me. I wonder if Austin has an IoT meetup group. I checked and sure enough, we didn\'t.\n\nMy next thought was I wonder what Silicon Valley is doing. A quick search for meetups in the Bay area revealed 13 groups that had \'IoT\' in their name.\n\nSo I filled out the form, sent in my $19 and went to bed. I didn\'t think anything of it. I thought it was going to evaporate in the light of day, like most of my other 2am brainstorms.\n\nOver the next few days I started to notice people were signing up for this thing. I called my buddy Jeff and said, oh shit, now I have to come up with something.\n\nThat was just over 4 years ago and, at the time of the writing of this article, the Austin Internet of Things meetup is just over 2,900 members. We have enjoyed notoriety and sponsorship from big name companies like Intel, Microsoft, Dell, IBM, NXP Semiconductor, and many others.\n\nWe have become the leader in Internet of Things meetups in Austin, and are continuing to grow.\n\nClick&nbsp;<a href=\"http://www.austiniot.org\" target=\"_blank\" rel=\"noopener\">here</a>&nbsp;to check out our website.\n\nif you live or work in the Austin, TX area, or are planning to visit, please check our meetup page&nbsp;<a href=\"https://www.meetup.com/AustinIoT\" target=\"_blank\" rel=\"noopener\">here</a>&nbsp;and stop in at one of our meetups!\n\n&nbsp;','','','inherit','closed','closed','','19-revision-v1','','','2018-08-09 11:08:28','2018-08-09 16:08:28','',19,'http://coderdx.io/19-revision-v1/',0,'revision','',0),(81,1,'2018-08-09 11:09:06','2018-08-09 16:09:06','On June 5, 2014 I was laying in bed on my laptop and a thought occurred to me. I wonder if Austin has an IoT meetup group. I checked and sure enough, we didn\'t.\n\nMy next thought was I wonder what Silicon Valley is doing. A quick search for meetups in the Bay area revealed 13 groups that had \'IoT\' in their name.\n\nSo I filled out the form, sent in my $19 and went to bed. I didn\'t think anything of it. I thought it was going to evaporate in the light of day, like most of my other 2am brainstorms.\n\nOver the next few days I started to notice people were signing up for this thing. I called my buddy Jeff and said, oh shit, now I have to come up with something.\n\nThat was just over 4 years ago and, at the time of the writing of this article, the Austin Internet of Things meetup is just over 2,900 members. We have enjoyed notoriety and sponsorship from big name companies like Intel, Microsoft, Dell, IBM, NXP Semiconductor, and many others.\n\nWe have become the leader in Internet of Things meetups in Austin, and are continuing to grow.\n\nClick&nbsp;<a href=\"http://www.austiniot.org\" target=\"_blank\" rel=\"noopener\">here</a>&nbsp;to check out our website.\n\nif you live or work in the Austin, TX area, or are planning to visit, please check our meetup page&nbsp;<a href=\"https://www.meetup.com/AustinIoT\" target=\"_blank\" rel=\"noopener\">here</a>&nbsp;and stop in at one of our meetups!\n\n&nbsp;','Austin IoT Meetup','','inherit','closed','closed','','19-revision-v1','','','2018-08-09 11:09:06','2018-08-09 16:09:06','',19,'http://coderdx.io/19-revision-v1/',0,'revision','',0),(82,1,'2018-08-09 11:09:29','2018-08-09 16:09:29','On June 5, 2014 I was laying in bed on my laptop and a thought occurred to me. I wonder if Austin has an IoT meetup group. I checked and sure enough, we didn\'t.\n\nMy next thought was I wonder what Silicon Valley is doing. A quick search for meetups in the Bay area revealed 13 groups that had \'IoT\' in their name.\n\nSo I filled out the form, sent in my $19 and went to bed. I didn\'t think anything of it. I thought it was going to evaporate in the light of day, like most of my other 2am brainstorms.\n\nOver the next few days I started to notice people were signing up for this thing. I called my buddy Jeff and said, oh shit, now I have to come up with something.\n\nThat was just over 4 years ago and, at the time of the writing of this article, the Austin Internet of Things meetup is just over 2,900 members. We have enjoyed notoriety and sponsorship from big name companies like Intel, Microsoft, Dell, IBM, NXP Semiconductor, and many others.\n\nWe have become the leader in Internet of Things meetups in Austin, and are continuing to grow.\n\nClick&nbsp;<a href=\"http://www.austiniot.org\" target=\"_blank\" rel=\"noopener\">here</a>&nbsp;to check out our website.\n\nif you live or work in the Austin, TX area, or are planning to visit, please check our meetup page&nbsp;<a href=\"https://www.meetup.com/AustinIoT\" target=\"_blank\" rel=\"noopener\">here</a>&nbsp;and stop in at one of our meetups!\n\n&nbsp;','Austin IoT Meetup Group','','inherit','closed','closed','','19-revision-v1','','','2018-08-09 11:09:29','2018-08-09 16:09:29','',19,'http://coderdx.io/19-revision-v1/',0,'revision','',0),(84,1,'2018-08-09 11:16:10','2018-08-09 16:16:10','I recently enrolled in a free online React Native bootcamp offered by tylermcginnis.com. In the past I also took his React bootcamp, and found that educational and informative as well.\n\nAt one point in the React Native bootcamp, the instructor talks about IDE\'s and mentioned Xcode and Android Studio. I don\'t have a Mac right now, so I went ahead and installed Android Studio on my MSI GT72-2QD Dominator. That machine sports an Intel i7 CPU, 32 GB RAM, and 2, 525GB M.1 SATA drives, on a RAID-0 mirror.\n\nThe first step in installing Android Studio is <!--more-->to visit their website at https://developer.android.com/studio/. On the page that loads, you should see the download button. Under that button should show you current operating system. In my case, that was \'3.1.4 for Linux 64-bit (856 MB)\'.\n\n<img class=\"alignnone size-full wp-image-52\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload.png\" alt=\"\" width=\"1920\" height=\"1053\" />\n\nClick on the download button. With this, you should be presented with a terms and conditions page, with a checkbox to accept the terms and conditions. Click the checkbox to enable the download button. Then click the Download button to begin your download. In my case, the download was almost 900MB. Probably wouldn\'t recommend downloading from your mobile hotspot on your phone. Do it from your home, or some other place that has a fast internet connection, and no data limits.\n\n<img class=\"alignnone size-full wp-image-53\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload2.png\" alt=\"\" width=\"1920\" height=\"1053\" />\n\nOnce the download is complete, move the new .zip file to a directory of your choice. Personally, I prefer to install my downloaded applications in the /opt directory. Change directories to the one that you downloaded the .zip file to and issue the following command...\n<pre>sudo mv ./android-studio-ide-173.4907809-linux.zip /opt</pre>\nNext, unzip the file into the /opt directory by issuing the following command...\n<pre>sudo unzip ./android-studio-ide-173.4907809-linux.zip</pre>\nWhen complete, you should see a new directory, android-studio, under /opt, and it should look like this...\n\n<img class=\"alignnone size-full wp-image-54\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidDirectory.png\" alt=\"\" width=\"708\" height=\"307\" />\n\nNext, change to the bin directory by issuing the following command...\n<pre>cd /opt/bin</pre>\nOnce there, issue the following command to start the Android Studio IDE...\n<pre>./studio.sh</pre>\nThis should give you the welcome screen below. Now we will get Android Studio set up for first use. These steps should only need to be done once.\n\n<img class=\"alignnone size-full wp-image-55\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidWelcome.png\" alt=\"\" width=\"800\" height=\"600\" />\n\nClick \'Next\' to get to the next screen.\n\n<img class=\"alignnone size-full wp-image-57\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStandardScreen.png\" alt=\"\" width=\"800\" height=\"600\" />\n\nMake sure that \'Standard\' is checked and click \'Next\'.\n\n<img class=\"alignnone size-full wp-image-58\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioTheme.png\" alt=\"\" width=\"800\" height=\"600\" />\n\nSelect a theme you like. I prefer \'Darkula\'. Then click \'Next\' to continue.\n\nOn the next screen, verify your installation settings. If you need to change anything click \'Previous\' to go back. Otherwise, click \'Next\' to begin the installation. Installation will take a few minutes, so go grab a beer and come back.\n\n<img class=\"alignnone size-medium wp-image-59\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioVerify.png\" alt=\"\" width=\"300\" height=\"225\" />\n\nAt the end of the installation your screen should look like this. Press \'Finish\' to complete the installation.\n\n<img class=\"alignnone size-full wp-image-60\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDone.png\" alt=\"\" width=\"800\" height=\"600\" />\n\nYour Android Studio installation is now complete. You should see the Welcome screen below.\n\n<img class=\"alignnone size-full wp-image-61\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioComplete.png\" alt=\"\" width=\"676\" height=\"496\" />\n\nThat completes this tutorial on installing Android Studio on Linux Mint 18.2.\n\nPlease leave any questions or comments below, or contact me directly using the site\'s Contact Us form.\n\nThank you for visiting!','Installing Android Studio on Linux Mint 18.2','Step by step instruction with screenshots.','inherit','closed','closed','','50-revision-v1','','','2018-08-09 11:16:10','2018-08-09 16:16:10','',50,'http://coderdx.io/50-revision-v1/',0,'revision','',0),(86,1,'2018-08-09 11:18:21','2018-08-09 16:18:21','I recently enrolled in a free online React Native bootcamp offered by tylermcginnis.com. In the past I also took his React bootcamp, and found that educational and informative as well.\n\nAt one point in the React Native bootcamp, the instructor talks about IDE\'s and mentioned Xcode and Android Studio. I don\'t have a Mac right now, so I went ahead and installed Android Studio on my MSI GT72-2QD Dominator. That machine sports an Intel i7 CPU, 32 GB RAM, and 2, 525GB M.1 SATA drives, on a RAID-0 mirror.<!--more-->\n\nThe first step in installing Android Studio is to visit their website at https://developer.android.com/studio/. On the page that loads, you should see the download button. Under that button should show you current operating system. In my case, that was \'3.1.4 for Linux 64-bit (856 MB)\'.\n\n<img class=\"alignnone size-full wp-image-52\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload.png\" alt=\"\" width=\"1920\" height=\"1053\" />\n\nClick on the download button. With this, you should be presented with a terms and conditions page, with a checkbox to accept the terms and conditions. Click the checkbox to enable the download button. Then click the Download button to begin your download. In my case, the download was almost 900MB. Probably wouldn\'t recommend downloading from your mobile hotspot on your phone. Do it from your home, or some other place that has a fast internet connection, and no data limits.\n\n<img class=\"alignnone size-full wp-image-53\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDownload2.png\" alt=\"\" width=\"1920\" height=\"1053\" />\n\nOnce the download is complete, move the new .zip file to a directory of your choice. Personally, I prefer to install my downloaded applications in the /opt directory. Change directories to the one that you downloaded the .zip file to and issue the following command...\n<pre>sudo mv ./android-studio-ide-173.4907809-linux.zip /opt</pre>\nNext, unzip the file into the /opt directory by issuing the following command...\n<pre>sudo unzip ./android-studio-ide-173.4907809-linux.zip</pre>\nWhen complete, you should see a new directory, android-studio, under /opt, and it should look like this...\n\n<img class=\"alignnone size-full wp-image-54\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidDirectory.png\" alt=\"\" width=\"708\" height=\"307\" />\n\nNext, change to the bin directory by issuing the following command...\n<pre>cd /opt/bin</pre>\nOnce there, issue the following command to start the Android Studio IDE...\n<pre>./studio.sh</pre>\nThis should give you the welcome screen below. Now we will get Android Studio set up for first use. These steps should only need to be done once.\n\n<img class=\"alignnone size-full wp-image-55\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidWelcome.png\" alt=\"\" width=\"800\" height=\"600\" />\n\nClick \'Next\' to get to the next screen.\n\n<img class=\"alignnone size-full wp-image-57\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStandardScreen.png\" alt=\"\" width=\"800\" height=\"600\" />\n\nMake sure that \'Standard\' is checked and click \'Next\'.\n\n<img class=\"alignnone size-full wp-image-58\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioTheme.png\" alt=\"\" width=\"800\" height=\"600\" />\n\nSelect a theme you like. I prefer \'Darkula\'. Then click \'Next\' to continue.\n\nOn the next screen, verify your installation settings. If you need to change anything click \'Previous\' to go back. Otherwise, click \'Next\' to begin the installation. Installation will take a few minutes, so go grab a beer and come back.\n\n<img class=\"alignnone size-medium wp-image-59\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioVerify.png\" alt=\"\" width=\"300\" height=\"225\" />\n\nAt the end of the installation your screen should look like this. Press \'Finish\' to complete the installation.\n\n<img class=\"alignnone size-full wp-image-60\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioDone.png\" alt=\"\" width=\"800\" height=\"600\" />\n\nYour Android Studio installation is now complete. You should see the Welcome screen below.\n\n<img class=\"alignnone size-full wp-image-61\" src=\"http://coderdx.io/wp-content/uploads/2018/08/androidStudioComplete.png\" alt=\"\" width=\"676\" height=\"496\" />\n\nThat completes this tutorial on installing Android Studio on Linux Mint 18.2.\n\nPlease leave any questions or comments below, or contact me directly using the site\'s Contact Us form.\n\nThank you for visiting!','Installing Android Studio on Linux Mint 18.2','Step by step instruction with screenshots.','inherit','closed','closed','','50-revision-v1','','','2018-08-09 11:18:21','2018-08-09 16:18:21','',50,'http://coderdx.io/50-revision-v1/',0,'revision','',0),(89,1,'2018-08-12 19:26:34','2018-08-13 00:26:34','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of websites I have touched throughout my career. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online when a developer moves on to another job. As a result, I do not have a lot of code samples to share.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of my experience in web development.\n<div><img style=\"float: right; width: 231px; height: 101px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>.</p>\n\n</div>\n<div><img style=\"float: left; width: 230px; height: 119px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div><img style=\"float: right; width: 230px; height: 230px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 90px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div><img style=\"float: right; width: 197px; height: 97px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\" rel=\"noopener\">alfredscatering.com</a></p>\n\n</div>\n<div><img style=\"float: right; width: 250px; height: 92px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/artinvesta-logo.gif\" alt=\"Artinvesta Logo\">\n<p style=\"float: none;\">Artinvesta is an Australian based company specializing in the retail exchange of artwork. Artists can list their works on the site. Artinvesta brokers the sale. The site features a custom PHP design. My interaction with the project involved adding site updates, modifying content, and fixing bugs. I also implemented PayPal integration, allowing purchasers to pay for their purchases online on the site. Visit Artinvesta at <a href=\"https://www.artinvesta.com\" target=\"_blank\" rel=\"noopener\">artinvesta.com</a>.</p>\n\n</div>\n<span style=\"font-style: italic;\">...Work in progress. I have more to add. Please stay tuned!</span>','Portfolio','','publish','closed','closed','','portfolio','','','2018-08-20 13:49:51','2018-08-20 18:49:51','',0,'http://coderdx.io/?page_id=89',0,'page','',0),(90,1,'2018-08-12 19:26:34','2018-08-13 00:26:34','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data into back end databases, like MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes and the programming I did, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio.\n\nAlso, many of the companies and projects I have worked on did not stand the test of time. For these I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the anti-chronological summary of all my web development experience. Until this sentence has been removed, this list is incomplete. This is going to take a while!','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 19:26:34','2018-08-13 00:26:34','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(91,1,'2018-08-12 19:27:03','2018-08-13 00:27:03',' ','','','publish','closed','closed','','91','','','2018-08-12 19:27:03','2018-08-13 00:27:03','',0,'http://coderdx.io/?p=91',4,'nav_menu_item','',0),(92,1,'2018-08-12 19:28:20','2018-08-13 00:28:20','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data into back end databases, like MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes and the programming I did, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio.\n\nAlso, many of the companies and projects I have worked on did not stand the test of time. For these I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the anti-chronological summary of all my web development experience. Until this sentence has been removed, this list is incomplete. This is going to take a while!','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 19:28:20','2018-08-13 00:28:20','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(94,1,'2018-08-12 19:30:11','2018-08-13 00:30:11','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes and the programming I did, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio.\n\nAlso, many of the companies and projects I have worked on did not stand the test of time. For these I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the anti-chronological summary of all my web development experience. Until this sentence has been removed, this list is incomplete. This is going to take a while!','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 19:30:11','2018-08-13 00:30:11','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(95,1,'2018-08-12 19:33:04','2018-08-13 00:33:04','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio.\n\nAlso, many of the companies and projects I have worked on did not stand the test of time. For these I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the anti-chronological summary of all my web development experience. Until this sentence has been removed, this list is incomplete. This is going to take a while!','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 19:33:04','2018-08-13 00:33:04','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(96,1,'2018-08-12 19:34:29','2018-08-13 00:34:29','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on did not stand the test of time. For these I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the anti-chronological summary of all my web development experience. Until this sentence has been removed, this list is incomplete. This is going to take a while!','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 19:34:29','2018-08-13 00:34:29','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(97,1,'2018-08-12 19:35:13','2018-08-13 00:35:13','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the anti-chronological summary of all my web development experience. Until this sentence has been removed, this list is incomplete. This is going to take a while!','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 19:35:13','2018-08-13 00:35:13','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(98,1,'2018-08-12 19:35:57','2018-08-13 00:35:57','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the anti-chronological summary of all my web development experience. Until this sentence has been removed, this list is incomplete. This is going to take a while!','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 19:35:57','2018-08-13 00:35:57','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(100,1,'2018-08-12 19:37:11','2018-08-13 00:37:11','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 19:37:11','2018-08-13 00:37:11','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(102,1,'2018-08-12 20:13:28','2018-08-13 01:13:28','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<div style=\"width : 33%;> Image here</div>\n<div style=\" width=\"\" :=\"\" 66%;=\"\">\n\nDescription here\n\n</div>\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 20:13:28','2018-08-13 01:13:28','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(103,1,'2018-08-12 20:15:05','2018-08-13 01:15:05','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<div style=\"width : 33%;> Image here</div>\n<div style=\" width=\"\" :=\"\" 66%;=\"\"> Description here</div>\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 20:15:05','2018-08-13 01:15:05','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(104,1,'2018-08-12 20:16:47','2018-08-13 01:16:47','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<div style=\"width : 33%;\"> Image here</div>\n<div style=\"width : 66%;\"> Description here</div>\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 20:16:47','2018-08-13 01:16:47','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(105,1,'2018-08-12 20:17:50','2018-08-13 01:17:50','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<div style=\"width : 33%;float:left\"> Image here</div>\n<div style=\"width : 66%;float:left\"> Description here</div>\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 20:17:50','2018-08-13 01:17:50','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(106,1,'2018-08-12 20:20:50','2018-08-13 01:20:50','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<div style=\"width : 33%;float:left\">Image here</div>\n<div style=\"width : 66%;float:left\">Description here</div>\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 20:20:50','2018-08-13 01:20:50','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(107,1,'2018-08-12 20:43:25','2018-08-13 01:43:25','<p>My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).</p>\n<p>Times have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.</p>\n<p>The sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.</p>\n<p>What follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.</p>\n<p>The question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.</p>\n<p>Also, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.</p>\n<p>That being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!</p>\n<div>\n<div style=\"width: 33%; float: left;\"></div></div>\n\n<!-- wp:image {\"id\":24,\"align\":\"left\",\"width\":231,\"height\":101} -->\n<figure class=\"wp-block-image alignleft is-resized\"><img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"\" class=\"wp-image-24\" width=\"231\" height=\"101\"/></figure>\n<!-- /wp:image -->\n\n\n<div style=\"width: 66%; float: left;\">Description here</div>\n','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 20:43:25','2018-08-13 01:43:25','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(108,1,'2018-08-12 20:45:45','2018-08-13 01:45:45','<p>My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).</p>\n<p>Times have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.</p>\n<p>The sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.</p>\n<p>What follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.</p>\n<p>The question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.</p>\n<p>Also, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.</p>\n<p>That being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!</p>\n\n<!-- wp:image {\"id\":24,\"align\":\"left\",\"width\":231,\"height\":101} -->\n<figure class=\"wp-block-image alignleft is-resized\"><img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"\" class=\"wp-image-24\" width=\"231\" height=\"101\"/></figure>\n<!-- /wp:image -->\n\n<p style=\"float: left;\">Description here</p>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 20:45:45','2018-08-13 01:45:45','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(109,1,'2018-08-12 20:51:06','2018-08-13 01:51:06','<p>My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).</p>\n<p>Times have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.</p>\n<p>The sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.</p>\n<p>What follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.</p>\n<p>The question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.</p>\n<p>Also, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.</p>\n<p>That being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!</p>\n\n<!-- wp:image {\"id\":24,\"align\":\"left\",\"width\":231,\"height\":101} -->\n<figure class=\"wp-block-image alignleft is-resized\"><img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"\" class=\"wp-image-24\" width=\"231\" height=\"101\"/></figure>\n<!-- /wp:image -->\n\n<p style=\"float: left;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. </p>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 20:51:06','2018-08-13 01:51:06','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(110,1,'2018-08-12 20:52:41','2018-08-13 01:52:41','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:left;\" width=\"231\" height=\"101\">\n<p style=\"float: left;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES.</p>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 20:52:41','2018-08-13 01:52:41','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(111,1,'2018-08-12 20:54:06','2018-08-13 01:54:06','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:left; width:231; height:101;\">\n<p style=\"float: left;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES.</p>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 20:54:06','2018-08-13 01:54:06','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(112,1,'2018-08-12 20:54:36','2018-08-13 01:54:36','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:left; width:231px; height:101px;\">\n<p style=\"float: left;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES.</p>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 20:54:36','2018-08-13 01:54:36','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(113,1,'2018-08-12 20:57:01','2018-08-13 01:57:01','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:left; width:231px; height:101px;\">\n<p style=\"float: left;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 20:57:01','2018-08-13 01:57:01','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(114,1,'2018-08-12 21:00:41','2018-08-13 02:00:41','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: left;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:00:41','2018-08-13 02:00:41','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(115,1,'2018-08-12 21:02:55','2018-08-13 02:02:55','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:02:55','2018-08-13 02:02:55','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(116,1,'2018-08-12 21:05:38','2018-08-13 02:05:38','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n\n<a href=\"https://www.kerbob.io\">\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n</a>\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:05:38','2018-08-13 02:05:38','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(117,1,'2018-08-12 21:06:18','2018-08-13 02:06:18','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n\n<a href=\"https://www.kerbob.io\" target=\"_blank\">\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n</a>\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:06:18','2018-08-13 02:06:18','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(118,1,'2018-08-12 21:08:30','2018-08-13 02:08:30','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. Please visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a></p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:08:30','2018-08-13 02:08:30','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(119,1,'2018-08-12 21:10:20','2018-08-13 02:10:20','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas on interest, including state-of-the-art web development, industrial IoT, and connected devices. Please visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a></p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:10:20','2018-08-13 02:10:20','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(120,1,'2018-08-12 21:12:40','2018-08-13 02:12:40','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas on interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a></p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:12:40','2018-08-13 02:12:40','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(121,1,'2018-08-12 21:13:18','2018-08-13 02:13:18','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas on interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:13:18','2018-08-13 02:13:18','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(122,1,'2018-08-12 21:14:04','2018-08-13 02:14:04','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:14:04','2018-08-13 02:14:04','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(124,1,'2018-08-12 21:25:16','2018-08-13 02:25:16','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:25:16','2018-08-13 02:25:16','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(125,1,'2018-08-12 21:25:30','2018-08-13 02:25:30','','cig-logo','','inherit','open','closed','','cig-logo','','','2018-08-12 21:25:30','2018-08-13 02:25:30','',0,'http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg',0,'attachment','image/jpeg',0),(127,1,'2018-08-12 21:28:09','2018-08-13 02:28:09','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:28:09','2018-08-13 02:28:09','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(128,1,'2018-08-12 21:32:59','2018-08-13 02:32:59','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking. For 5-1/2 years I worked as a full time employee of this company. My Design and implementation of web-based application using React and Angular. Conversion of legacy logistics company application to current standards. Application used to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Used by 60+ locations within the company across the country. The application was originally created overseas, when the company was much smaller. In the converting it to custom MVC, using the Klein router, and following MVC best practices. Workflow involves creation of Jira sprints, tasks and epics, making changes, and submitting pull requests to github. Application employs an extensive inheritance structure, and model classes including complex join queries to a 72 table MySQL table database. Desktop, mobile, and API versions all share the same model classes via the Klein router.  Application uses Composer. Application has a separate component written in Javascript using Node.js used on automated silos.</p>\n\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:32:59','2018-08-13 02:32:59','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(129,1,'2018-08-12 21:33:21','2018-08-13 02:33:21','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking. For 3-1/2 years I worked as a full time employee of this company. My Design and implementation of web-based application using React and Angular. Conversion of legacy logistics company application to current standards. Application used to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Used by 60+ locations within the company across the country. The application was originally created overseas, when the company was much smaller. In the converting it to custom MVC, using the Klein router, and following MVC best practices. Workflow involves creation of Jira sprints, tasks and epics, making changes, and submitting pull requests to github. Application employs an extensive inheritance structure, and model classes including complex join queries to a 72 table MySQL table database. Desktop, mobile, and API versions all share the same model classes via the Klein router.  Application uses Composer. Application has a separate component written in Javascript using Node.js used on automated silos.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:33:21','2018-08-13 02:33:21','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(130,1,'2018-08-12 21:47:13','2018-08-13 02:47:13','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking. This site is an internal web based application and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on the application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive inheritance structure, and model classes including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:47:13','2018-08-13 02:47:13','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(131,1,'2018-08-12 21:48:02','2018-08-13 02:48:02','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on the application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive inheritance structure, and model classes including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:48:02','2018-08-13 02:48:02','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(132,1,'2018-08-12 21:48:30','2018-08-13 02:48:30','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on the application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive inheritance structure, and model classes including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:48:30','2018-08-13 02:48:30','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(133,1,'2018-08-12 21:49:03','2018-08-13 02:49:03','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive inheritance structure, and model classes including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:49:03','2018-08-13 02:49:03','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(134,1,'2018-08-12 21:55:53','2018-08-13 02:55:53','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure, and model classes including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:55:53','2018-08-13 02:55:53','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(135,1,'2018-08-12 21:56:43','2018-08-13 02:56:43','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 21:56:43','2018-08-13 02:56:43','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(137,1,'2018-08-12 22:10:25','2018-08-13 03:10:25','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:119px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website unsing WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 22:10:25','2018-08-13 03:10:25','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(138,1,'2018-08-12 22:10:52','2018-08-13 03:10:52','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website unsing WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 22:10:52','2018-08-13 03:10:52','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(139,1,'2018-08-12 22:12:22','2018-08-13 03:12:22','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and itutilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 22:12:22','2018-08-13 03:12:22','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(140,1,'2018-08-12 22:19:59','2018-08-13 03:19:59','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-12 22:19:59','2018-08-13 03:19:59','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(142,1,'2018-08-13 09:50:38','2018-08-13 14:50:38','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n...work in progress. More to come.','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-13 09:50:38','2018-08-13 14:50:38','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(144,1,'2018-08-13 10:22:34','2018-08-13 15:22:34','','me','','inherit','open','closed','','me','','','2018-08-13 10:22:34','2018-08-13 15:22:34','',0,'http://coderdx.io/wp-content/uploads/2018/08/me.png',0,'attachment','image/png',0),(147,1,'2018-08-13 13:54:35','2018-08-13 18:54:35','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts to track their water usage. the other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage. Following several meetings with Dr. McGee and his design team, I architected a complete web based application using Zend Framework and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n...work in progress. More to come.','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-13 13:54:35','2018-08-13 18:54:35','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(149,1,'2018-08-13 14:18:49','2018-08-13 19:18:49','','h2o-logo-web2','','inherit','open','closed','','h2o-logo-web2-2','','','2018-08-13 14:18:49','2018-08-13 19:18:49','',0,'http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg',0,'attachment','image/jpeg',0),(151,1,'2018-08-13 14:20:39','2018-08-13 19:20:39','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"AustinIoT Logo\" style=\"float:left; width:250px; height:90px;\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts to track their water usage. the other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage. Following several meetings with Dr. McGee and his design team, I architected a complete web based application using Zend Framework and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n...work in progress. More to come.','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-13 14:20:39','2018-08-13 19:20:39','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(152,1,'2018-08-13 14:22:55','2018-08-13 19:22:55','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"AustinIoT Logo\" style=\"float:left; width:250px; height:90px;\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n...work in progress. More to come.','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-13 14:22:55','2018-08-13 19:22:55','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(154,1,'2018-08-13 15:04:42','2018-08-13 20:04:42','','rodman-logo','','inherit','open','closed','','rodman-logo','','','2018-08-13 15:04:42','2018-08-13 20:04:42','',0,'http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg',0,'attachment','image/jpeg',0),(155,1,'2018-08-13 15:12:34','2018-08-13 20:12:34','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\" style=\"float:left; width:250px; height:90px;\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\" style=\"float:right; width:197px; height:97px;\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n...work in progress. More to come.','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-13 15:12:34','2018-08-13 20:12:34','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(158,1,'2018-08-13 15:47:31','2018-08-13 20:47:31','','alfreds-catering-logo','','inherit','open','closed','','alfreds-catering-logo','','','2018-08-13 15:47:31','2018-08-13 20:47:31','',0,'http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png',0,'attachment','image/png',0),(159,1,'2018-08-13 15:48:28','2018-08-13 20:48:28','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\" style=\"float:left; width:250px; height:90px;\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\" style=\"float:right; width:197px; height:97px;\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\" style=\"float:right; width:250px; height:67px;\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events.</p>\n\n</div>\n...work in progress. More to come.','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-13 15:48:28','2018-08-13 20:48:28','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(160,1,'2018-08-13 15:54:31','2018-08-13 20:54:31','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\" style=\"float:left; width:250px; height:90px;\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\" style=\"float:right; width:197px; height:97px;\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\" style=\"float:left; width:250px; height:67px;\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business.Following that lead, we created a website for him using WordPress. The site contains full menus, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\">alfredscatering.com</a></p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-13 15:54:31','2018-08-13 20:54:31','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(161,1,'2018-08-13 15:55:14','2018-08-13 20:55:14','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\" style=\"float:left; width:250px; height:90px;\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\" style=\"float:right; width:197px; height:97px;\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\" style=\"float:left; width:250px; height:67px;\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\">alfredscatering.com</a></p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-13 15:55:14','2018-08-13 20:55:14','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(162,1,'2018-08-13 15:56:08','2018-08-13 20:56:08','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\" style=\"float:left; width:250px; height:90px;\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\" style=\"float:right; width:197px; height:97px;\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\" style=\"float:left; width:250px; height:67px;\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\">alfredscatering.com</a></p>\n\n</div>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-13 15:56:08','2018-08-13 20:56:08','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(163,1,'2018-08-13 16:11:34','2018-08-13 21:11:34','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\" style=\"float:left; width:250px; height:90px;\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\" style=\"float:right; width:197px; height:97px;\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\" style=\"float:left; width:250px; height:67px;\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\">alfredscatering.com</a></p>\n\n</div>\n...Work in progress. I have 8 more to add. Please stay turned!','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-13 16:11:34','2018-08-13 21:11:34','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(165,1,'2018-08-13 16:14:45','2018-08-13 21:14:45','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\" style=\"float:right; width:231px; height:101px;\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\">www.kerbob.io</a>.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\" style=\"float:left; width:230px; height:119px;\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\" style=\"float:right; width:230px; height:230px;\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\" style=\"float:left; width:250px; height:90px;\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\" style=\"float:right; width:197px; height:97px;\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div>\n<img src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\" style=\"float:left; width:250px; height:67px;\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\">alfredscatering.com</a></p>\n\n</div>\n<span style=\"font-style:italic\">...Work in progress. I have 8 more to add. Please stay tuned!</span>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-13 16:14:45','2018-08-13 21:14:45','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(168,1,'2018-08-16 16:38:46','2018-08-16 21:38:46','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div><img style=\"float: right; width: 231px; height: 101px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>.</p>\n\n</div>\n<div><img style=\"float: left; width: 230px; height: 119px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div><img style=\"float: right; width: 230px; height: 230px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 90px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div><img style=\"float: right; width: 197px; height: 97px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\" rel=\"noopener\">alfredscatering.com</a></p>\n\n</div>\n<div><img style=\"float: right; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Artinvesta Logo\">\n<p style=\"float: none;\">Artinvesta is an Australian based company specializing in the ertail exchange of artwork. Artists can list their works on the site. Artinvesta brokers the sale. Visit Artinvesta at <a href=\"https://www.artinvesta.com\" target=\"_blank\" rel=\"noopener\">artinvesta.com</a></p>\n\n</div>\n<span style=\"font-style: italic;\">...Work in progress. I have 7 more to add. Please stay tuned!</span>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-16 16:38:46','2018-08-16 21:38:46','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(169,1,'2018-08-16 16:40:31','2018-08-16 21:40:31','','artinvesta-logo','','inherit','open','closed','','artinvesta-logo','','','2018-08-16 16:40:31','2018-08-16 21:40:31','',0,'http://coderdx.io/wp-content/uploads/2018/08/artinvesta-logo.gif',0,'attachment','image/gif',0),(171,1,'2018-08-16 16:43:30','2018-08-16 21:43:30','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div><img style=\"float: right; width: 231px; height: 101px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>.</p>\n\n</div>\n<div><img style=\"float: left; width: 230px; height: 119px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div><img style=\"float: right; width: 230px; height: 230px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 90px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div><img style=\"float: right; width: 197px; height: 97px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\" rel=\"noopener\">alfredscatering.com</a></p>\n\n</div>\n<div><img style=\"float: right; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/artinvesta-logo.png\" alt=\"Artinvesta Logo\">\n<p style=\"float: none;\">Artinvesta is an Australian based company specializing in the ertail exchange of artwork. Artists can list their works on the site. Artinvesta brokers the sale. Visit Artinvesta at <a href=\"https://www.artinvesta.com\" target=\"_blank\" rel=\"noopener\">artinvesta.com</a>. the site features a custom PHP design. My interaction with the project involved adding site updates, modifying content, and fixing bugs. I also implemented PayPal integration, allowing purchasers to pay for their purchases online on the site.</p>\n\n</div>\n<span style=\"font-style: italic;\">...Work in progress. I have 7 more to add. Please stay tuned!</span>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-16 16:43:30','2018-08-16 21:43:30','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(172,1,'2018-08-16 16:44:02','2018-08-16 21:44:02','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div><img style=\"float: right; width: 231px; height: 101px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>.</p>\n\n</div>\n<div><img style=\"float: left; width: 230px; height: 119px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div><img style=\"float: right; width: 230px; height: 230px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 90px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div><img style=\"float: right; width: 197px; height: 97px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\" rel=\"noopener\">alfredscatering.com</a></p>\n\n</div>\n<div><img style=\"float: right; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/artinvesta-logo.gif\" alt=\"Artinvesta Logo\">\n<p style=\"float: none;\">Artinvesta is an Australian based company specializing in the ertail exchange of artwork. Artists can list their works on the site. Artinvesta brokers the sale. Visit Artinvesta at <a href=\"https://www.artinvesta.com\" target=\"_blank\" rel=\"noopener\">artinvesta.com</a>. the site features a custom PHP design. My interaction with the project involved adding site updates, modifying content, and fixing bugs. I also implemented PayPal integration, allowing purchasers to pay for their purchases online on the site.</p>\n\n</div>\n<span style=\"font-style: italic;\">...Work in progress. I have 7 more to add. Please stay tuned!</span>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-16 16:44:02','2018-08-16 21:44:02','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(173,1,'2018-08-16 16:46:24','2018-08-16 21:46:24','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div><img style=\"float: right; width: 231px; height: 101px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>.</p>\n\n</div>\n<div><img style=\"float: left; width: 230px; height: 119px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div><img style=\"float: right; width: 230px; height: 230px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 90px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div><img style=\"float: right; width: 197px; height: 97px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\" rel=\"noopener\">alfredscatering.com</a></p>\n\n</div>\n<div><img style=\"float: right; width: 250px; height: 92px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/artinvesta-logo.gif\" alt=\"Artinvesta Logo\">\n<p style=\"float: none;\">Artinvesta is an Australian based company specializing in the ertail exchange of artwork. Artists can list their works on the site. Artinvesta brokers the sale. Visit Artinvesta at <a href=\"https://www.artinvesta.com\" target=\"_blank\" rel=\"noopener\">artinvesta.com</a>. the site features a custom PHP design. My interaction with the project involved adding site updates, modifying content, and fixing bugs. I also implemented PayPal integration, allowing purchasers to pay for their purchases online on the site.</p>\n\n</div>\n<span style=\"font-style: italic;\">...Work in progress. I have 7 more to add. Please stay tuned!</span>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-16 16:46:24','2018-08-16 21:46:24','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(175,1,'2018-08-16 16:49:58','2018-08-16 21:49:58','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div><img style=\"float: right; width: 231px; height: 101px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>.</p>\n\n</div>\n<div><img style=\"float: left; width: 230px; height: 119px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div><img style=\"float: right; width: 230px; height: 230px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 90px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div><img style=\"float: right; width: 197px; height: 97px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\" rel=\"noopener\">alfredscatering.com</a></p>\n\n</div>\n<div><img style=\"float: right; width: 250px; height: 92px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/artinvesta-logo.gif\" alt=\"Artinvesta Logo\">\n<p style=\"float: none;\">Artinvesta is an Australian based company specializing in the retail exchange of artwork. Artists can list their works on the site. Artinvesta brokers the sale. The site features a custom PHP design. My interaction with the project involved adding site updates, modifying content, and fixing bugs. I also implemented PayPal integration, allowing purchasers to pay for their purchases online on the site. Visit Artinvesta at <a href=\"https://www.artinvesta.com\" target=\"_blank\" rel=\"noopener\">artinvesta.com</a>.</p>\n\n</div>\n<span style=\"font-style: italic;\">...Work in progress. I have 7 more to add. Please stay tuned!</span>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-16 16:49:58','2018-08-16 21:49:58','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(176,1,'2018-08-16 17:01:10','2018-08-16 22:01:10','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of all the websites I have touched throughout my career, to the best of my knowledge and ability. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div><img style=\"float: right; width: 231px; height: 101px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>.</p>\n\n</div>\n<div><img style=\"float: left; width: 230px; height: 119px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div><img style=\"float: right; width: 230px; height: 230px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 90px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div><img style=\"float: right; width: 197px; height: 97px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\" rel=\"noopener\">alfredscatering.com</a></p>\n\n</div>\n<div><img style=\"float: right; width: 250px; height: 92px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/artinvesta-logo.gif\" alt=\"Artinvesta Logo\">\n<p style=\"float: none;\">Artinvesta is an Australian based company specializing in the retail exchange of artwork. Artists can list their works on the site. Artinvesta brokers the sale. The site features a custom PHP design. My interaction with the project involved adding site updates, modifying content, and fixing bugs. I also implemented PayPal integration, allowing purchasers to pay for their purchases online on the site. Visit Artinvesta at <a href=\"https://www.artinvesta.com\" target=\"_blank\" rel=\"noopener\">artinvesta.com</a>.</p>\n\n</div>\n<span style=\"font-style: italic;\">...Work in progress. I have more to add. Please stay tuned!</span>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-16 17:01:10','2018-08-16 22:01:10','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(177,1,'2018-08-20 13:49:47','2018-08-20 18:49:47','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of websites I have touched throughout my career. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online when a developer moves on to another job. As a result, I do not have a lot of code samples to share.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of my experience in web development. \n<div><img style=\"float: right; width: 231px; height: 101px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>.</p>\n\n</div>\n<div><img style=\"float: left; width: 230px; height: 119px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div><img style=\"float: right; width: 230px; height: 230px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 90px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div><img style=\"float: right; width: 197px; height: 97px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\" rel=\"noopener\">alfredscatering.com</a></p>\n\n</div>\n<div><img style=\"float: right; width: 250px; height: 92px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/artinvesta-logo.gif\" alt=\"Artinvesta Logo\">\n<p style=\"float: none;\">Artinvesta is an Australian based company specializing in the retail exchange of artwork. Artists can list their works on the site. Artinvesta brokers the sale. The site features a custom PHP design. My interaction with the project involved adding site updates, modifying content, and fixing bugs. I also implemented PayPal integration, allowing purchasers to pay for their purchases online on the site. Visit Artinvesta at <a href=\"https://www.artinvesta.com\" target=\"_blank\" rel=\"noopener\">artinvesta.com</a>.</p>\n\n</div>\n<span style=\"font-style: italic;\">...Work in progress. I have more to add. Please stay tuned!</span>','Portfolio','','inherit','closed','closed','','89-autosave-v1','','','2018-08-20 13:49:47','2018-08-20 18:49:47','',89,'http://coderdx.io/89-autosave-v1/',0,'revision','',0),(178,1,'2018-08-20 13:45:52','2018-08-20 18:45:52','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of websites I have touched throughout my career. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online. As a result, I do not have a lot of code samples that I can share on my portfolio page.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div><img style=\"float: right; width: 231px; height: 101px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>.</p>\n\n</div>\n<div><img style=\"float: left; width: 230px; height: 119px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div><img style=\"float: right; width: 230px; height: 230px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 90px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div><img style=\"float: right; width: 197px; height: 97px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\" rel=\"noopener\">alfredscatering.com</a></p>\n\n</div>\n<div><img style=\"float: right; width: 250px; height: 92px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/artinvesta-logo.gif\" alt=\"Artinvesta Logo\">\n<p style=\"float: none;\">Artinvesta is an Australian based company specializing in the retail exchange of artwork. Artists can list their works on the site. Artinvesta brokers the sale. The site features a custom PHP design. My interaction with the project involved adding site updates, modifying content, and fixing bugs. I also implemented PayPal integration, allowing purchasers to pay for their purchases online on the site. Visit Artinvesta at <a href=\"https://www.artinvesta.com\" target=\"_blank\" rel=\"noopener\">artinvesta.com</a>.</p>\n\n</div>\n<span style=\"font-style: italic;\">...Work in progress. I have more to add. Please stay tuned!</span>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-20 13:45:52','2018-08-20 18:45:52','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(179,1,'2018-08-20 13:48:25','2018-08-20 18:48:25','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of websites I have touched throughout my career. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online when a developer move on to another job. As a result, I do not have a lot of code samples to share.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div><img style=\"float: right; width: 231px; height: 101px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>.</p>\n\n</div>\n<div><img style=\"float: left; width: 230px; height: 119px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div><img style=\"float: right; width: 230px; height: 230px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 90px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div><img style=\"float: right; width: 197px; height: 97px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\" rel=\"noopener\">alfredscatering.com</a></p>\n\n</div>\n<div><img style=\"float: right; width: 250px; height: 92px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/artinvesta-logo.gif\" alt=\"Artinvesta Logo\">\n<p style=\"float: none;\">Artinvesta is an Australian based company specializing in the retail exchange of artwork. Artists can list their works on the site. Artinvesta brokers the sale. The site features a custom PHP design. My interaction with the project involved adding site updates, modifying content, and fixing bugs. I also implemented PayPal integration, allowing purchasers to pay for their purchases online on the site. Visit Artinvesta at <a href=\"https://www.artinvesta.com\" target=\"_blank\" rel=\"noopener\">artinvesta.com</a>.</p>\n\n</div>\n<span style=\"font-style: italic;\">...Work in progress. I have more to add. Please stay tuned!</span>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-20 13:48:25','2018-08-20 18:48:25','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(180,1,'2018-08-20 13:48:54','2018-08-20 18:48:54','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of websites I have touched throughout my career. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online when a developer moves on to another job. As a result, I do not have a lot of code samples to share.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of all my experience in web development. Until this sentence has been removed, this list is incomplete. This is going to take a while!\n<div><img style=\"float: right; width: 231px; height: 101px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>.</p>\n\n</div>\n<div><img style=\"float: left; width: 230px; height: 119px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div><img style=\"float: right; width: 230px; height: 230px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 90px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div><img style=\"float: right; width: 197px; height: 97px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\" rel=\"noopener\">alfredscatering.com</a></p>\n\n</div>\n<div><img style=\"float: right; width: 250px; height: 92px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/artinvesta-logo.gif\" alt=\"Artinvesta Logo\">\n<p style=\"float: none;\">Artinvesta is an Australian based company specializing in the retail exchange of artwork. Artists can list their works on the site. Artinvesta brokers the sale. The site features a custom PHP design. My interaction with the project involved adding site updates, modifying content, and fixing bugs. I also implemented PayPal integration, allowing purchasers to pay for their purchases online on the site. Visit Artinvesta at <a href=\"https://www.artinvesta.com\" target=\"_blank\" rel=\"noopener\">artinvesta.com</a>.</p>\n\n</div>\n<span style=\"font-style: italic;\">...Work in progress. I have more to add. Please stay tuned!</span>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-20 13:48:54','2018-08-20 18:48:54','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(181,1,'2018-08-20 13:49:51','2018-08-20 18:49:51','My experience in web development dates all the way back to the mid-nineties. if you were alive then, the Java programming language was just born. JavaScript was just a novelty used to product animations in your NetScape or Internet Explorer browser. 56.6k modems were all the rage, and getting a connection to the internet involved that all too familiar screeching and static sound of a digital modem connecting to a local BBS bulletin board. (These were not the good old days).\n\nTimes have changed, and I have too. I have been fortunate enough to witness firsthand the wondrous evolution of what is possibly the greatest advancement in technology in all of human history.\n\nThe sites I did in the mid-nineties were very basic. Mostly simple HTML, uploaded images, and some CSS. The applications I build today are complex, utilizing the very latest cutting edge technologies ranging from JavaScript, React, and Angular on the front end, to Node JS and PHP on the back end. Today\'s applications also involve intricately designed interactions between front end and back end via asynchronous AJAX calls, that retrieve and insert data to and from back end databases, such as MySQL an MongoDB.\n\nWhat follows is a chronological listing of websites I have touched throughout my career. The projects are listed in reverse chronological order, with the most recent ones first.\n\nThe question of whether or not I have a link to my portfolio has always been a challenge for me. First of all, the vast majority of my experience has been on deep back end projects, dealing with highly proprietary data and processes, mostly critical to the internal operations of the companies I have worked for. In preparing my portfolio page, I must tread a fine line between respecting the confidentiality of company data and processes, and exposing enough of it to be useful to anyone seeking to know more about me and my abilities. Standard business practices also require the removing of all code from developer machines, and removing programmer access to company code online when a developer moves on to another job. As a result, I do not have a lot of code samples to share.\n\nAlso, many of the companies and projects I have worked on over the years did not stand the test of time. For these, I can only include the company name, a logo, and a brief description of my involvement with the project.\n\nThat being said, here is the reverse chronological summary of my experience in web development.\n<div><img style=\"float: right; width: 231px; height: 101px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/kerbob.png\" alt=\"KerBob Logo\">\n<p style=\"float: none;\">Currently, I am a freelance web developer. I am organized as an LLC in the state of Texas under the name KerBob Interactive Web Solutions. This site was designed by me, and created using the React JavaScript library. Its hosting is serverless, and it utilizes services from AWS including CloudFront, API Gateway, Lamda functions, and SES. The KerBob website features my three current areas of interest, including state-of-the-art full stack web application development and maintenance, industrial IoT, and connected device prototyping. Visit the KerBob site at <a href=\"https://www.kerbob.io\" target=\"_blank\" rel=\"noopener\">www.kerbob.io</a>.</p>\n\n</div>\n<div><img style=\"float: left; width: 230px; height: 119px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/cig-logo.jpg\" alt=\"CIG Logo\">\n<p style=\"float: none;\">CIG is a logistics company in the oil and gas industry. Their primary function is the transloading of many different grades of sand used in oil fracking, at volumes in excess of 500,000 tons per month. This site is an internal web based application, and has no public facing components. Initially, the application was written by developers overseas, when the company was much smaller. As the company grew, so did their reliance on this application. The application is used today at 60+ locations within the company across the country to track orders, incoming and on-site railcars, onsite storage, silos, outgoing trucks, and billing. Initially, my involvement in this project was the conversion of legacy HTML, PHP, and CSS to current standards. I worked in converting the application into a custom MVC design, using the Klein router, and following MVC best practices. The application employs an extensive class inheritance structure and model classes, including complex join queries to a 72 table MySQL table database. I was also involved in the design and implementation of a separate, stand alone application, written in React and Angular, which shared the existing PHP back end API.</p>\n\n</div>\n<div><img style=\"float: right; width: 230px; height: 230px;\" src=\"http://coderdx.io/wp-content/uploads/2018/07/AIoTLogo.jpg\" alt=\"AustinIoT Logo\">\n<p style=\"float: none;\">Austin Internet of Things is a community driven organization I started in 2014. The group currently meets at least once every month, and provides an outlet for peer networking and education in the Internet of Things space. I created the <a href=\"www.austiniot.org\">Austin IoT</a> website using WordPress, and maintain it to this day. The site features a home page describing the organization, and several interior pages including pages for press releases, Raspberry Pi workshops that we host, upcoming events, an about us page, and a contact us form page plugin.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 90px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/h2o-logo-web2.jpg\" alt=\"H2O Logo\">\n<p style=\"float: none;\">In 2012 I was approached by Dr. McGee Young, professor in political science at Marquette University. He was interested in creating a website that incentivized the conservation of water. The plan was that through is connections, he would obtain water usage data from cities and we would incorporate that data into our site, which residents would create accounts on to track their water usage. The other half of the equation was finding local businesses that would offer deals and discounts for residents with notable reductions in their residential water usage each month. Following several meetings with Dr. McGee and his design team, I architected and implemented a complete web based application in PHP using Zend Framework, and back end MySQL and MongoDB databases. Monthly water usage was obtained from municipalities each month, in Excel spreadsheet form, and imported into our MongoDB database using conversion scripts I created using PHP. Because every municipality tracks their resident\'s water usage differently, each municipality got a different custom designed script that was used to parse records into the format the design team specified.</p>\n\n</div>\n<div><img style=\"float: right; width: 197px; height: 97px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/rodman-logo.jpg\" alt=\"Rodman Logo\">\n<p style=\"float: none;\">Local Austin attorney James Rodman contacted us wanting a new website. He wanted a few interior pages, and the ability to post blog articles. And he wanted a shark in his site theme. Working with a local designer, James Neal, we created a WordPress blog site for him. Initially, James met with the client to establish guidelines for the site. James then created PhotoShop renderings of the home page, his new logo, and several interior pages. I then took that PhotoShop file, sliced out all the graphics, and created the new site based on the PhotoShop design I received from James. Also, I hosted the site on my server, and provided e-mail hosting as well.</p>\n\n</div>\n<div><img style=\"float: left; width: 250px; height: 67px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/alfreds-catering-logo.png\" alt=\"Alfred\'s Logo\">\n<p style=\"float: none;\">Alferd\'s Catering is an Austin Catering service that specializes in weddings and other special events. We were approached by Alfred to build a highly polished web presence for his catering business. Following that lead, we created a website for him using WordPress. The site contains full menus, rich, high resolution images, many interior pages, and a contact form. Visit Alfred\'s Catering at <a href=\"https://www.alfredcatering.com\" target=\"_blank\" rel=\"noopener\">alfredscatering.com</a></p>\n\n</div>\n<div><img style=\"float: right; width: 250px; height: 92px;\" src=\"http://coderdx.io/wp-content/uploads/2018/08/artinvesta-logo.gif\" alt=\"Artinvesta Logo\">\n<p style=\"float: none;\">Artinvesta is an Australian based company specializing in the retail exchange of artwork. Artists can list their works on the site. Artinvesta brokers the sale. The site features a custom PHP design. My interaction with the project involved adding site updates, modifying content, and fixing bugs. I also implemented PayPal integration, allowing purchasers to pay for their purchases online on the site. Visit Artinvesta at <a href=\"https://www.artinvesta.com\" target=\"_blank\" rel=\"noopener\">artinvesta.com</a>.</p>\n\n</div>\n<span style=\"font-style: italic;\">...Work in progress. I have more to add. Please stay tuned!</span>','Portfolio','','inherit','closed','closed','','89-revision-v1','','','2018-08-20 13:49:51','2018-08-20 18:49:51','',89,'http://coderdx.io/89-revision-v1/',0,'revision','',0),(182,1,'2018-08-20 17:33:17','2018-08-20 22:33:17','<p>The first step in getting started with Ionic Framework is to visit the Ionic home page at https://ionicframework.com/. Click on the \'Get Started\' button on the page.</p>\n<p><!--more--></p>\n\n<!-- wp:image {\"id\":183} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicHomePage.png\" alt=\"\" class=\"wp-image-183\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Fill in the form to create your free account. If you already have an account, click the \'Log In\' button at the bottom of the page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":184} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicCreateAccount.png\" alt=\"\" class=\"wp-image-184\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Once logged in, you will see a welcome screen with two options. click the \'+\' icon near \'Build my first ionic app\'. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":185} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicWelcome.png\" alt=\"\" class=\"wp-image-185\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Read the text on the page that loads. Click \'I\'m ready to start\' when ready.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":186} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicIntroduction.png\" alt=\"\" class=\"wp-image-186\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>The next screen contains three items. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":188} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicSetupInstall.png\" alt=\"\" class=\"wp-image-188\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>First, to run Ionic, you will need to have a recent LTS version of NodeJS installed. If you already have Node installed, check what version you have installed by issuing the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ node --version<br/>v8.11.3<br/></pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>The latest LTS version of NodeJS is 8.11. Make sure you have this version installed.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The second item on this page is Git. Make sure git is installed locally on your machine. If not, install Git using the delivery mechanism that\'s best for your operating system. Verify that you have successfully installed Git with the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ git --version<br/>git version 2.7.4<br/></pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Next, install the Ionic CLI globally using the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ sudo npm install -g ionic<br/></pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:image {\"id\":189} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionixSetup.png\" alt=\"\" class=\"wp-image-189\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>You have now installed Ionic Framework on your machine. Click \'Create your app\' at the bottom of the page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The next screen has a few options that need to be selected.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":190} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicCreateApp.png\" alt=\"\" class=\"wp-image-190\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>To start, you must select a template for your application. Ionic provides three templates: blank, tabs, and side menu. The Ionic tutorial suggests starting with the tabs template, so we will too. Issue the following command at the command line...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ ionic start myApp tabs</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>After hitting enter to launch the start command, you will be given several choices. We will walk through those now.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, you will be asked if you are planning to integrate your app with Cordova, to target IOS and Android. If you are planning to target iOS and Android answer yes to this question.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Second, you will be asked if you want to install the free Ionic Pro SDK. Ionic Pro SDK is a set of life cycle management, debugging, and troubleshooting tools. And it\'s free. Answer yes to this prompt.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Third, you will be asked if you want to link your app to the Ionic Pro Dashboard. Select \'Create a new app\' and enter the name of your new app when prompted.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Finally, you will be prompted for which Git host you\'d like to use. The Ionic Pro choice is not a substitute for your app\'s Git repository. It is only used to provide interaction between your app\'s Git repo and the Ionic Pro suite of services. Create a repo for your app on Github, or the CMS of your choice, and enter that choice where prompted.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>After you have completed these steps and created your app, return to your web browser and click \'Run your app\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Ionic provides the ability to see changes you make to your app on your devices, in real time. If you have an Android and/or iOS device, go to your app store and search for Ionic DevApp. Install the app on your device(s) and start it. You will be prompted for the login to your Ionic account. Enter in your credentials and click \'Log In\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":191,\"width\":275,\"height\":489} -->\n<figure class=\"wp-block-image is-resized\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicAndroid.png\" alt=\"\" class=\"wp-image-191\" width=\"275\" height=\"489\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Next, return to your terminal session and type in the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ ionic serve</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:image {\"id\":192} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicServe.png\" alt=\"\" class=\"wp-image-192\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>If your terminal session looks like this you won! A new tab displaying your new app should appear in your browser. Also, your new app should appear in the DevApps app you installed on your mobile device(s) in an earlier step.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Now, return to your browser tab and click \'Push builds\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":193} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicRunning.png\" alt=\"\" class=\"wp-image-193\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Next, push your newly created app to the CMS you specified earlier. If you selected Ionic Pro as your repository above, issue the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ git push ionic master</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>If you selected Github as your repository above, issue the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ git push origin master</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:image {\"id\":194} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicPush.png\" alt=\"\" class=\"wp-image-194\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>After you have pushed your build, return to your browser and click \'Next Steps\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":195} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicNextSteps.png\" alt=\"\" class=\"wp-image-195\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>The \'Next Steps\' page contains links to other pages. View these pages at your leisure. click the blue \'Continus to Dashboard\' button at the bottom of the page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Your Dashboard page shows a list of apps including the one you just created.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratulations, you have just created your first Ionic Framework application! I am planning to publish more informative posts on Ionic Framework in the future, so please check back. Also, if you have any questions please feel free to contact me.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Please let me know if this tutorial was helpful. Thanks for visiting coderdx.io!</p>\n<!-- /wp:paragraph -->','Getting Started With Ionic Framework','','publish','open','open','','getting-started-with-ionic-framework','','','2018-08-20 17:37:13','2018-08-20 22:37:13','',0,'http://coderdx.io/?p=182',0,'post','',0),(183,1,'2018-08-20 15:14:19','2018-08-20 20:14:19','','ionicHomePage','','inherit','open','closed','','ionichomepage','','','2018-08-20 15:14:19','2018-08-20 20:14:19','',0,'http://coderdx.io/wp-content/uploads/2018/08/ionicHomePage.png',0,'attachment','image/png',0),(184,1,'2018-08-20 15:18:21','2018-08-20 20:18:21','','ionicCreateAccount','','inherit','open','closed','','ioniccreateaccount','','','2018-08-20 15:18:21','2018-08-20 20:18:21','',182,'http://coderdx.io/wp-content/uploads/2018/08/ionicCreateAccount.png',0,'attachment','image/png',0),(185,1,'2018-08-20 15:28:20','2018-08-20 20:28:20','','ionicWelcome','','inherit','open','closed','','ionicwelcome','','','2018-08-20 15:28:20','2018-08-20 20:28:20','',182,'http://coderdx.io/wp-content/uploads/2018/08/ionicWelcome.png',0,'attachment','image/png',0),(186,1,'2018-08-20 15:44:41','2018-08-20 20:44:41','','ionicIntroduction','','inherit','open','closed','','ionicintroduction','','','2018-08-20 15:44:41','2018-08-20 20:44:41','',182,'http://coderdx.io/wp-content/uploads/2018/08/ionicIntroduction.png',0,'attachment','image/png',0),(187,1,'2018-08-20 15:48:56','2018-08-20 20:48:56','<p>The first step in getting started with Ionic Framework is to visit the Ionic home page at https://ionicframework.com/. Click on the \'Get Started\' button on the page.</p>\n\n<!-- wp:image {\"id\":183} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicHomePage.png\" alt=\"\" class=\"wp-image-183\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Fill in the form to create your free account. If you already have an account, click the \'Log In\' button at the bottom of the page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":184} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicCreateAccount.png\" alt=\"\" class=\"wp-image-184\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Once logged in, you will see a welcome screen with two options. click the \'+\' icon near \'Build my first ionic app\'. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":185} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicWelcome.png\" alt=\"\" class=\"wp-image-185\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Read the text on the page that loads. Click \'I\'m ready to start\' when ready.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":186} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicIntroduction.png\" alt=\"\" class=\"wp-image-186\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>The next screen contains three items. First, to run Ionic, you will need to have a recent LTS version of NodeJS installed. If you already have Node installed, check what version you have installed by issuing the following command.</p>\n<!-- /wp:paragraph -->\n\n<pre>$ node --version\n</pre>','Getting Started With Ionic Framework','','inherit','closed','closed','','182-revision-v1','','','2018-08-20 15:48:56','2018-08-20 20:48:56','',182,'http://coderdx.io/182-revision-v1/',0,'revision','',0),(188,1,'2018-08-20 16:02:25','2018-08-20 21:02:25','','ionicSetupInstall','','inherit','open','closed','','ionicsetupinstall','','','2018-08-20 16:02:25','2018-08-20 21:02:25','',182,'http://coderdx.io/wp-content/uploads/2018/08/ionicSetupInstall.png',0,'attachment','image/png',0),(189,1,'2018-08-20 16:06:44','2018-08-20 21:06:44','','ionixSetup','','inherit','open','closed','','ionixsetup','','','2018-08-20 16:06:44','2018-08-20 21:06:44','',182,'http://coderdx.io/wp-content/uploads/2018/08/ionixSetup.png',0,'attachment','image/png',0),(190,1,'2018-08-20 16:24:06','2018-08-20 21:24:06','','ionicCreateApp','','inherit','open','closed','','ioniccreateapp','','','2018-08-20 16:24:06','2018-08-20 21:24:06','',182,'http://coderdx.io/wp-content/uploads/2018/08/ionicCreateApp.png',0,'attachment','image/png',0),(191,1,'2018-08-20 17:01:59','2018-08-20 22:01:59','','ionicAndroid','','inherit','open','closed','','ionicandroid','','','2018-08-20 17:01:59','2018-08-20 22:01:59','',182,'http://coderdx.io/wp-content/uploads/2018/08/ionicAndroid.png',0,'attachment','image/png',0),(192,1,'2018-08-20 17:06:05','2018-08-20 22:06:05','','ionicServe','','inherit','open','closed','','ionicserve','','','2018-08-20 17:06:05','2018-08-20 22:06:05','',182,'http://coderdx.io/wp-content/uploads/2018/08/ionicServe.png',0,'attachment','image/png',0),(193,1,'2018-08-20 17:09:42','2018-08-20 22:09:42','','ionicRunning','','inherit','open','closed','','ionicrunning','','','2018-08-20 17:09:42','2018-08-20 22:09:42','',182,'http://coderdx.io/wp-content/uploads/2018/08/ionicRunning.png',0,'attachment','image/png',0),(194,1,'2018-08-20 17:23:00','2018-08-20 22:23:00','','ionicPush','','inherit','open','closed','','ionicpush','','','2018-08-20 17:23:00','2018-08-20 22:23:00','',182,'http://coderdx.io/wp-content/uploads/2018/08/ionicPush.png',0,'attachment','image/png',0),(195,1,'2018-08-20 17:25:04','2018-08-20 22:25:04','','ionicNextSteps','','inherit','open','closed','','ionicnextsteps','','','2018-08-20 17:25:04','2018-08-20 22:25:04','',182,'http://coderdx.io/wp-content/uploads/2018/08/ionicNextSteps.png',0,'attachment','image/png',0),(196,1,'2018-08-20 17:33:17','2018-08-20 22:33:17','<p>The first step in getting started with Ionic Framework is to visit the Ionic home page at https://ionicframework.com/. Click on the \'Get Started\' button on the page.</p>\n\n<!-- wp:image {\"id\":183} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicHomePage.png\" alt=\"\" class=\"wp-image-183\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Fill in the form to create your free account. If you already have an account, click the \'Log In\' button at the bottom of the page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":184} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicCreateAccount.png\" alt=\"\" class=\"wp-image-184\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Once logged in, you will see a welcome screen with two options. click the \'+\' icon near \'Build my first ionic app\'. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":185} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicWelcome.png\" alt=\"\" class=\"wp-image-185\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Read the text on the page that loads. Click \'I\'m ready to start\' when ready.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":186} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicIntroduction.png\" alt=\"\" class=\"wp-image-186\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>The next screen contains three items. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":188} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicSetupInstall.png\" alt=\"\" class=\"wp-image-188\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>First, to run Ionic, you will need to have a recent LTS version of NodeJS installed. If you already have Node installed, check what version you have installed by issuing the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ node --version<br/>v8.11.3<br/></pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>The latest LTS version of NodeJS is 8.11. Make sure you have this version installed.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The second item on this page is Git. Make sure git is installed locally on your machine. If not, install Git using the delivery mechanism that\'s best for your operating system. Verify that you have successfully installed Git with the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ git --version<br/>git version 2.7.4<br/></pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Next, install the Ionic CLI globally using the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ sudo npm install -g ionic<br/></pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:image {\"id\":189} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionixSetup.png\" alt=\"\" class=\"wp-image-189\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>You have now installed Ionic Framework on your machine. Click \'Create your app\' at the bottom of the page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The next screen has a few options that need to be selected.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":190} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicCreateApp.png\" alt=\"\" class=\"wp-image-190\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>To start, you must select a template for your application. Ionic provides three templates: blank, tabs, and side menu. The Ionic tutorial suggests starting with the tabs template, so we will too. Issue the following command at the command line...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ ionic start myApp tabs</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>After hitting enter to launch the start command, you will be given several choices. We will walk through those now.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, you will be asked if you are planning to integrate your app with Cordova, to target IOS and Android. If you are planning to target iOS and Android answer yes to this question.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Second, you will be asked if you want to install the free Ionic Pro SDK. Ionic Pro SDK is a set of life cycle management, debugging, and troubleshooting tools. And it\'s free. Answer yes to this prompt.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Third, you will be asked if you want to link your app to the Ionic Pro Dashboard. Select \'Create a new app\' and enter the name of your new app when prompted.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Finally, you will be prompted for which Git host you\'d like to use. The Ionic Pro choice is not a substitute for your app\'s Git repository. It is only used to provide interaction between your app\'s Git repo and the Ionic Pro suite of services. Create a repo for your app on Github, or the CMS of your choice, and enter that choice where prompted.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>After you have completed these steps and created your app, return to your web browser and click \'Run your app\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Ionic provides the ability to see changes you make to your app on your devices, in real time. If you have an Android and/or iOS device, go to your app store and search for Ionic DevApp. Install the app on your device(s) and start it. You will be prompted for the login to your Ionic account. Enter in your credentials and click \'Log In\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":191,\"width\":275,\"height\":489} -->\n<figure class=\"wp-block-image is-resized\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicAndroid.png\" alt=\"\" class=\"wp-image-191\" width=\"275\" height=\"489\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Next, return to your terminal session and type in the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ ionic serve</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:image {\"id\":192} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicServe.png\" alt=\"\" class=\"wp-image-192\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>If your terminal session looks like this you won! A new tab displaying your new app should appear in your browser. Also, your new app should appear in the DevApps app you installed on your mobile device(s) in an earlier step.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Now, return to your browser tab and click \'Push builds\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":193} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicRunning.png\" alt=\"\" class=\"wp-image-193\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Next, push your newly created app to the CMS you specified earlier. If you selected Ionic Pro as your repository above, issue the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ git push ionic master</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>If you selected Github as your repository above, issue the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ git push origin master</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:image {\"id\":194} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicPush.png\" alt=\"\" class=\"wp-image-194\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>After you have pushed your build, return to your browser and click \'Next Steps\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":195} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicNextSteps.png\" alt=\"\" class=\"wp-image-195\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>The \'Next Steps\' page contains links to other pages. View these pages at your leisure. click the blue \'Continus to Dashboard\' button at the bottom of the page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Your Dashboard page shows a list of apps including the one you just created.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratulations, you have just created your first Ionic Framework application! I am planning to publish more informative posts on Ionic Framework in the future, so please check back. Also, if you have any questions please feel free to contact me.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Please let me know if this tutorial was helpful. Thanks for visiting coderdx.io!</p>\n<!-- /wp:paragraph -->','Getting Started With Ionic Framework','','inherit','closed','closed','','182-revision-v1','','','2018-08-20 17:33:17','2018-08-20 22:33:17','',182,'http://coderdx.io/182-revision-v1/',0,'revision','',0),(197,1,'2018-08-20 17:37:13','2018-08-20 22:37:13','<p>The first step in getting started with Ionic Framework is to visit the Ionic home page at https://ionicframework.com/. Click on the \'Get Started\' button on the page.</p>\n<p><!--more--></p>\n\n<!-- wp:image {\"id\":183} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicHomePage.png\" alt=\"\" class=\"wp-image-183\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Fill in the form to create your free account. If you already have an account, click the \'Log In\' button at the bottom of the page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":184} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicCreateAccount.png\" alt=\"\" class=\"wp-image-184\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Once logged in, you will see a welcome screen with two options. click the \'+\' icon near \'Build my first ionic app\'. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":185} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicWelcome.png\" alt=\"\" class=\"wp-image-185\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Read the text on the page that loads. Click \'I\'m ready to start\' when ready.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":186} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicIntroduction.png\" alt=\"\" class=\"wp-image-186\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>The next screen contains three items. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":188} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicSetupInstall.png\" alt=\"\" class=\"wp-image-188\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>First, to run Ionic, you will need to have a recent LTS version of NodeJS installed. If you already have Node installed, check what version you have installed by issuing the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ node --version<br/>v8.11.3<br/></pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>The latest LTS version of NodeJS is 8.11. Make sure you have this version installed.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The second item on this page is Git. Make sure git is installed locally on your machine. If not, install Git using the delivery mechanism that\'s best for your operating system. Verify that you have successfully installed Git with the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ git --version<br/>git version 2.7.4<br/></pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>Next, install the Ionic CLI globally using the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ sudo npm install -g ionic<br/></pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:image {\"id\":189} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionixSetup.png\" alt=\"\" class=\"wp-image-189\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>You have now installed Ionic Framework on your machine. Click \'Create your app\' at the bottom of the page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The next screen has a few options that need to be selected.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":190} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicCreateApp.png\" alt=\"\" class=\"wp-image-190\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>To start, you must select a template for your application. Ionic provides three templates: blank, tabs, and side menu. The Ionic tutorial suggests starting with the tabs template, so we will too. Issue the following command at the command line...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ ionic start myApp tabs</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>After hitting enter to launch the start command, you will be given several choices. We will walk through those now.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, you will be asked if you are planning to integrate your app with Cordova, to target IOS and Android. If you are planning to target iOS and Android answer yes to this question.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Second, you will be asked if you want to install the free Ionic Pro SDK. Ionic Pro SDK is a set of life cycle management, debugging, and troubleshooting tools. And it\'s free. Answer yes to this prompt.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Third, you will be asked if you want to link your app to the Ionic Pro Dashboard. Select \'Create a new app\' and enter the name of your new app when prompted.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Finally, you will be prompted for which Git host you\'d like to use. The Ionic Pro choice is not a substitute for your app\'s Git repository. It is only used to provide interaction between your app\'s Git repo and the Ionic Pro suite of services. Create a repo for your app on Github, or the CMS of your choice, and enter that choice where prompted.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>After you have completed these steps and created your app, return to your web browser and click \'Run your app\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Ionic provides the ability to see changes you make to your app on your devices, in real time. If you have an Android and/or iOS device, go to your app store and search for Ionic DevApp. Install the app on your device(s) and start it. You will be prompted for the login to your Ionic account. Enter in your credentials and click \'Log In\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":191,\"width\":275,\"height\":489} -->\n<figure class=\"wp-block-image is-resized\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicAndroid.png\" alt=\"\" class=\"wp-image-191\" width=\"275\" height=\"489\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Next, return to your terminal session and type in the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ ionic serve</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:image {\"id\":192} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicServe.png\" alt=\"\" class=\"wp-image-192\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>If your terminal session looks like this you won! A new tab displaying your new app should appear in your browser. Also, your new app should appear in the DevApps app you installed on your mobile device(s) in an earlier step.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Now, return to your browser tab and click \'Push builds\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":193} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicRunning.png\" alt=\"\" class=\"wp-image-193\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Next, push your newly created app to the CMS you specified earlier. If you selected Ionic Pro as your repository above, issue the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ git push ionic master</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:paragraph -->\n<p>If you selected Github as your repository above, issue the following command...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:preformatted -->\n<pre class=\"wp-block-preformatted\">$ git push origin master</pre>\n<!-- /wp:preformatted -->\n\n<!-- wp:image {\"id\":194} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicPush.png\" alt=\"\" class=\"wp-image-194\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>After you have pushed your build, return to your browser and click \'Next Steps\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":195} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2018/08/ionicNextSteps.png\" alt=\"\" class=\"wp-image-195\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>The \'Next Steps\' page contains links to other pages. View these pages at your leisure. click the blue \'Continus to Dashboard\' button at the bottom of the page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Your Dashboard page shows a list of apps including the one you just created.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratulations, you have just created your first Ionic Framework application! I am planning to publish more informative posts on Ionic Framework in the future, so please check back. Also, if you have any questions please feel free to contact me.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Please let me know if this tutorial was helpful. Thanks for visiting coderdx.io!</p>\n<!-- /wp:paragraph -->','Getting Started With Ionic Framework','','inherit','closed','closed','','182-revision-v1','','','2018-08-20 17:37:13','2018-08-20 22:37:13','',182,'http://coderdx.io/182-revision-v1/',0,'revision','',0),(202,1,'2019-01-30 23:09:34','2019-01-31 04:09:34','<!-- wp:paragraph -->\n<p>In this tutorial, I am going to connect a DHT22 temperature/humidity sensor to a Raspberry Pi. Then I am going to create an API endpoint on AWS to capture and save readings from your sensor every 15 seconds. I will also show you how to access your temperature and humidity data via a web browser.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>What you\'ll need:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Raspberry Pi 3 B+ (May work on other models)</li><li>DHT22 Temperature/Humidity sensor</li><li>3x Female to Female DuPont jumpers</li><li>AWS Account</li><li>Web Browser</li><li>Postman API Tool (Optional)</li><li>Serverless Framework (Installed)</li><li>Python 2.7 (Installed on Pi) (May work on other versions)</li><li>Git (Installed on Pi)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Let\'s begin. Connect your DHT22 sensor to your Raspberry Pi as shown below...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":203} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2019/01/0130191243.jpg\" alt=\"\" class=\"wp-image-203\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Connection Pinout:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Red - Raspberry Pi pin #2 (+5v)</li><li>Blue - Raspberry Pi pin #7 (GPIO4)</li><li>Black - Raspberry Pi pin #6 (GND)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Next, SSH into your Pi. We need to install some software.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, lets make sure Python version 2.7 is installed on your Pi. Type the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ python --version\nPython 2.7.13</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command should return version information similar to above. If it does not, you will need to install Python on your Pi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, we will need to download the Python code needed for your sensor. The great folks at Adafruit have created an awesome repo on Github that has everything we need. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, make sure that git is installed on your Pi by entering the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ git --version\ngit version 2.11.0</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command should return version information similar to above. If it does not, you will need to install Git on your Pi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo apt-get install git</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, create a new directory on your Pi and change to it. From inside your new directory, clone the Adafruit repo using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ git clone https://github.com/adafruit/Adafruit_Python_DHT.git</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This should create a new directory as shown below:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ ls -la\ntotal 12\ndrwxr-xr-x  3 pi pi 4096 Jan 25 17:29 .\ndrwxr-xr-x 17 pi pi 4096 Jan 30 19:40 ..\ndrwxr-xr-x 10 pi pi 4096 Jan 25 17:59 Adafruit_Python_DHT</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Change directories to the Adafruit_Python_DHT directory and verify it contains a structure similar to this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ ls -la\ntotal 64\ndrwxr-xr-x 10 pi   pi   4096 Jan 25 17:59 .\ndrwxr-xr-x  3 pi   pi   4096 Jan 25 17:29 ..\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:59 Adafruit_DHT\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 Adafruit_DHT.egg-info\ndrwxr-xr-x  5 root root 4096 Jan 25 17:59 build\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 dist\ndrwxr-xr-x  2 pi   pi   4096 Jan 26 05:31 examples\ndrwxr-xr-x  8 pi   pi   4096 Jan 25 17:29 .git\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:29 .github\n-rw-r--r--  1 pi   pi     47 Jan 25 17:29 .gitignore\n-rw-r--r--  1 pi   pi   1085 Jan 25 17:29 LICENSE\n-rw-r--r--  1 pi   pi     45 Jan 25 17:29 MANIFEST.in\n-rw-r--r--  1 pi   pi   2038 Jan 25 17:29 README.md\n-rw-r--r--  1 pi   pi   5130 Jan 25 17:29 setup.py\ndrwxr-xr-x  6 pi   pi   4096 Jan 25 17:29 source</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>We will be using the Python pip installer to install software. Install pip using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo apt-get install python-pip</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, install the following Python applications using pip:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo python -m pip install --upgrade pip setuptools wheel</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Locate the setup.py file in your Adafruit_Python_DHT directory. In the screenshot below, it is the second last file in the list.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>Adafruit_Python_DHT $ ls -la\ntotal 64\ndrwxr-xr-x 10 pi   pi   4096 Jan 25 17:59 .\ndrwxr-xr-x  3 pi   pi   4096 Jan 25 17:29 ..\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:59 Adafruit_DHT\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 Adafruit_DHT.egg-info\ndrwxr-xr-x  5 root root 4096 Jan 25 17:59 build\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 dist\ndrwxr-xr-x  2 pi   pi   4096 Jan 26 05:31 examples\ndrwxr-xr-x  8 pi   pi   4096 Jan 25 17:29 .git\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:29 .github\n-rw-r--r--  1 pi   pi     47 Jan 25 17:29 .gitignore\n-rw-r--r--  1 pi   pi   1085 Jan 25 17:29 LICENSE\n-rw-r--r--  1 pi   pi     45 Jan 25 17:29 MANIFEST.in\n-rw-r--r--  1 pi   pi   2038 Jan 25 17:29 README.md\n-rw-r--r--  1 pi   pi   5130 Jan 25 17:29 setup.py\ndrwxr-xr-x  6 pi   pi   4096 Jan 25 17:29 source\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Issue the following command to set up your sensor code:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo python setup.py install</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Change directories to the \'examples\' directory</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ cd examples</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Test your code using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo ./AdafruitDHT.py 2302 4</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>In that command string, the \'2302\' is the actual model number of your DHT22 sensor. Verify your model number. Possible choices are \'11\', \'22\', and \'2302\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratualtions! You have now successfully connected your sensor to your Pi and got it working. But you will notice, right now each execution of the code produces a single result. Also, there is no API endpoint connectivity. We will be building those next.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Serverless Framework</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Serverless is a&nbsp;<a href=\"https://nodejs.org/\">Node.js</a>&nbsp;CLI tool so the first thing you need to do is to install Node.js on your machine.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Go to the official&nbsp;<a href=\"https://nodejs.org/\">Node.js website</a>, download and follow the&nbsp;<a href=\"https://nodejs.org/en/download/\">installation instructions</a>&nbsp;to install Node.js on your local machine.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Note:</strong>&nbsp;Serverless runs on Node v4 or higher.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can verify that Node.js is installed successfully by running&nbsp;<code>node --version</code>&nbsp;in your terminal. You should see the corresponding Node version number printed out.<br></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For this you will need the Serverless Framework. You can type</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n$ npm install -g serverless\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>to install Serverless onto your laptop or desktop.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Also for this tutorial, you will need AWS login credentials. You can get those here. I had to install the AWS CLI on my laptop:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In order to use Serverless Framework with AWS, you will need to create a new AWS IAM user. For this, you will need a valid AWS account. Create a new IAM user and access keys following the steps below.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Log in to your AWS account and got the the IAM page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In the upper left hand corner of the page click the blue \'Add user\' button.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Enter a name in the first field to remind you this User is the Framework, like \'serverless-agent\'. Enable Programmatic access by clicking the checkbox. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Click Next to go through to the Permissions page. Click on \'Attach existing policies directly\'. Click on Create policy. Select the JSON tab, replace the policy that appears with the following JSON file you\'ll find at https://gist.github.com/ServerlessBot/7618156b8671840a539f405dea2704c8</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When you are finished, select&nbsp;<strong>Review policy</strong>. You can assign this policy a&nbsp;<strong>Name</strong>&nbsp;and&nbsp;<strong>Description</strong>. Check everything looks good and click&nbsp;<strong>Create policy</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I had to go back to \'Users\'-&gt;\'Add user\', create my new user, and then assign my newly created policy to my new user. Do this now.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Upon creating your new user, the page will display your Access Key and Secret Acccess Key. Record these for future use. You will need them min a later step.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can export your new keys as environment variables using the following:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ export AWS_ACCESS_KEY_ID=&lt;your-key-here>\n$ export AWS_SECRET_ACCESS_KEY=&lt;your-secret-key-here>\n\n$ sudo serverless deploy\n\n# \'export\' command is valid only for unix shells. In Windows - use \'set\' instead of \'export\'</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Create and Deploy API Endpoint</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>On your laptop or desktop, create a new directory and cd into it. Once inside, issue the following command to start a new app:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ npm init -f</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This will create a new scaffold for your app, including an empty package.json file. Next, install Express Framework into your app.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ npm install --save express serverless-http</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, inside your app directory, create a file index.js, containing the following content:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>// index.js\n\nconst serverless = require(\'serverless-http\');\nconst bodyParser = require(\'body-parser\');\nconst express = require(\'express\')\nconst app = express()\nconst AWS = require(\'aws-sdk\');\n\n\nconst ENVIRONMENT_TABLE = process.env.ENVIRONMENT_TABLE;\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\napp.use(bodyParser.json({ strict: false }));\n\napp.get(\'/\', function (req, res) {\n  res.send(\'Hello KerBoB!\')\n})\n\n// Get Environment endpoint\napp.get(\'/environment/:deviceId\', function (req, res) {\n  const params = {\n    TableName: ENVIRONMENT_TABLE,\n    Key: {\n      deviceId: req.params.deviceId,\n    },\n  }\n\n  dynamoDb.get(params, (error, result) => {\n    if (error) {\n      console.log(error);\n      res.status(400).json({ error: \'Could not get environment\' });\n    }\n    if (result.Item) {\n      const {deviceId, temp, humidity} = result.Item;\n      res.json({ deviceId, temp, humidity });\n    } else {\n      res.status(404).json({ error: \"Device not found\" });\n    }\n  });\n})\n\n// Create Environment endpoint\napp.post(\'/environment\', function (req, res) {\n  const { deviceId, temp, humidity } = req.body;\n  if (typeof deviceId !== \'string\') {\n    res.status(400).json({ error: \'\"deviceId\" must be a string\' });\n  } else if (typeof temp !== \'string\') {\n    res.status(400).json({ error: \'\"temp\" must be a string\' });\n  }\n\n  const params = {\n    TableName: ENVIRONMENT_TABLE,\n    Item: {\n      deviceId: deviceId,\n      temp: temp,\n      humidity: humidity,\n    },\n  };\n\n  dynamoDb.put(params, (error) => {\n    if (error) {\n      console.log(error);\n      res.status(400).json({ error: \'Could not create environment\' });\n    }\n    res.json({ deviceId, temp, humidity });\n  });\n})\n\nmodule.exports.handler = serverless(app);</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, inside your app directory, create a file serverless.yml, with the following content:</p>\n<!-- /wp:paragraph -->\n\n<pre># serverless.yml\n\nservice: coderdx-io-dashboard\n\ncustom:\n  tableName: \'environment-table-${self:provider.stage}\'\n\nprovider:\n  name: aws\n  runtime: nodejs6.10\n  stage: dev\n  region: us-east-1\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource:\n        - { \"Fn::GetAtt\": [\"EnvironmentDynamoDBTable\", \"Arn\" ] }\n  environment:\n    ENVIRONMENT_TABLE: ${self:custom.tableName}\n\nfunctions:\n  app:\n    handler: index.handler\n    events:\n      - http: ANY /\n      - http: \'ANY {proxy+}\'\n\nresources:\n  Resources:\n    EnvironmentDynamoDBTable:\n      Type: \'AWS::DynamoDB::Table\'\n      Properties:\n        AttributeDefinitions:\n          -\n            AttributeName: deviceId\n            AttributeType: S\n        KeySchema:\n          -\n            AttributeName: deviceId\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        TableName: ${self:custom.tableName}\n</pre>\n\n<!-- wp:paragraph -->\n<p>Next, deploy your API server using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo sls deploy</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command will produce output similar to below. Make special note of the endpoint URL...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo sls deploy\n[sudo] password for dx: \nServerless: Packaging service...\nServerless: Excluding development dependencies...\nServerless: Uploading CloudFormation file to S3...\nServerless: Uploading artifacts...\nServerless: Uploading service .zip file to S3 (673.25 KB)...\nServerless: Validating template...\nServerless: Updating Stack...\nServerless: Checking Stack update progress...\n..........\nServerless: Stack update finished...\nService Information\nservice: coderdx-io-dashboard2\nstage: dev\nregion: us-east-1\nstack: coderdx-io-dashboard2-dev\napi keys:\n  None\nendpoints:\n  ANY - https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev\n  ANY - https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev/{proxy+}\nfunctions:\n  app: coderdx-io-dashboard2-dev-app\nlayers:\n  None\n$</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Just to test everything so far, copy the URL form the output and visit it in a browser tab. The string \"Hello KerBob!\" should appear. Very good!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, return to your SSH session on your Pi. Locate the file Adafruit_Python_DHT/examples/AdafruitDHT.py. Open it an replace the content with the content below. Be sure to substitute your correct URL for the one shown below...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>#!/usr/bin/python\n# Copyright (c) 2014 Adafruit Industries\n# Author: Tony DiCola\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\nimport sys\nimport Adafruit_DHT\nimport pycurl\nimport time\n\n# Parse command line parameters.\nsensor_args = { \'11\': Adafruit_DHT.DHT11,\n                \'22\': Adafruit_DHT.DHT22,\n                \'2302\': Adafruit_DHT.AM2302 }\nif len(sys.argv) == 3 and sys.argv[1] in sensor_args:\n    sensor = sensor_args[sys.argv[1]]\n    pin = sys.argv[2]\nelse:\n    print(\'Usage: sudo ./Adafruit_DHT.py [11|22|2302] &lt;GPIO pin number>\')\n    print(\'Example: sudo ./Adafruit_DHT.py 2302 4 - Read from an AM2302 connected to GPIO pin #4\')\n    sys.exit(1)\n\nwhile True:\n    # Try to grab a sensor reading.  Use the read_retry method which will retry up\n    # to 15 times to get a sensor reading (waiting 2 seconds between each retry).\n    humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)\n\n    # Un-comment the line below to convert the temperature to Fahrenheit.\n    temperature = temperature * 9/5.0 + 32\n\n    # Note that sometimes you won\'t get a reading and\n    # the results will be null (because Linux can\'t\n    # guarantee the timing of calls to read the sensor).\n    # If this happens try again!\n    if humidity is not None and temperature is not None:\n        print(\'Temp={0:0.1f}*  Humidity={1:0.1f}%\'.format(temperature, humidity))\n    else:\n        print(\'Failed to get reading. Try again!\')\n        sys.exit(1)\n\n    # send to AWS\n    try:\n        # python 3\n        from urllib.parse import urlencode\n    except ImportError:\n        # python 2\n        from urllib import urlencode\n\n        c = pycurl.Curl()\n        c.setopt(c.URL, \'https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev/environment\')\n        c.setopt(pycurl.HTTPHEADER,[\'Content-Type: application/json\'])\n\n        post_data = \'{\"deviceId\": \"1\", \"temp\": \"\' + str(temperature) + \'\", \"humidity\": \"\' + str(humidity) + \'\"}\'\n            \n        # Form data must be provided already urlencoded.\n        #postfields = urlencode(post_data)\n\n        print(post_data)\n        # Sets request method to POST,\n        # Content-Type header to application/x-www-form-urlencoded\n        # and data to send in request body.\n            \n        c.setopt(c.POSTFIELDS, post_data)\n\n        c.perform()\n        c.close()\n\n        time.sleep( 15 )\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Finally, on your Pi, issue the following command to run your app:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo ./AdafruitDHT.py 2302 4</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Go back to your browser tab containing the link to your API endpoint and refresh the page. Your temperature and humidity should refresh every 15 seconds. These results will not automatically update in the browser, you will need to reload the page every time to see your updates.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratulations, you did it! </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Please leave any comments or questions in the feedback section below. If you found this tutorial helpful, please click on the PayPal Donate button below and make a donation. Donations are greatly appreciated.</p>\n<!-- /wp:paragraph -->\n\n<form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_top\">\n<input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\"><br>\n<input type=\"hidden\" name=\"hosted_button_id\" value=\"G2WJBP5XMT2HL\"><br>\n<input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\" border=\"0\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\"><br>\n<img alt=\"\" border=\"0\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\"><br>\n</form>\n\n<!-- wp:image -->\n<figure class=\"wp-block-image\"><img alt=\"\"/></figure>\n<!-- /wp:image -->','Raspberry Pi DHT22 Temp/Humidity Sensor and API Endpoint Tutorial','','publish','open','open','','raspberry-pi-dht22-temp-humidity-sensor-and-api-endpoint-tutorial','','','2019-01-31 11:05:38','2019-01-31 16:05:38','',0,'http://coderdx.io/?p=202',0,'post','',0),(203,1,'2019-01-30 13:54:42','2019-01-30 18:54:42','','0130191243','','inherit','open','closed','','0130191243','','','2019-01-30 13:54:42','2019-01-30 18:54:42','',202,'http://coderdx.io/wp-content/uploads/2019/01/0130191243.jpg',0,'attachment','image/jpeg',0),(204,1,'2019-01-30 13:57:34','2019-01-30 18:57:34','<!-- wp:paragraph -->\n<p>In this tutorial, I am going to connect a DHT22 temperature/humidity sensor to a Raspberry Pi. Then I am going to create an API endpoint on AWS to capture and save readings from your sensor every 15 seconds. I will also show you how to access your temperature and humidity data via a web browser, or by using the awesome API tool, Postman.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>What you\'ll need:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Raspberry Pi 3 B+ (May work on other models)</li><li>DHT22 Temperature/Humidity sensor</li><li>3x Female to Female DuPont jumpers</li><li>AWS Account</li><li>Web Browser</li><li>Postman API Tool (Optional)</li><li>Serverless Framework (Installed)</li><li>Python 2.7 (Installed) (May work on other versions)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Let\'s begin. Connect your DHT22 sensor to your Raspberry Pi as show below...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":203} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2019/01/0130191243.jpg\" alt=\"\" class=\"wp-image-203\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Connection Pinout:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Red - Raspberry Pi pin #2 (+5v)</li><li>Blue - Raspberry Pi pin #7 (GPIO4)</li><li>Black - Raspberry Pi pin #6 (GND)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>The first task of the project is to create an online database for holding data as it changes, and expose an API to interact with this data. I chose to follow this tutorial for this part...<br>https://serverless.com/blog/serverless-express-rest-api/</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For this tutorial you will need the Serverless Framework. You can type</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n&gt; npm install -g serverless\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p> I am using Serverless version 1.36.3 for this tutorial.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Also for this tutorial, you will need AWS login credentials. You can get those here. I had to install the AWS CLI on my laptop:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>https://serverless.com/framework/docs/providers/aws/guide/credentials/.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Here is my serverless.yml:</p>\n<!-- /wp:paragraph -->\n\n<pre># serverless.yml\n\nservice: coderdx-io-dashboard\n\ncustom:\n  tableName: \'environment-table-${self:provider.stage}\'\n\nprovider:\n  name: aws\n  runtime: nodejs6.10\n  stage: dev\n  region: us-east-1\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource:\n        - { \"Fn::GetAtt\": [\"EnvironmentDynamoDBTable\", \"Arn\" ] }\n  environment:\n    ENVIRONMENT_TABLE: ${self:custom.tableName}\n\nfunctions:\n  app:\n    handler: index.handler\n    events:\n      - http: ANY /\n      - http: \'ANY {proxy+}\'\n\nresources:\n  Resources:\n    EnvironmentDynamoDBTable:\n      Type: \'AWS::DynamoDB::Table\'\n      Properties:\n        AttributeDefinitions:\n          -\n            AttributeName: deviceId\n            AttributeType: S\n        KeySchema:\n          -\n            AttributeName: deviceId\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        TableName: ${self:custom.tableName}\n</pre>\n\n<!-- wp:image -->\n<figure class=\"wp-block-image\"><img alt=\"\"/></figure>\n<!-- /wp:image -->','Raspberry Pi DHT22 Temp/Humidity Sensor API Endpoint Tutorial','','inherit','closed','closed','','202-revision-v1','','','2019-01-30 13:57:34','2019-01-30 18:57:34','',202,'http://coderdx.io/202-revision-v1/',0,'revision','',0),(205,1,'2019-01-30 22:40:53','2019-01-31 03:40:53','<!-- wp:paragraph -->\n<p>In this tutorial, I am going to connect a DHT22 temperature/humidity sensor to a Raspberry Pi. Then I am going to create an API endpoint on AWS to capture and save readings from your sensor every 15 seconds. I will also show you how to access your temperature and humidity data via a web browser, or by using the awesome API tool, Postman.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>What you\'ll need:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Raspberry Pi 3 B+ (May work on other models)</li><li>DHT22 Temperature/Humidity sensor</li><li>3x Female to Female DuPont jumpers</li><li>AWS Account</li><li>Web Browser</li><li>Postman API Tool (Optional)</li><li>Serverless Framework (Installed)</li><li>Python 2.7 (Installed on Pi) (May work on other versions)</li><li>Git (Installed on Pi)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Let\'s begin. Connect your DHT22 sensor to your Raspberry Pi as show below...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":203} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2019/01/0130191243.jpg\" alt=\"\" class=\"wp-image-203\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Connection Pinout:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Red - Raspberry Pi pin #2 (+5v)</li><li>Blue - Raspberry Pi pin #7 (GPIO4)</li><li>Black - Raspberry Pi pin #6 (GND)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Next, SSH into your Pi. We need to install some software.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, lets make sure Python version 2.7 is installed on your Pi. Type the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ python --version\nPython 2.7.13</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command should return version information similar to above. If it does not, you will need to install Python on your Pi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, we will need to download the Python code needed for your sensor. The great folks at Adafruit have created an awesome repo on Github that has everything we need. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, make sure that git is installed on your Pi by entering the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ git --version\ngit version 2.11.0</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command should return version information similar to above. If it does not, you will need to install Git on your Pi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo apt-get install git</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, create a new directory on your Pi and change to it. From inside your new directory, clone the Adafruit repo using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ git clone https://github.com/adafruit/Adafruit_Python_DHT.git</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This should create a new directory as shown below:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ ls -la\ntotal 12\ndrwxr-xr-x  3 pi pi 4096 Jan 25 17:29 .\ndrwxr-xr-x 17 pi pi 4096 Jan 30 19:40 ..\ndrwxr-xr-x 10 pi pi 4096 Jan 25 17:59 Adafruit_Python_DHT</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Change directories to the Adafruit_Python_DHT directory and verify it contains a structure similar to this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ ls -la\ntotal 64\ndrwxr-xr-x 10 pi   pi   4096 Jan 25 17:59 .\ndrwxr-xr-x  3 pi   pi   4096 Jan 25 17:29 ..\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:59 Adafruit_DHT\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 Adafruit_DHT.egg-info\ndrwxr-xr-x  5 root root 4096 Jan 25 17:59 build\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 dist\ndrwxr-xr-x  2 pi   pi   4096 Jan 26 05:31 examples\ndrwxr-xr-x  8 pi   pi   4096 Jan 25 17:29 .git\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:29 .github\n-rw-r--r--  1 pi   pi     47 Jan 25 17:29 .gitignore\n-rw-r--r--  1 pi   pi   1085 Jan 25 17:29 LICENSE\n-rw-r--r--  1 pi   pi     45 Jan 25 17:29 MANIFEST.in\n-rw-r--r--  1 pi   pi   2038 Jan 25 17:29 README.md\n-rw-r--r--  1 pi   pi   5130 Jan 25 17:29 setup.py\ndrwxr-xr-x  6 pi   pi   4096 Jan 25 17:29 source</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>We will be using the Python pip installer to install software. Install pip using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo apt-get install python-pip</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, install the following Python applications using pip:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo python -m pip install --upgrade pip setuptools wheel</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Locate the setup.py file in your Adafruit_Python_DHT directory. In the screenshot below, it is the second last file in the list.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>Adafruit_Python_DHT $ ls -la\ntotal 64\ndrwxr-xr-x 10 pi   pi   4096 Jan 25 17:59 .\ndrwxr-xr-x  3 pi   pi   4096 Jan 25 17:29 ..\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:59 Adafruit_DHT\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 Adafruit_DHT.egg-info\ndrwxr-xr-x  5 root root 4096 Jan 25 17:59 build\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 dist\ndrwxr-xr-x  2 pi   pi   4096 Jan 26 05:31 examples\ndrwxr-xr-x  8 pi   pi   4096 Jan 25 17:29 .git\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:29 .github\n-rw-r--r--  1 pi   pi     47 Jan 25 17:29 .gitignore\n-rw-r--r--  1 pi   pi   1085 Jan 25 17:29 LICENSE\n-rw-r--r--  1 pi   pi     45 Jan 25 17:29 MANIFEST.in\n-rw-r--r--  1 pi   pi   2038 Jan 25 17:29 README.md\n-rw-r--r--  1 pi   pi   5130 Jan 25 17:29 setup.py\ndrwxr-xr-x  6 pi   pi   4096 Jan 25 17:29 source\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Issue the following command to set up your sensor code:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo python setup.py install</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Change directories to the \'examples\' directory</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ cd examples</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Test your code using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo ./AdafruitDHT.py 2302 4</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>In that command string, the \'2302\' is the actual model number of your DHT22 sensor. Verify your model number. Possible choices are \'11\', \'22\', and \'2302\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratualtions! You have now successfully connected your sensor to your Pi and got it working. But you will notice, right now each execution of the code produces a single result. Also, there is no API endpoint connectivity. We will be building those next.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Serverless Framework</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Serverless is a&nbsp;<a href=\"https://nodejs.org/\">Node.js</a>&nbsp;CLI tool so the first thing you need to do is to install Node.js on your machine.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Go to the official&nbsp;<a href=\"https://nodejs.org/\">Node.js website</a>, download and follow the&nbsp;<a href=\"https://nodejs.org/en/download/\">installation instructions</a>&nbsp;to install Node.js on your local machine.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Note:</strong>&nbsp;Serverless runs on Node v4 or higher.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can verify that Node.js is installed successfully by running <code>node --version</code> in your terminal. You should see the corresponding Node version number printed out.<br></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For this you will need the Serverless Framework. You can type</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n$ npm install -g serverless\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>to install Serverless onto your laptop or desktop.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Also for this tutorial, you will need AWS login credentials. You can get those here. I had to install the AWS CLI on my laptop:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In order to use Serverless Framework with AWS, you will need to create a new AWS IAM user. For this, you will need a valid AWS account. Create a new IAM user and access keys following the steps below.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Log in to your AWS account and got the the IAM page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In the upper left hand corner of the page click the blue \'Add user\' button.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Enter a name in the first field to remind you this User is the Framework, like \'serverless-agent\'. Enable Programmatic access by clicking the checkbox. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Click Next to go through to the Permissions page. Click on \'Attach existing policies directly\'. Click on Create policy. Select the JSON tab, replace the policy that appears with the following JSON file you\'ll find at https://gist.github.com/ServerlessBot/7618156b8671840a539f405dea2704c8</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When you are finished, select <strong>Review policy</strong>. You can assign this policy a <strong>Name</strong> and <strong>Description</strong>. Check everything looks good and click <strong>Create policy</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I had to go back to \'Users\'->\'Add user\', create my new user, and then assign my newly created policy to my new user. Do this now.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Upon creating your new user, the page will display your Access Key and Secret Acccess Key. Record these for future use. You will need them min a later step.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can export your new keys as environment variables using the following:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ export AWS_ACCESS_KEY_ID=&lt;your-key-here>\n$ export AWS_SECRET_ACCESS_KEY=&lt;your-secret-key-here>\n\n$ sudo serverless deploy\n\n# \'export\' command is valid only for unix shells. In Windows - use \'set\' instead of \'export\'</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Create and Deploy API Endpoint</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>On your laptop or desktop, create a new directory and cd into it. Once inside, issue the following command to start a new app:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ npm init -f</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This will create a new scaffold for your app, including an empty package.json file. Next, install Express Framework into your app.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ npm install --save express serverless-http</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, inside your app directory, create a file index.js, containing the following content:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>// index.js\n\nconst serverless = require(\'serverless-http\');\nconst bodyParser = require(\'body-parser\');\nconst express = require(\'express\')\nconst app = express()\nconst AWS = require(\'aws-sdk\');\n\n\nconst ENVIRONMENT_TABLE = process.env.ENVIRONMENT_TABLE;\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\napp.use(bodyParser.json({ strict: false }));\n\napp.get(\'/\', function (req, res) {\n  res.send(\'Hello KerBoB!\')\n})\n\n// Get Environment endpoint\napp.get(\'/environment/:deviceId\', function (req, res) {\n  const params = {\n    TableName: ENVIRONMENT_TABLE,\n    Key: {\n      deviceId: req.params.deviceId,\n    },\n  }\n\n  dynamoDb.get(params, (error, result) => {\n    if (error) {\n      console.log(error);\n      res.status(400).json({ error: \'Could not get environment\' });\n    }\n    if (result.Item) {\n      const {deviceId, temp, humidity} = result.Item;\n      res.json({ deviceId, temp, humidity });\n    } else {\n      res.status(404).json({ error: \"Device not found\" });\n    }\n  });\n})\n\n// Create Environment endpoint\napp.post(\'/environment\', function (req, res) {\n  const { deviceId, temp, humidity } = req.body;\n  if (typeof deviceId !== \'string\') {\n    res.status(400).json({ error: \'\"deviceId\" must be a string\' });\n  } else if (typeof temp !== \'string\') {\n    res.status(400).json({ error: \'\"temp\" must be a string\' });\n  }\n\n  const params = {\n    TableName: ENVIRONMENT_TABLE,\n    Item: {\n      deviceId: deviceId,\n      temp: temp,\n      humidity: humidity,\n    },\n  };\n\n  dynamoDb.put(params, (error) => {\n    if (error) {\n      console.log(error);\n      res.status(400).json({ error: \'Could not create environment\' });\n    }\n    res.json({ deviceId, temp, humidity });\n  });\n})\n\nmodule.exports.handler = serverless(app);</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, inside your app directory, create a file serverless.yml, with the following content:</p>\n<!-- /wp:paragraph -->\n\n<pre># serverless.yml\n\nservice: coderdx-io-dashboard\n\ncustom:\n  tableName: \'environment-table-${self:provider.stage}\'\n\nprovider:\n  name: aws\n  runtime: nodejs6.10\n  stage: dev\n  region: us-east-1\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource:\n        - { \"Fn::GetAtt\": [\"EnvironmentDynamoDBTable\", \"Arn\" ] }\n  environment:\n    ENVIRONMENT_TABLE: ${self:custom.tableName}\n\nfunctions:\n  app:\n    handler: index.handler\n    events:\n      - http: ANY /\n      - http: \'ANY {proxy+}\'\n\nresources:\n  Resources:\n    EnvironmentDynamoDBTable:\n      Type: \'AWS::DynamoDB::Table\'\n      Properties:\n        AttributeDefinitions:\n          -\n            AttributeName: deviceId\n            AttributeType: S\n        KeySchema:\n          -\n            AttributeName: deviceId\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        TableName: ${self:custom.tableName}\n</pre>\n\n<!-- wp:paragraph -->\n<p>Next, deploy your API server using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo sls deploy</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command will produce output similar to below. Make special note of the endpoint URL...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo sls deploy\n[sudo] password for dx: \nServerless: Packaging service...\nServerless: Excluding development dependencies...\nServerless: Uploading CloudFormation file to S3...\nServerless: Uploading artifacts...\nServerless: Uploading service .zip file to S3 (673.25 KB)...\nServerless: Validating template...\nServerless: Updating Stack...\nServerless: Checking Stack update progress...\n..........\nServerless: Stack update finished...\nService Information\nservice: coderdx-io-dashboard2\nstage: dev\nregion: us-east-1\nstack: coderdx-io-dashboard2-dev\napi keys:\n  None\nendpoints:\n  ANY - https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev\n  ANY - https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev/{proxy+}\nfunctions:\n  app: coderdx-io-dashboard2-dev-app\nlayers:\n  None\n$</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Just to test everything so far, copy the URL form the output and visit it in a browser tab. The string \"Hello KerBob!\" should appear. Very good!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image -->\n<figure class=\"wp-block-image\"><img alt=\"\"/></figure>\n<!-- /wp:image -->','Raspberry Pi DHT22 Temp/Humidity Sensor and API Endpoint Tutorial','','inherit','closed','closed','','202-revision-v1','','','2019-01-30 22:40:53','2019-01-31 03:40:53','',202,'http://coderdx.io/202-revision-v1/',0,'revision','',0),(206,1,'2019-01-30 23:09:34','2019-01-31 04:09:34','<!-- wp:paragraph -->\n<p>In this tutorial, I am going to connect a DHT22 temperature/humidity sensor to a Raspberry Pi. Then I am going to create an API endpoint on AWS to capture and save readings from your sensor every 15 seconds. I will also show you how to access your temperature and humidity data via a web browser.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>What you\'ll need:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Raspberry Pi 3 B+ (May work on other models)</li><li>DHT22 Temperature/Humidity sensor</li><li>3x Female to Female DuPont jumpers</li><li>AWS Account</li><li>Web Browser</li><li>Postman API Tool (Optional)</li><li>Serverless Framework (Installed)</li><li>Python 2.7 (Installed on Pi) (May work on other versions)</li><li>Git (Installed on Pi)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Let\'s begin. Connect your DHT22 sensor to your Raspberry Pi as show below...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":203} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2019/01/0130191243.jpg\" alt=\"\" class=\"wp-image-203\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Connection Pinout:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Red - Raspberry Pi pin #2 (+5v)</li><li>Blue - Raspberry Pi pin #7 (GPIO4)</li><li>Black - Raspberry Pi pin #6 (GND)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Next, SSH into your Pi. We need to install some software.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, lets make sure Python version 2.7 is installed on your Pi. Type the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ python --version\nPython 2.7.13</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command should return version information similar to above. If it does not, you will need to install Python on your Pi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, we will need to download the Python code needed for your sensor. The great folks at Adafruit have created an awesome repo on Github that has everything we need. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, make sure that git is installed on your Pi by entering the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ git --version\ngit version 2.11.0</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command should return version information similar to above. If it does not, you will need to install Git on your Pi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo apt-get install git</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, create a new directory on your Pi and change to it. From inside your new directory, clone the Adafruit repo using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ git clone https://github.com/adafruit/Adafruit_Python_DHT.git</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This should create a new directory as shown below:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ ls -la\ntotal 12\ndrwxr-xr-x  3 pi pi 4096 Jan 25 17:29 .\ndrwxr-xr-x 17 pi pi 4096 Jan 30 19:40 ..\ndrwxr-xr-x 10 pi pi 4096 Jan 25 17:59 Adafruit_Python_DHT</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Change directories to the Adafruit_Python_DHT directory and verify it contains a structure similar to this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ ls -la\ntotal 64\ndrwxr-xr-x 10 pi   pi   4096 Jan 25 17:59 .\ndrwxr-xr-x  3 pi   pi   4096 Jan 25 17:29 ..\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:59 Adafruit_DHT\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 Adafruit_DHT.egg-info\ndrwxr-xr-x  5 root root 4096 Jan 25 17:59 build\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 dist\ndrwxr-xr-x  2 pi   pi   4096 Jan 26 05:31 examples\ndrwxr-xr-x  8 pi   pi   4096 Jan 25 17:29 .git\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:29 .github\n-rw-r--r--  1 pi   pi     47 Jan 25 17:29 .gitignore\n-rw-r--r--  1 pi   pi   1085 Jan 25 17:29 LICENSE\n-rw-r--r--  1 pi   pi     45 Jan 25 17:29 MANIFEST.in\n-rw-r--r--  1 pi   pi   2038 Jan 25 17:29 README.md\n-rw-r--r--  1 pi   pi   5130 Jan 25 17:29 setup.py\ndrwxr-xr-x  6 pi   pi   4096 Jan 25 17:29 source</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>We will be using the Python pip installer to install software. Install pip using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo apt-get install python-pip</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, install the following Python applications using pip:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo python -m pip install --upgrade pip setuptools wheel</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Locate the setup.py file in your Adafruit_Python_DHT directory. In the screenshot below, it is the second last file in the list.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>Adafruit_Python_DHT $ ls -la\ntotal 64\ndrwxr-xr-x 10 pi   pi   4096 Jan 25 17:59 .\ndrwxr-xr-x  3 pi   pi   4096 Jan 25 17:29 ..\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:59 Adafruit_DHT\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 Adafruit_DHT.egg-info\ndrwxr-xr-x  5 root root 4096 Jan 25 17:59 build\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 dist\ndrwxr-xr-x  2 pi   pi   4096 Jan 26 05:31 examples\ndrwxr-xr-x  8 pi   pi   4096 Jan 25 17:29 .git\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:29 .github\n-rw-r--r--  1 pi   pi     47 Jan 25 17:29 .gitignore\n-rw-r--r--  1 pi   pi   1085 Jan 25 17:29 LICENSE\n-rw-r--r--  1 pi   pi     45 Jan 25 17:29 MANIFEST.in\n-rw-r--r--  1 pi   pi   2038 Jan 25 17:29 README.md\n-rw-r--r--  1 pi   pi   5130 Jan 25 17:29 setup.py\ndrwxr-xr-x  6 pi   pi   4096 Jan 25 17:29 source\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Issue the following command to set up your sensor code:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo python setup.py install</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Change directories to the \'examples\' directory</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ cd examples</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Test your code using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo ./AdafruitDHT.py 2302 4</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>In that command string, the \'2302\' is the actual model number of your DHT22 sensor. Verify your model number. Possible choices are \'11\', \'22\', and \'2302\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratualtions! You have now successfully connected your sensor to your Pi and got it working. But you will notice, right now each execution of the code produces a single result. Also, there is no API endpoint connectivity. We will be building those next.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Serverless Framework</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Serverless is a&nbsp;<a href=\"https://nodejs.org/\">Node.js</a>&nbsp;CLI tool so the first thing you need to do is to install Node.js on your machine.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Go to the official&nbsp;<a href=\"https://nodejs.org/\">Node.js website</a>, download and follow the&nbsp;<a href=\"https://nodejs.org/en/download/\">installation instructions</a>&nbsp;to install Node.js on your local machine.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Note:</strong>&nbsp;Serverless runs on Node v4 or higher.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can verify that Node.js is installed successfully by running <code>node --version</code> in your terminal. You should see the corresponding Node version number printed out.<br></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For this you will need the Serverless Framework. You can type</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n$ npm install -g serverless\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>to install Serverless onto your laptop or desktop.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Also for this tutorial, you will need AWS login credentials. You can get those here. I had to install the AWS CLI on my laptop:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In order to use Serverless Framework with AWS, you will need to create a new AWS IAM user. For this, you will need a valid AWS account. Create a new IAM user and access keys following the steps below.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Log in to your AWS account and got the the IAM page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In the upper left hand corner of the page click the blue \'Add user\' button.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Enter a name in the first field to remind you this User is the Framework, like \'serverless-agent\'. Enable Programmatic access by clicking the checkbox. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Click Next to go through to the Permissions page. Click on \'Attach existing policies directly\'. Click on Create policy. Select the JSON tab, replace the policy that appears with the following JSON file you\'ll find at https://gist.github.com/ServerlessBot/7618156b8671840a539f405dea2704c8</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When you are finished, select <strong>Review policy</strong>. You can assign this policy a <strong>Name</strong> and <strong>Description</strong>. Check everything looks good and click <strong>Create policy</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I had to go back to \'Users\'->\'Add user\', create my new user, and then assign my newly created policy to my new user. Do this now.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Upon creating your new user, the page will display your Access Key and Secret Acccess Key. Record these for future use. You will need them min a later step.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can export your new keys as environment variables using the following:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ export AWS_ACCESS_KEY_ID=&lt;your-key-here>\n$ export AWS_SECRET_ACCESS_KEY=&lt;your-secret-key-here>\n\n$ sudo serverless deploy\n\n# \'export\' command is valid only for unix shells. In Windows - use \'set\' instead of \'export\'</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Create and Deploy API Endpoint</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>On your laptop or desktop, create a new directory and cd into it. Once inside, issue the following command to start a new app:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ npm init -f</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This will create a new scaffold for your app, including an empty package.json file. Next, install Express Framework into your app.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ npm install --save express serverless-http</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, inside your app directory, create a file index.js, containing the following content:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>// index.js\n\nconst serverless = require(\'serverless-http\');\nconst bodyParser = require(\'body-parser\');\nconst express = require(\'express\')\nconst app = express()\nconst AWS = require(\'aws-sdk\');\n\n\nconst ENVIRONMENT_TABLE = process.env.ENVIRONMENT_TABLE;\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\napp.use(bodyParser.json({ strict: false }));\n\napp.get(\'/\', function (req, res) {\n  res.send(\'Hello KerBoB!\')\n})\n\n// Get Environment endpoint\napp.get(\'/environment/:deviceId\', function (req, res) {\n  const params = {\n    TableName: ENVIRONMENT_TABLE,\n    Key: {\n      deviceId: req.params.deviceId,\n    },\n  }\n\n  dynamoDb.get(params, (error, result) => {\n    if (error) {\n      console.log(error);\n      res.status(400).json({ error: \'Could not get environment\' });\n    }\n    if (result.Item) {\n      const {deviceId, temp, humidity} = result.Item;\n      res.json({ deviceId, temp, humidity });\n    } else {\n      res.status(404).json({ error: \"Device not found\" });\n    }\n  });\n})\n\n// Create Environment endpoint\napp.post(\'/environment\', function (req, res) {\n  const { deviceId, temp, humidity } = req.body;\n  if (typeof deviceId !== \'string\') {\n    res.status(400).json({ error: \'\"deviceId\" must be a string\' });\n  } else if (typeof temp !== \'string\') {\n    res.status(400).json({ error: \'\"temp\" must be a string\' });\n  }\n\n  const params = {\n    TableName: ENVIRONMENT_TABLE,\n    Item: {\n      deviceId: deviceId,\n      temp: temp,\n      humidity: humidity,\n    },\n  };\n\n  dynamoDb.put(params, (error) => {\n    if (error) {\n      console.log(error);\n      res.status(400).json({ error: \'Could not create environment\' });\n    }\n    res.json({ deviceId, temp, humidity });\n  });\n})\n\nmodule.exports.handler = serverless(app);</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, inside your app directory, create a file serverless.yml, with the following content:</p>\n<!-- /wp:paragraph -->\n\n<pre># serverless.yml\n\nservice: coderdx-io-dashboard\n\ncustom:\n  tableName: \'environment-table-${self:provider.stage}\'\n\nprovider:\n  name: aws\n  runtime: nodejs6.10\n  stage: dev\n  region: us-east-1\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource:\n        - { \"Fn::GetAtt\": [\"EnvironmentDynamoDBTable\", \"Arn\" ] }\n  environment:\n    ENVIRONMENT_TABLE: ${self:custom.tableName}\n\nfunctions:\n  app:\n    handler: index.handler\n    events:\n      - http: ANY /\n      - http: \'ANY {proxy+}\'\n\nresources:\n  Resources:\n    EnvironmentDynamoDBTable:\n      Type: \'AWS::DynamoDB::Table\'\n      Properties:\n        AttributeDefinitions:\n          -\n            AttributeName: deviceId\n            AttributeType: S\n        KeySchema:\n          -\n            AttributeName: deviceId\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        TableName: ${self:custom.tableName}\n</pre>\n\n<!-- wp:paragraph -->\n<p>Next, deploy your API server using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo sls deploy</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command will produce output similar to below. Make special note of the endpoint URL...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo sls deploy\n[sudo] password for dx: \nServerless: Packaging service...\nServerless: Excluding development dependencies...\nServerless: Uploading CloudFormation file to S3...\nServerless: Uploading artifacts...\nServerless: Uploading service .zip file to S3 (673.25 KB)...\nServerless: Validating template...\nServerless: Updating Stack...\nServerless: Checking Stack update progress...\n..........\nServerless: Stack update finished...\nService Information\nservice: coderdx-io-dashboard2\nstage: dev\nregion: us-east-1\nstack: coderdx-io-dashboard2-dev\napi keys:\n  None\nendpoints:\n  ANY - https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev\n  ANY - https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev/{proxy+}\nfunctions:\n  app: coderdx-io-dashboard2-dev-app\nlayers:\n  None\n$</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Just to test everything so far, copy the URL form the output and visit it in a browser tab. The string \"Hello KerBob!\" should appear. Very good!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, return to your SSH session on your Pi. Locate the file Adafruit_Python_DHT/examples/AdafruitDHT.py. Open it an replace the content with the content below. Be sure to substitute your correct URL for the one shown below...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>#!/usr/bin/python\n# Copyright (c) 2014 Adafruit Industries\n# Author: Tony DiCola\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\nimport sys\nimport Adafruit_DHT\nimport pycurl\nimport time\n\n# Parse command line parameters.\nsensor_args = { \'11\': Adafruit_DHT.DHT11,\n                \'22\': Adafruit_DHT.DHT22,\n                \'2302\': Adafruit_DHT.AM2302 }\nif len(sys.argv) == 3 and sys.argv[1] in sensor_args:\n    sensor = sensor_args[sys.argv[1]]\n    pin = sys.argv[2]\nelse:\n    print(\'Usage: sudo ./Adafruit_DHT.py [11|22|2302] &lt;GPIO pin number>\')\n    print(\'Example: sudo ./Adafruit_DHT.py 2302 4 - Read from an AM2302 connected to GPIO pin #4\')\n    sys.exit(1)\n\nwhile True:\n    # Try to grab a sensor reading.  Use the read_retry method which will retry up\n    # to 15 times to get a sensor reading (waiting 2 seconds between each retry).\n    humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)\n\n    # Un-comment the line below to convert the temperature to Fahrenheit.\n    temperature = temperature * 9/5.0 + 32\n\n    # Note that sometimes you won\'t get a reading and\n    # the results will be null (because Linux can\'t\n    # guarantee the timing of calls to read the sensor).\n    # If this happens try again!\n    if humidity is not None and temperature is not None:\n        print(\'Temp={0:0.1f}*  Humidity={1:0.1f}%\'.format(temperature, humidity))\n    else:\n        print(\'Failed to get reading. Try again!\')\n        sys.exit(1)\n\n    # send to AWS\n    try:\n        # python 3\n        from urllib.parse import urlencode\n    except ImportError:\n        # python 2\n        from urllib import urlencode\n\n        c = pycurl.Curl()\n        c.setopt(c.URL, \'https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev/environment\')\n        c.setopt(pycurl.HTTPHEADER,[\'Content-Type: application/json\'])\n\n        post_data = \'{\"deviceId\": \"1\", \"temp\": \"\' + str(temperature) + \'\", \"humidity\": \"\' + str(humidity) + \'\"}\'\n            \n        # Form data must be provided already urlencoded.\n        #postfields = urlencode(post_data)\n\n        print(post_data)\n        # Sets request method to POST,\n        # Content-Type header to application/x-www-form-urlencoded\n        # and data to send in request body.\n            \n        c.setopt(c.POSTFIELDS, post_data)\n\n        c.perform()\n        c.close()\n\n        time.sleep( 15 )\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Finally, on your Pi, issue the following command to run your app:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo ./AdafruitDHT.py 2302 4</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Go back to your browser tab containing the link to your API endpoint and refresh the page. Your temperature and humidity should refresh every 15 seconds. These results will not automatically update in the browser, you will need to reload the page every time to see your updates.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratulations, you did it! </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Please leave any comments or questions in the feedback section below.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image -->\n<figure class=\"wp-block-image\"><img alt=\"\"/></figure>\n<!-- /wp:image -->','Raspberry Pi DHT22 Temp/Humidity Sensor and API Endpoint Tutorial','','inherit','closed','closed','','202-revision-v1','','','2019-01-30 23:09:34','2019-01-31 04:09:34','',202,'http://coderdx.io/202-revision-v1/',0,'revision','',0),(207,1,'2019-01-30 23:11:53','2019-01-31 04:11:53','<!-- wp:paragraph -->\n<p>In this tutorial, I am going to connect a DHT22 temperature/humidity sensor to a Raspberry Pi. Then I am going to create an API endpoint on AWS to capture and save readings from your sensor every 15 seconds. I will also show you how to access your temperature and humidity data via a web browser.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>What you\'ll need:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Raspberry Pi 3 B+ (May work on other models)</li><li>DHT22 Temperature/Humidity sensor</li><li>3x Female to Female DuPont jumpers</li><li>AWS Account</li><li>Web Browser</li><li>Postman API Tool (Optional)</li><li>Serverless Framework (Installed)</li><li>Python 2.7 (Installed on Pi) (May work on other versions)</li><li>Git (Installed on Pi)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Let\'s begin. Connect your DHT22 sensor to your Raspberry Pi as shown below...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":203} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2019/01/0130191243.jpg\" alt=\"\" class=\"wp-image-203\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Connection Pinout:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Red - Raspberry Pi pin #2 (+5v)</li><li>Blue - Raspberry Pi pin #7 (GPIO4)</li><li>Black - Raspberry Pi pin #6 (GND)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Next, SSH into your Pi. We need to install some software.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, lets make sure Python version 2.7 is installed on your Pi. Type the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ python --version\nPython 2.7.13</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command should return version information similar to above. If it does not, you will need to install Python on your Pi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, we will need to download the Python code needed for your sensor. The great folks at Adafruit have created an awesome repo on Github that has everything we need. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, make sure that git is installed on your Pi by entering the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ git --version\ngit version 2.11.0</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command should return version information similar to above. If it does not, you will need to install Git on your Pi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo apt-get install git</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, create a new directory on your Pi and change to it. From inside your new directory, clone the Adafruit repo using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ git clone https://github.com/adafruit/Adafruit_Python_DHT.git</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This should create a new directory as shown below:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ ls -la\ntotal 12\ndrwxr-xr-x  3 pi pi 4096 Jan 25 17:29 .\ndrwxr-xr-x 17 pi pi 4096 Jan 30 19:40 ..\ndrwxr-xr-x 10 pi pi 4096 Jan 25 17:59 Adafruit_Python_DHT</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Change directories to the Adafruit_Python_DHT directory and verify it contains a structure similar to this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ ls -la\ntotal 64\ndrwxr-xr-x 10 pi   pi   4096 Jan 25 17:59 .\ndrwxr-xr-x  3 pi   pi   4096 Jan 25 17:29 ..\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:59 Adafruit_DHT\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 Adafruit_DHT.egg-info\ndrwxr-xr-x  5 root root 4096 Jan 25 17:59 build\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 dist\ndrwxr-xr-x  2 pi   pi   4096 Jan 26 05:31 examples\ndrwxr-xr-x  8 pi   pi   4096 Jan 25 17:29 .git\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:29 .github\n-rw-r--r--  1 pi   pi     47 Jan 25 17:29 .gitignore\n-rw-r--r--  1 pi   pi   1085 Jan 25 17:29 LICENSE\n-rw-r--r--  1 pi   pi     45 Jan 25 17:29 MANIFEST.in\n-rw-r--r--  1 pi   pi   2038 Jan 25 17:29 README.md\n-rw-r--r--  1 pi   pi   5130 Jan 25 17:29 setup.py\ndrwxr-xr-x  6 pi   pi   4096 Jan 25 17:29 source</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>We will be using the Python pip installer to install software. Install pip using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo apt-get install python-pip</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, install the following Python applications using pip:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo python -m pip install --upgrade pip setuptools wheel</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Locate the setup.py file in your Adafruit_Python_DHT directory. In the screenshot below, it is the second last file in the list.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>Adafruit_Python_DHT $ ls -la\ntotal 64\ndrwxr-xr-x 10 pi   pi   4096 Jan 25 17:59 .\ndrwxr-xr-x  3 pi   pi   4096 Jan 25 17:29 ..\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:59 Adafruit_DHT\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 Adafruit_DHT.egg-info\ndrwxr-xr-x  5 root root 4096 Jan 25 17:59 build\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 dist\ndrwxr-xr-x  2 pi   pi   4096 Jan 26 05:31 examples\ndrwxr-xr-x  8 pi   pi   4096 Jan 25 17:29 .git\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:29 .github\n-rw-r--r--  1 pi   pi     47 Jan 25 17:29 .gitignore\n-rw-r--r--  1 pi   pi   1085 Jan 25 17:29 LICENSE\n-rw-r--r--  1 pi   pi     45 Jan 25 17:29 MANIFEST.in\n-rw-r--r--  1 pi   pi   2038 Jan 25 17:29 README.md\n-rw-r--r--  1 pi   pi   5130 Jan 25 17:29 setup.py\ndrwxr-xr-x  6 pi   pi   4096 Jan 25 17:29 source\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Issue the following command to set up your sensor code:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo python setup.py install</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Change directories to the \'examples\' directory</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ cd examples</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Test your code using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo ./AdafruitDHT.py 2302 4</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>In that command string, the \'2302\' is the actual model number of your DHT22 sensor. Verify your model number. Possible choices are \'11\', \'22\', and \'2302\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratualtions! You have now successfully connected your sensor to your Pi and got it working. But you will notice, right now each execution of the code produces a single result. Also, there is no API endpoint connectivity. We will be building those next.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Serverless Framework</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Serverless is a&nbsp;<a href=\"https://nodejs.org/\">Node.js</a>&nbsp;CLI tool so the first thing you need to do is to install Node.js on your machine.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Go to the official&nbsp;<a href=\"https://nodejs.org/\">Node.js website</a>, download and follow the&nbsp;<a href=\"https://nodejs.org/en/download/\">installation instructions</a>&nbsp;to install Node.js on your local machine.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Note:</strong>&nbsp;Serverless runs on Node v4 or higher.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can verify that Node.js is installed successfully by running <code>node --version</code> in your terminal. You should see the corresponding Node version number printed out.<br></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For this you will need the Serverless Framework. You can type</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n$ npm install -g serverless\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>to install Serverless onto your laptop or desktop.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Also for this tutorial, you will need AWS login credentials. You can get those here. I had to install the AWS CLI on my laptop:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In order to use Serverless Framework with AWS, you will need to create a new AWS IAM user. For this, you will need a valid AWS account. Create a new IAM user and access keys following the steps below.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Log in to your AWS account and got the the IAM page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In the upper left hand corner of the page click the blue \'Add user\' button.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Enter a name in the first field to remind you this User is the Framework, like \'serverless-agent\'. Enable Programmatic access by clicking the checkbox. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Click Next to go through to the Permissions page. Click on \'Attach existing policies directly\'. Click on Create policy. Select the JSON tab, replace the policy that appears with the following JSON file you\'ll find at https://gist.github.com/ServerlessBot/7618156b8671840a539f405dea2704c8</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When you are finished, select <strong>Review policy</strong>. You can assign this policy a <strong>Name</strong> and <strong>Description</strong>. Check everything looks good and click <strong>Create policy</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I had to go back to \'Users\'->\'Add user\', create my new user, and then assign my newly created policy to my new user. Do this now.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Upon creating your new user, the page will display your Access Key and Secret Acccess Key. Record these for future use. You will need them min a later step.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can export your new keys as environment variables using the following:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ export AWS_ACCESS_KEY_ID=&lt;your-key-here>\n$ export AWS_SECRET_ACCESS_KEY=&lt;your-secret-key-here>\n\n$ sudo serverless deploy\n\n# \'export\' command is valid only for unix shells. In Windows - use \'set\' instead of \'export\'</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Create and Deploy API Endpoint</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>On your laptop or desktop, create a new directory and cd into it. Once inside, issue the following command to start a new app:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ npm init -f</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This will create a new scaffold for your app, including an empty package.json file. Next, install Express Framework into your app.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ npm install --save express serverless-http</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, inside your app directory, create a file index.js, containing the following content:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>// index.js\n\nconst serverless = require(\'serverless-http\');\nconst bodyParser = require(\'body-parser\');\nconst express = require(\'express\')\nconst app = express()\nconst AWS = require(\'aws-sdk\');\n\n\nconst ENVIRONMENT_TABLE = process.env.ENVIRONMENT_TABLE;\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\napp.use(bodyParser.json({ strict: false }));\n\napp.get(\'/\', function (req, res) {\n  res.send(\'Hello KerBoB!\')\n})\n\n// Get Environment endpoint\napp.get(\'/environment/:deviceId\', function (req, res) {\n  const params = {\n    TableName: ENVIRONMENT_TABLE,\n    Key: {\n      deviceId: req.params.deviceId,\n    },\n  }\n\n  dynamoDb.get(params, (error, result) => {\n    if (error) {\n      console.log(error);\n      res.status(400).json({ error: \'Could not get environment\' });\n    }\n    if (result.Item) {\n      const {deviceId, temp, humidity} = result.Item;\n      res.json({ deviceId, temp, humidity });\n    } else {\n      res.status(404).json({ error: \"Device not found\" });\n    }\n  });\n})\n\n// Create Environment endpoint\napp.post(\'/environment\', function (req, res) {\n  const { deviceId, temp, humidity } = req.body;\n  if (typeof deviceId !== \'string\') {\n    res.status(400).json({ error: \'\"deviceId\" must be a string\' });\n  } else if (typeof temp !== \'string\') {\n    res.status(400).json({ error: \'\"temp\" must be a string\' });\n  }\n\n  const params = {\n    TableName: ENVIRONMENT_TABLE,\n    Item: {\n      deviceId: deviceId,\n      temp: temp,\n      humidity: humidity,\n    },\n  };\n\n  dynamoDb.put(params, (error) => {\n    if (error) {\n      console.log(error);\n      res.status(400).json({ error: \'Could not create environment\' });\n    }\n    res.json({ deviceId, temp, humidity });\n  });\n})\n\nmodule.exports.handler = serverless(app);</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, inside your app directory, create a file serverless.yml, with the following content:</p>\n<!-- /wp:paragraph -->\n\n<pre># serverless.yml\n\nservice: coderdx-io-dashboard\n\ncustom:\n  tableName: \'environment-table-${self:provider.stage}\'\n\nprovider:\n  name: aws\n  runtime: nodejs6.10\n  stage: dev\n  region: us-east-1\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource:\n        - { \"Fn::GetAtt\": [\"EnvironmentDynamoDBTable\", \"Arn\" ] }\n  environment:\n    ENVIRONMENT_TABLE: ${self:custom.tableName}\n\nfunctions:\n  app:\n    handler: index.handler\n    events:\n      - http: ANY /\n      - http: \'ANY {proxy+}\'\n\nresources:\n  Resources:\n    EnvironmentDynamoDBTable:\n      Type: \'AWS::DynamoDB::Table\'\n      Properties:\n        AttributeDefinitions:\n          -\n            AttributeName: deviceId\n            AttributeType: S\n        KeySchema:\n          -\n            AttributeName: deviceId\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        TableName: ${self:custom.tableName}\n</pre>\n\n<!-- wp:paragraph -->\n<p>Next, deploy your API server using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo sls deploy</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command will produce output similar to below. Make special note of the endpoint URL...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo sls deploy\n[sudo] password for dx: \nServerless: Packaging service...\nServerless: Excluding development dependencies...\nServerless: Uploading CloudFormation file to S3...\nServerless: Uploading artifacts...\nServerless: Uploading service .zip file to S3 (673.25 KB)...\nServerless: Validating template...\nServerless: Updating Stack...\nServerless: Checking Stack update progress...\n..........\nServerless: Stack update finished...\nService Information\nservice: coderdx-io-dashboard2\nstage: dev\nregion: us-east-1\nstack: coderdx-io-dashboard2-dev\napi keys:\n  None\nendpoints:\n  ANY - https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev\n  ANY - https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev/{proxy+}\nfunctions:\n  app: coderdx-io-dashboard2-dev-app\nlayers:\n  None\n$</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Just to test everything so far, copy the URL form the output and visit it in a browser tab. The string \"Hello KerBob!\" should appear. Very good!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, return to your SSH session on your Pi. Locate the file Adafruit_Python_DHT/examples/AdafruitDHT.py. Open it an replace the content with the content below. Be sure to substitute your correct URL for the one shown below...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>#!/usr/bin/python\n# Copyright (c) 2014 Adafruit Industries\n# Author: Tony DiCola\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\nimport sys\nimport Adafruit_DHT\nimport pycurl\nimport time\n\n# Parse command line parameters.\nsensor_args = { \'11\': Adafruit_DHT.DHT11,\n                \'22\': Adafruit_DHT.DHT22,\n                \'2302\': Adafruit_DHT.AM2302 }\nif len(sys.argv) == 3 and sys.argv[1] in sensor_args:\n    sensor = sensor_args[sys.argv[1]]\n    pin = sys.argv[2]\nelse:\n    print(\'Usage: sudo ./Adafruit_DHT.py [11|22|2302] &lt;GPIO pin number>\')\n    print(\'Example: sudo ./Adafruit_DHT.py 2302 4 - Read from an AM2302 connected to GPIO pin #4\')\n    sys.exit(1)\n\nwhile True:\n    # Try to grab a sensor reading.  Use the read_retry method which will retry up\n    # to 15 times to get a sensor reading (waiting 2 seconds between each retry).\n    humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)\n\n    # Un-comment the line below to convert the temperature to Fahrenheit.\n    temperature = temperature * 9/5.0 + 32\n\n    # Note that sometimes you won\'t get a reading and\n    # the results will be null (because Linux can\'t\n    # guarantee the timing of calls to read the sensor).\n    # If this happens try again!\n    if humidity is not None and temperature is not None:\n        print(\'Temp={0:0.1f}*  Humidity={1:0.1f}%\'.format(temperature, humidity))\n    else:\n        print(\'Failed to get reading. Try again!\')\n        sys.exit(1)\n\n    # send to AWS\n    try:\n        # python 3\n        from urllib.parse import urlencode\n    except ImportError:\n        # python 2\n        from urllib import urlencode\n\n        c = pycurl.Curl()\n        c.setopt(c.URL, \'https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev/environment\')\n        c.setopt(pycurl.HTTPHEADER,[\'Content-Type: application/json\'])\n\n        post_data = \'{\"deviceId\": \"1\", \"temp\": \"\' + str(temperature) + \'\", \"humidity\": \"\' + str(humidity) + \'\"}\'\n            \n        # Form data must be provided already urlencoded.\n        #postfields = urlencode(post_data)\n\n        print(post_data)\n        # Sets request method to POST,\n        # Content-Type header to application/x-www-form-urlencoded\n        # and data to send in request body.\n            \n        c.setopt(c.POSTFIELDS, post_data)\n\n        c.perform()\n        c.close()\n\n        time.sleep( 15 )\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Finally, on your Pi, issue the following command to run your app:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo ./AdafruitDHT.py 2302 4</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Go back to your browser tab containing the link to your API endpoint and refresh the page. Your temperature and humidity should refresh every 15 seconds. These results will not automatically update in the browser, you will need to reload the page every time to see your updates.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratulations, you did it! </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Please leave any comments or questions in the feedback section below.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image -->\n<figure class=\"wp-block-image\"><img alt=\"\"/></figure>\n<!-- /wp:image -->','Raspberry Pi DHT22 Temp/Humidity Sensor and API Endpoint Tutorial','','inherit','closed','closed','','202-revision-v1','','','2019-01-30 23:11:53','2019-01-31 04:11:53','',202,'http://coderdx.io/202-revision-v1/',0,'revision','',0),(209,1,'2019-01-31 11:03:43','2019-01-31 16:03:43','<!-- wp:paragraph -->\n<p>In this tutorial, I am going to connect a DHT22 temperature/humidity sensor to a Raspberry Pi. Then I am going to create an API endpoint on AWS to capture and save readings from your sensor every 15 seconds. I will also show you how to access your temperature and humidity data via a web browser.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>What you\'ll need:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Raspberry Pi 3 B+ (May work on other models)</li><li>DHT22 Temperature/Humidity sensor</li><li>3x Female to Female DuPont jumpers</li><li>AWS Account</li><li>Web Browser</li><li>Postman API Tool (Optional)</li><li>Serverless Framework (Installed)</li><li>Python 2.7 (Installed on Pi) (May work on other versions)</li><li>Git (Installed on Pi)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Let\'s begin. Connect your DHT22 sensor to your Raspberry Pi as shown below...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":203} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2019/01/0130191243.jpg\" alt=\"\" class=\"wp-image-203\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Connection Pinout:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Red - Raspberry Pi pin #2 (+5v)</li><li>Blue - Raspberry Pi pin #7 (GPIO4)</li><li>Black - Raspberry Pi pin #6 (GND)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Next, SSH into your Pi. We need to install some software.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, lets make sure Python version 2.7 is installed on your Pi. Type the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ python --version\nPython 2.7.13</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command should return version information similar to above. If it does not, you will need to install Python on your Pi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, we will need to download the Python code needed for your sensor. The great folks at Adafruit have created an awesome repo on Github that has everything we need. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, make sure that git is installed on your Pi by entering the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ git --version\ngit version 2.11.0</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command should return version information similar to above. If it does not, you will need to install Git on your Pi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo apt-get install git</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, create a new directory on your Pi and change to it. From inside your new directory, clone the Adafruit repo using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ git clone https://github.com/adafruit/Adafruit_Python_DHT.git</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This should create a new directory as shown below:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ ls -la\ntotal 12\ndrwxr-xr-x  3 pi pi 4096 Jan 25 17:29 .\ndrwxr-xr-x 17 pi pi 4096 Jan 30 19:40 ..\ndrwxr-xr-x 10 pi pi 4096 Jan 25 17:59 Adafruit_Python_DHT</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Change directories to the Adafruit_Python_DHT directory and verify it contains a structure similar to this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ ls -la\ntotal 64\ndrwxr-xr-x 10 pi   pi   4096 Jan 25 17:59 .\ndrwxr-xr-x  3 pi   pi   4096 Jan 25 17:29 ..\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:59 Adafruit_DHT\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 Adafruit_DHT.egg-info\ndrwxr-xr-x  5 root root 4096 Jan 25 17:59 build\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 dist\ndrwxr-xr-x  2 pi   pi   4096 Jan 26 05:31 examples\ndrwxr-xr-x  8 pi   pi   4096 Jan 25 17:29 .git\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:29 .github\n-rw-r--r--  1 pi   pi     47 Jan 25 17:29 .gitignore\n-rw-r--r--  1 pi   pi   1085 Jan 25 17:29 LICENSE\n-rw-r--r--  1 pi   pi     45 Jan 25 17:29 MANIFEST.in\n-rw-r--r--  1 pi   pi   2038 Jan 25 17:29 README.md\n-rw-r--r--  1 pi   pi   5130 Jan 25 17:29 setup.py\ndrwxr-xr-x  6 pi   pi   4096 Jan 25 17:29 source</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>We will be using the Python pip installer to install software. Install pip using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo apt-get install python-pip</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, install the following Python applications using pip:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo python -m pip install --upgrade pip setuptools wheel</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Locate the setup.py file in your Adafruit_Python_DHT directory. In the screenshot below, it is the second last file in the list.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>Adafruit_Python_DHT $ ls -la\ntotal 64\ndrwxr-xr-x 10 pi   pi   4096 Jan 25 17:59 .\ndrwxr-xr-x  3 pi   pi   4096 Jan 25 17:29 ..\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:59 Adafruit_DHT\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 Adafruit_DHT.egg-info\ndrwxr-xr-x  5 root root 4096 Jan 25 17:59 build\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 dist\ndrwxr-xr-x  2 pi   pi   4096 Jan 26 05:31 examples\ndrwxr-xr-x  8 pi   pi   4096 Jan 25 17:29 .git\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:29 .github\n-rw-r--r--  1 pi   pi     47 Jan 25 17:29 .gitignore\n-rw-r--r--  1 pi   pi   1085 Jan 25 17:29 LICENSE\n-rw-r--r--  1 pi   pi     45 Jan 25 17:29 MANIFEST.in\n-rw-r--r--  1 pi   pi   2038 Jan 25 17:29 README.md\n-rw-r--r--  1 pi   pi   5130 Jan 25 17:29 setup.py\ndrwxr-xr-x  6 pi   pi   4096 Jan 25 17:29 source\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Issue the following command to set up your sensor code:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo python setup.py install</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Change directories to the \'examples\' directory</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ cd examples</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Test your code using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo ./AdafruitDHT.py 2302 4</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>In that command string, the \'2302\' is the actual model number of your DHT22 sensor. Verify your model number. Possible choices are \'11\', \'22\', and \'2302\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratualtions! You have now successfully connected your sensor to your Pi and got it working. But you will notice, right now each execution of the code produces a single result. Also, there is no API endpoint connectivity. We will be building those next.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Serverless Framework</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Serverless is a&nbsp;<a href=\"https://nodejs.org/\">Node.js</a>&nbsp;CLI tool so the first thing you need to do is to install Node.js on your machine.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Go to the official&nbsp;<a href=\"https://nodejs.org/\">Node.js website</a>, download and follow the&nbsp;<a href=\"https://nodejs.org/en/download/\">installation instructions</a>&nbsp;to install Node.js on your local machine.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Note:</strong>&nbsp;Serverless runs on Node v4 or higher.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can verify that Node.js is installed successfully by running&nbsp;<code>node --version</code>&nbsp;in your terminal. You should see the corresponding Node version number printed out.<br></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For this you will need the Serverless Framework. You can type</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n$ npm install -g serverless\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>to install Serverless onto your laptop or desktop.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Also for this tutorial, you will need AWS login credentials. You can get those here. I had to install the AWS CLI on my laptop:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In order to use Serverless Framework with AWS, you will need to create a new AWS IAM user. For this, you will need a valid AWS account. Create a new IAM user and access keys following the steps below.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Log in to your AWS account and got the the IAM page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In the upper left hand corner of the page click the blue \'Add user\' button.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Enter a name in the first field to remind you this User is the Framework, like \'serverless-agent\'. Enable Programmatic access by clicking the checkbox. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Click Next to go through to the Permissions page. Click on \'Attach existing policies directly\'. Click on Create policy. Select the JSON tab, replace the policy that appears with the following JSON file you\'ll find at https://gist.github.com/ServerlessBot/7618156b8671840a539f405dea2704c8</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When you are finished, select&nbsp;<strong>Review policy</strong>. You can assign this policy a&nbsp;<strong>Name</strong>&nbsp;and&nbsp;<strong>Description</strong>. Check everything looks good and click&nbsp;<strong>Create policy</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I had to go back to \'Users\'-&gt;\'Add user\', create my new user, and then assign my newly created policy to my new user. Do this now.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Upon creating your new user, the page will display your Access Key and Secret Acccess Key. Record these for future use. You will need them min a later step.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can export your new keys as environment variables using the following:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ export AWS_ACCESS_KEY_ID=&lt;your-key-here>\n$ export AWS_SECRET_ACCESS_KEY=&lt;your-secret-key-here>\n\n$ sudo serverless deploy\n\n# \'export\' command is valid only for unix shells. In Windows - use \'set\' instead of \'export\'</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Create and Deploy API Endpoint</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>On your laptop or desktop, create a new directory and cd into it. Once inside, issue the following command to start a new app:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ npm init -f</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This will create a new scaffold for your app, including an empty package.json file. Next, install Express Framework into your app.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ npm install --save express serverless-http</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, inside your app directory, create a file index.js, containing the following content:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>// index.js\n\nconst serverless = require(\'serverless-http\');\nconst bodyParser = require(\'body-parser\');\nconst express = require(\'express\')\nconst app = express()\nconst AWS = require(\'aws-sdk\');\n\n\nconst ENVIRONMENT_TABLE = process.env.ENVIRONMENT_TABLE;\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\napp.use(bodyParser.json({ strict: false }));\n\napp.get(\'/\', function (req, res) {\n  res.send(\'Hello KerBoB!\')\n})\n\n// Get Environment endpoint\napp.get(\'/environment/:deviceId\', function (req, res) {\n  const params = {\n    TableName: ENVIRONMENT_TABLE,\n    Key: {\n      deviceId: req.params.deviceId,\n    },\n  }\n\n  dynamoDb.get(params, (error, result) => {\n    if (error) {\n      console.log(error);\n      res.status(400).json({ error: \'Could not get environment\' });\n    }\n    if (result.Item) {\n      const {deviceId, temp, humidity} = result.Item;\n      res.json({ deviceId, temp, humidity });\n    } else {\n      res.status(404).json({ error: \"Device not found\" });\n    }\n  });\n})\n\n// Create Environment endpoint\napp.post(\'/environment\', function (req, res) {\n  const { deviceId, temp, humidity } = req.body;\n  if (typeof deviceId !== \'string\') {\n    res.status(400).json({ error: \'\"deviceId\" must be a string\' });\n  } else if (typeof temp !== \'string\') {\n    res.status(400).json({ error: \'\"temp\" must be a string\' });\n  }\n\n  const params = {\n    TableName: ENVIRONMENT_TABLE,\n    Item: {\n      deviceId: deviceId,\n      temp: temp,\n      humidity: humidity,\n    },\n  };\n\n  dynamoDb.put(params, (error) => {\n    if (error) {\n      console.log(error);\n      res.status(400).json({ error: \'Could not create environment\' });\n    }\n    res.json({ deviceId, temp, humidity });\n  });\n})\n\nmodule.exports.handler = serverless(app);</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, inside your app directory, create a file serverless.yml, with the following content:</p>\n<!-- /wp:paragraph -->\n\n<pre># serverless.yml\n\nservice: coderdx-io-dashboard\n\ncustom:\n  tableName: \'environment-table-${self:provider.stage}\'\n\nprovider:\n  name: aws\n  runtime: nodejs6.10\n  stage: dev\n  region: us-east-1\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource:\n        - { \"Fn::GetAtt\": [\"EnvironmentDynamoDBTable\", \"Arn\" ] }\n  environment:\n    ENVIRONMENT_TABLE: ${self:custom.tableName}\n\nfunctions:\n  app:\n    handler: index.handler\n    events:\n      - http: ANY /\n      - http: \'ANY {proxy+}\'\n\nresources:\n  Resources:\n    EnvironmentDynamoDBTable:\n      Type: \'AWS::DynamoDB::Table\'\n      Properties:\n        AttributeDefinitions:\n          -\n            AttributeName: deviceId\n            AttributeType: S\n        KeySchema:\n          -\n            AttributeName: deviceId\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        TableName: ${self:custom.tableName}\n</pre>\n\n<!-- wp:paragraph -->\n<p>Next, deploy your API server using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo sls deploy</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command will produce output similar to below. Make special note of the endpoint URL...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo sls deploy\n[sudo] password for dx: \nServerless: Packaging service...\nServerless: Excluding development dependencies...\nServerless: Uploading CloudFormation file to S3...\nServerless: Uploading artifacts...\nServerless: Uploading service .zip file to S3 (673.25 KB)...\nServerless: Validating template...\nServerless: Updating Stack...\nServerless: Checking Stack update progress...\n..........\nServerless: Stack update finished...\nService Information\nservice: coderdx-io-dashboard2\nstage: dev\nregion: us-east-1\nstack: coderdx-io-dashboard2-dev\napi keys:\n  None\nendpoints:\n  ANY - https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev\n  ANY - https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev/{proxy+}\nfunctions:\n  app: coderdx-io-dashboard2-dev-app\nlayers:\n  None\n$</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Just to test everything so far, copy the URL form the output and visit it in a browser tab. The string \"Hello KerBob!\" should appear. Very good!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, return to your SSH session on your Pi. Locate the file Adafruit_Python_DHT/examples/AdafruitDHT.py. Open it an replace the content with the content below. Be sure to substitute your correct URL for the one shown below...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>#!/usr/bin/python\n# Copyright (c) 2014 Adafruit Industries\n# Author: Tony DiCola\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\nimport sys\nimport Adafruit_DHT\nimport pycurl\nimport time\n\n# Parse command line parameters.\nsensor_args = { \'11\': Adafruit_DHT.DHT11,\n                \'22\': Adafruit_DHT.DHT22,\n                \'2302\': Adafruit_DHT.AM2302 }\nif len(sys.argv) == 3 and sys.argv[1] in sensor_args:\n    sensor = sensor_args[sys.argv[1]]\n    pin = sys.argv[2]\nelse:\n    print(\'Usage: sudo ./Adafruit_DHT.py [11|22|2302] &lt;GPIO pin number>\')\n    print(\'Example: sudo ./Adafruit_DHT.py 2302 4 - Read from an AM2302 connected to GPIO pin #4\')\n    sys.exit(1)\n\nwhile True:\n    # Try to grab a sensor reading.  Use the read_retry method which will retry up\n    # to 15 times to get a sensor reading (waiting 2 seconds between each retry).\n    humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)\n\n    # Un-comment the line below to convert the temperature to Fahrenheit.\n    temperature = temperature * 9/5.0 + 32\n\n    # Note that sometimes you won\'t get a reading and\n    # the results will be null (because Linux can\'t\n    # guarantee the timing of calls to read the sensor).\n    # If this happens try again!\n    if humidity is not None and temperature is not None:\n        print(\'Temp={0:0.1f}*  Humidity={1:0.1f}%\'.format(temperature, humidity))\n    else:\n        print(\'Failed to get reading. Try again!\')\n        sys.exit(1)\n\n    # send to AWS\n    try:\n        # python 3\n        from urllib.parse import urlencode\n    except ImportError:\n        # python 2\n        from urllib import urlencode\n\n        c = pycurl.Curl()\n        c.setopt(c.URL, \'https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev/environment\')\n        c.setopt(pycurl.HTTPHEADER,[\'Content-Type: application/json\'])\n\n        post_data = \'{\"deviceId\": \"1\", \"temp\": \"\' + str(temperature) + \'\", \"humidity\": \"\' + str(humidity) + \'\"}\'\n            \n        # Form data must be provided already urlencoded.\n        #postfields = urlencode(post_data)\n\n        print(post_data)\n        # Sets request method to POST,\n        # Content-Type header to application/x-www-form-urlencoded\n        # and data to send in request body.\n            \n        c.setopt(c.POSTFIELDS, post_data)\n\n        c.perform()\n        c.close()\n\n        time.sleep( 15 )\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Finally, on your Pi, issue the following command to run your app:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo ./AdafruitDHT.py 2302 4</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Go back to your browser tab containing the link to your API endpoint and refresh the page. Your temperature and humidity should refresh every 15 seconds. These results will not automatically update in the browser, you will need to reload the page every time to see your updates.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratulations, you did it! </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Please leave any comments or questions in the feedback section below. If you found this tutorial helpful, please click on the PayPal Donate button below and make a donation.</p>\n<!-- /wp:paragraph -->\n\n<form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_top\">\n<input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\"><br>\n<input type=\"hidden\" name=\"hosted_button_id\" value=\"G2WJBP5XMT2HL\"><br>\n<input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\" border=\"0\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\"><br>\n<img alt=\"\" border=\"0\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\"><br>\n</form>\n\n<!-- wp:image -->\n<figure class=\"wp-block-image\"><img alt=\"\"/></figure>\n<!-- /wp:image -->','Raspberry Pi DHT22 Temp/Humidity Sensor and API Endpoint Tutorial','','inherit','closed','closed','','202-revision-v1','','','2019-01-31 11:03:43','2019-01-31 16:03:43','',202,'http://coderdx.io/202-revision-v1/',0,'revision','',0),(210,1,'2019-01-31 11:05:38','2019-01-31 16:05:38','<!-- wp:paragraph -->\n<p>In this tutorial, I am going to connect a DHT22 temperature/humidity sensor to a Raspberry Pi. Then I am going to create an API endpoint on AWS to capture and save readings from your sensor every 15 seconds. I will also show you how to access your temperature and humidity data via a web browser.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>What you\'ll need:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Raspberry Pi 3 B+ (May work on other models)</li><li>DHT22 Temperature/Humidity sensor</li><li>3x Female to Female DuPont jumpers</li><li>AWS Account</li><li>Web Browser</li><li>Postman API Tool (Optional)</li><li>Serverless Framework (Installed)</li><li>Python 2.7 (Installed on Pi) (May work on other versions)</li><li>Git (Installed on Pi)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Let\'s begin. Connect your DHT22 sensor to your Raspberry Pi as shown below...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":203} -->\n<figure class=\"wp-block-image\"><img src=\"http://coderdx.io/wp-content/uploads/2019/01/0130191243.jpg\" alt=\"\" class=\"wp-image-203\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Connection Pinout:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Red - Raspberry Pi pin #2 (+5v)</li><li>Blue - Raspberry Pi pin #7 (GPIO4)</li><li>Black - Raspberry Pi pin #6 (GND)</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Next, SSH into your Pi. We need to install some software.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, lets make sure Python version 2.7 is installed on your Pi. Type the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ python --version\nPython 2.7.13</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command should return version information similar to above. If it does not, you will need to install Python on your Pi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, we will need to download the Python code needed for your sensor. The great folks at Adafruit have created an awesome repo on Github that has everything we need. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, make sure that git is installed on your Pi by entering the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ git --version\ngit version 2.11.0</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command should return version information similar to above. If it does not, you will need to install Git on your Pi.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo apt-get install git</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, create a new directory on your Pi and change to it. From inside your new directory, clone the Adafruit repo using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ git clone https://github.com/adafruit/Adafruit_Python_DHT.git</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This should create a new directory as shown below:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ ls -la\ntotal 12\ndrwxr-xr-x  3 pi pi 4096 Jan 25 17:29 .\ndrwxr-xr-x 17 pi pi 4096 Jan 30 19:40 ..\ndrwxr-xr-x 10 pi pi 4096 Jan 25 17:59 Adafruit_Python_DHT</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Change directories to the Adafruit_Python_DHT directory and verify it contains a structure similar to this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ ls -la\ntotal 64\ndrwxr-xr-x 10 pi   pi   4096 Jan 25 17:59 .\ndrwxr-xr-x  3 pi   pi   4096 Jan 25 17:29 ..\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:59 Adafruit_DHT\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 Adafruit_DHT.egg-info\ndrwxr-xr-x  5 root root 4096 Jan 25 17:59 build\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 dist\ndrwxr-xr-x  2 pi   pi   4096 Jan 26 05:31 examples\ndrwxr-xr-x  8 pi   pi   4096 Jan 25 17:29 .git\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:29 .github\n-rw-r--r--  1 pi   pi     47 Jan 25 17:29 .gitignore\n-rw-r--r--  1 pi   pi   1085 Jan 25 17:29 LICENSE\n-rw-r--r--  1 pi   pi     45 Jan 25 17:29 MANIFEST.in\n-rw-r--r--  1 pi   pi   2038 Jan 25 17:29 README.md\n-rw-r--r--  1 pi   pi   5130 Jan 25 17:29 setup.py\ndrwxr-xr-x  6 pi   pi   4096 Jan 25 17:29 source</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>We will be using the Python pip installer to install software. Install pip using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo apt-get install python-pip</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, install the following Python applications using pip:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo python -m pip install --upgrade pip setuptools wheel</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Locate the setup.py file in your Adafruit_Python_DHT directory. In the screenshot below, it is the second last file in the list.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>Adafruit_Python_DHT $ ls -la\ntotal 64\ndrwxr-xr-x 10 pi   pi   4096 Jan 25 17:59 .\ndrwxr-xr-x  3 pi   pi   4096 Jan 25 17:29 ..\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:59 Adafruit_DHT\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 Adafruit_DHT.egg-info\ndrwxr-xr-x  5 root root 4096 Jan 25 17:59 build\ndrwxr-xr-x  2 root root 4096 Jan 25 17:59 dist\ndrwxr-xr-x  2 pi   pi   4096 Jan 26 05:31 examples\ndrwxr-xr-x  8 pi   pi   4096 Jan 25 17:29 .git\ndrwxr-xr-x  2 pi   pi   4096 Jan 25 17:29 .github\n-rw-r--r--  1 pi   pi     47 Jan 25 17:29 .gitignore\n-rw-r--r--  1 pi   pi   1085 Jan 25 17:29 LICENSE\n-rw-r--r--  1 pi   pi     45 Jan 25 17:29 MANIFEST.in\n-rw-r--r--  1 pi   pi   2038 Jan 25 17:29 README.md\n-rw-r--r--  1 pi   pi   5130 Jan 25 17:29 setup.py\ndrwxr-xr-x  6 pi   pi   4096 Jan 25 17:29 source\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Issue the following command to set up your sensor code:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo python setup.py install</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Change directories to the \'examples\' directory</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ cd examples</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Test your code using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo ./AdafruitDHT.py 2302 4</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>In that command string, the \'2302\' is the actual model number of your DHT22 sensor. Verify your model number. Possible choices are \'11\', \'22\', and \'2302\'.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratualtions! You have now successfully connected your sensor to your Pi and got it working. But you will notice, right now each execution of the code produces a single result. Also, there is no API endpoint connectivity. We will be building those next.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Serverless Framework</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Serverless is a&nbsp;<a href=\"https://nodejs.org/\">Node.js</a>&nbsp;CLI tool so the first thing you need to do is to install Node.js on your machine.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Go to the official&nbsp;<a href=\"https://nodejs.org/\">Node.js website</a>, download and follow the&nbsp;<a href=\"https://nodejs.org/en/download/\">installation instructions</a>&nbsp;to install Node.js on your local machine.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Note:</strong>&nbsp;Serverless runs on Node v4 or higher.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can verify that Node.js is installed successfully by running&nbsp;<code>node --version</code>&nbsp;in your terminal. You should see the corresponding Node version number printed out.<br></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For this you will need the Serverless Framework. You can type</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n$ npm install -g serverless\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>to install Serverless onto your laptop or desktop.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Also for this tutorial, you will need AWS login credentials. You can get those here. I had to install the AWS CLI on my laptop:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In order to use Serverless Framework with AWS, you will need to create a new AWS IAM user. For this, you will need a valid AWS account. Create a new IAM user and access keys following the steps below.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Log in to your AWS account and got the the IAM page.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In the upper left hand corner of the page click the blue \'Add user\' button.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Enter a name in the first field to remind you this User is the Framework, like \'serverless-agent\'. Enable Programmatic access by clicking the checkbox. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Click Next to go through to the Permissions page. Click on \'Attach existing policies directly\'. Click on Create policy. Select the JSON tab, replace the policy that appears with the following JSON file you\'ll find at https://gist.github.com/ServerlessBot/7618156b8671840a539f405dea2704c8</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When you are finished, select&nbsp;<strong>Review policy</strong>. You can assign this policy a&nbsp;<strong>Name</strong>&nbsp;and&nbsp;<strong>Description</strong>. Check everything looks good and click&nbsp;<strong>Create policy</strong>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I had to go back to \'Users\'-&gt;\'Add user\', create my new user, and then assign my newly created policy to my new user. Do this now.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Upon creating your new user, the page will display your Access Key and Secret Acccess Key. Record these for future use. You will need them min a later step.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can export your new keys as environment variables using the following:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ export AWS_ACCESS_KEY_ID=&lt;your-key-here>\n$ export AWS_SECRET_ACCESS_KEY=&lt;your-secret-key-here>\n\n$ sudo serverless deploy\n\n# \'export\' command is valid only for unix shells. In Windows - use \'set\' instead of \'export\'</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Create and Deploy API Endpoint</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>On your laptop or desktop, create a new directory and cd into it. Once inside, issue the following command to start a new app:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ npm init -f</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This will create a new scaffold for your app, including an empty package.json file. Next, install Express Framework into your app.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ npm install --save express serverless-http</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, inside your app directory, create a file index.js, containing the following content:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>// index.js\n\nconst serverless = require(\'serverless-http\');\nconst bodyParser = require(\'body-parser\');\nconst express = require(\'express\')\nconst app = express()\nconst AWS = require(\'aws-sdk\');\n\n\nconst ENVIRONMENT_TABLE = process.env.ENVIRONMENT_TABLE;\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\napp.use(bodyParser.json({ strict: false }));\n\napp.get(\'/\', function (req, res) {\n  res.send(\'Hello KerBoB!\')\n})\n\n// Get Environment endpoint\napp.get(\'/environment/:deviceId\', function (req, res) {\n  const params = {\n    TableName: ENVIRONMENT_TABLE,\n    Key: {\n      deviceId: req.params.deviceId,\n    },\n  }\n\n  dynamoDb.get(params, (error, result) => {\n    if (error) {\n      console.log(error);\n      res.status(400).json({ error: \'Could not get environment\' });\n    }\n    if (result.Item) {\n      const {deviceId, temp, humidity} = result.Item;\n      res.json({ deviceId, temp, humidity });\n    } else {\n      res.status(404).json({ error: \"Device not found\" });\n    }\n  });\n})\n\n// Create Environment endpoint\napp.post(\'/environment\', function (req, res) {\n  const { deviceId, temp, humidity } = req.body;\n  if (typeof deviceId !== \'string\') {\n    res.status(400).json({ error: \'\"deviceId\" must be a string\' });\n  } else if (typeof temp !== \'string\') {\n    res.status(400).json({ error: \'\"temp\" must be a string\' });\n  }\n\n  const params = {\n    TableName: ENVIRONMENT_TABLE,\n    Item: {\n      deviceId: deviceId,\n      temp: temp,\n      humidity: humidity,\n    },\n  };\n\n  dynamoDb.put(params, (error) => {\n    if (error) {\n      console.log(error);\n      res.status(400).json({ error: \'Could not create environment\' });\n    }\n    res.json({ deviceId, temp, humidity });\n  });\n})\n\nmodule.exports.handler = serverless(app);</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Next, inside your app directory, create a file serverless.yml, with the following content:</p>\n<!-- /wp:paragraph -->\n\n<pre># serverless.yml\n\nservice: coderdx-io-dashboard\n\ncustom:\n  tableName: \'environment-table-${self:provider.stage}\'\n\nprovider:\n  name: aws\n  runtime: nodejs6.10\n  stage: dev\n  region: us-east-1\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource:\n        - { \"Fn::GetAtt\": [\"EnvironmentDynamoDBTable\", \"Arn\" ] }\n  environment:\n    ENVIRONMENT_TABLE: ${self:custom.tableName}\n\nfunctions:\n  app:\n    handler: index.handler\n    events:\n      - http: ANY /\n      - http: \'ANY {proxy+}\'\n\nresources:\n  Resources:\n    EnvironmentDynamoDBTable:\n      Type: \'AWS::DynamoDB::Table\'\n      Properties:\n        AttributeDefinitions:\n          -\n            AttributeName: deviceId\n            AttributeType: S\n        KeySchema:\n          -\n            AttributeName: deviceId\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        TableName: ${self:custom.tableName}\n</pre>\n\n<!-- wp:paragraph -->\n<p>Next, deploy your API server using the following command:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo sls deploy</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>This command will produce output similar to below. Make special note of the endpoint URL...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo sls deploy\n[sudo] password for dx: \nServerless: Packaging service...\nServerless: Excluding development dependencies...\nServerless: Uploading CloudFormation file to S3...\nServerless: Uploading artifacts...\nServerless: Uploading service .zip file to S3 (673.25 KB)...\nServerless: Validating template...\nServerless: Updating Stack...\nServerless: Checking Stack update progress...\n..........\nServerless: Stack update finished...\nService Information\nservice: coderdx-io-dashboard2\nstage: dev\nregion: us-east-1\nstack: coderdx-io-dashboard2-dev\napi keys:\n  None\nendpoints:\n  ANY - https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev\n  ANY - https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev/{proxy+}\nfunctions:\n  app: coderdx-io-dashboard2-dev-app\nlayers:\n  None\n$</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Just to test everything so far, copy the URL form the output and visit it in a browser tab. The string \"Hello KerBob!\" should appear. Very good!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, return to your SSH session on your Pi. Locate the file Adafruit_Python_DHT/examples/AdafruitDHT.py. Open it an replace the content with the content below. Be sure to substitute your correct URL for the one shown below...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>#!/usr/bin/python\n# Copyright (c) 2014 Adafruit Industries\n# Author: Tony DiCola\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\nimport sys\nimport Adafruit_DHT\nimport pycurl\nimport time\n\n# Parse command line parameters.\nsensor_args = { \'11\': Adafruit_DHT.DHT11,\n                \'22\': Adafruit_DHT.DHT22,\n                \'2302\': Adafruit_DHT.AM2302 }\nif len(sys.argv) == 3 and sys.argv[1] in sensor_args:\n    sensor = sensor_args[sys.argv[1]]\n    pin = sys.argv[2]\nelse:\n    print(\'Usage: sudo ./Adafruit_DHT.py [11|22|2302] &lt;GPIO pin number>\')\n    print(\'Example: sudo ./Adafruit_DHT.py 2302 4 - Read from an AM2302 connected to GPIO pin #4\')\n    sys.exit(1)\n\nwhile True:\n    # Try to grab a sensor reading.  Use the read_retry method which will retry up\n    # to 15 times to get a sensor reading (waiting 2 seconds between each retry).\n    humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)\n\n    # Un-comment the line below to convert the temperature to Fahrenheit.\n    temperature = temperature * 9/5.0 + 32\n\n    # Note that sometimes you won\'t get a reading and\n    # the results will be null (because Linux can\'t\n    # guarantee the timing of calls to read the sensor).\n    # If this happens try again!\n    if humidity is not None and temperature is not None:\n        print(\'Temp={0:0.1f}*  Humidity={1:0.1f}%\'.format(temperature, humidity))\n    else:\n        print(\'Failed to get reading. Try again!\')\n        sys.exit(1)\n\n    # send to AWS\n    try:\n        # python 3\n        from urllib.parse import urlencode\n    except ImportError:\n        # python 2\n        from urllib import urlencode\n\n        c = pycurl.Curl()\n        c.setopt(c.URL, \'https://97kmb3cw21.execute-api.us-east-1.amazonaws.com/dev/environment\')\n        c.setopt(pycurl.HTTPHEADER,[\'Content-Type: application/json\'])\n\n        post_data = \'{\"deviceId\": \"1\", \"temp\": \"\' + str(temperature) + \'\", \"humidity\": \"\' + str(humidity) + \'\"}\'\n            \n        # Form data must be provided already urlencoded.\n        #postfields = urlencode(post_data)\n\n        print(post_data)\n        # Sets request method to POST,\n        # Content-Type header to application/x-www-form-urlencoded\n        # and data to send in request body.\n            \n        c.setopt(c.POSTFIELDS, post_data)\n\n        c.perform()\n        c.close()\n\n        time.sleep( 15 )\n</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Finally, on your Pi, issue the following command to run your app:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>$ sudo ./AdafruitDHT.py 2302 4</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Go back to your browser tab containing the link to your API endpoint and refresh the page. Your temperature and humidity should refresh every 15 seconds. These results will not automatically update in the browser, you will need to reload the page every time to see your updates.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Congratulations, you did it! </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Please leave any comments or questions in the feedback section below. If you found this tutorial helpful, please click on the PayPal Donate button below and make a donation. Donations are greatly appreciated.</p>\n<!-- /wp:paragraph -->\n\n<form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_top\">\n<input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\"><br>\n<input type=\"hidden\" name=\"hosted_button_id\" value=\"G2WJBP5XMT2HL\"><br>\n<input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\" border=\"0\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\"><br>\n<img alt=\"\" border=\"0\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\"><br>\n</form>\n\n<!-- wp:image -->\n<figure class=\"wp-block-image\"><img alt=\"\"/></figure>\n<!-- /wp:image -->','Raspberry Pi DHT22 Temp/Humidity Sensor and API Endpoint Tutorial','','inherit','closed','closed','','202-revision-v1','','','2019-01-31 11:05:38','2019-01-31 16:05:38','',202,'http://coderdx.io/202-revision-v1/',0,'revision','',0),(212,1,'2019-02-16 12:45:51','2019-02-16 17:45:51','','DaveBrixiusResume','','inherit','open','closed','','davebrixiusresume','','','2019-02-16 12:45:51','2019-02-16 17:45:51','',0,'http://coderdx.io/wp-content/uploads/2019/02/DaveBrixiusResume.pdf',0,'attachment','application/pdf',0),(214,1,'2019-02-16 12:51:03','2019-02-16 17:51:03','On June 5, 2014 I was laying in bed on my laptop and a thought occurred to me. I wonder if Austin has an IoT meetup group. I checked and sure enough, we didn\'t.\n\nMy next thought was I wonder what Silicon Valley is doing. A quick search for meetups in the Bay area revealed 13 groups that had \'IoT\' in their name.\n\nSo I filled out the form, sent in my $19 and went to bed. I didn\'t think anything of it. I thought it was going to evaporate in the light of day, like most of my other 2am brainstorms.\n\nOver the next few days I started to notice people were signing up for this thing. I called my buddy Jeff and said, oh shit, now I have to come up with something.\n\nThat was just over 4 years ago and, at the time of the writing of this article, the Austin Internet of Things meetup is just over 2,900 members. We have enjoyed notoriety and sponsorship from big name companies like Intel, Microsoft, Dell, IBM, NXP Semiconductor, and many others.\n\nWe have become the leader in Internet of Things meetups in Austin, and are continuing to grow.\n\nClick&nbsp;<a href=\"http://www.austiniot.org\" target=\"_blank\" rel=\"noopener\">here</a>&nbsp;to check out our website.\n\nIf you live or work in the Austin, TX area, or are planning to visit, please check our meetup page&nbsp;<a href=\"https://www.meetup.com/AustinIoT\" target=\"_blank\" rel=\"noopener\">here</a>&nbsp;and stop in at one of our meetups!\n\n&nbsp;','Austin IoT Meetup Group','','inherit','closed','closed','','19-revision-v1','','','2019-02-16 12:51:03','2019-02-16 17:51:03','',19,'http://coderdx.io/19-revision-v1/',0,'revision','',0),(215,1,'2020-04-17 22:46:25','0000-00-00 00:00:00','','Auto Draft','','auto-draft','open','open','','','','','2020-04-17 22:46:25','0000-00-00 00:00:00','',0,'http://coderdx.io/?p=215',0,'post','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` VALUES (5,1,0),(10,1,0),(15,2,0),(21,2,0),(26,2,0),(31,2,0),(48,2,0),(50,1,0),(91,2,0),(182,1,0),(202,1,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `description` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` VALUES (1,1,'category','',0,4),(2,2,'nav_menu','',0,6);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_termmeta`
--

DROP TABLE IF EXISTS `wp_termmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_termmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`meta_id`),
  KEY `term_id` (`term_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_termmeta`
--

LOCK TABLES `wp_termmeta` WRITE;
/*!40000 ALTER TABLE `wp_termmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_termmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `slug` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  KEY `slug` (`slug`(191)),
  KEY `name` (`name`(191))
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` VALUES (1,'Uncategorized','uncategorized',0),(2,'Main','main',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` VALUES (1,1,'nickname','CoderDx'),(2,1,'first_name',''),(3,1,'last_name',''),(4,1,'description',''),(5,1,'rich_editing','true'),(6,1,'syntax_highlighting','true'),(7,1,'comment_shortcuts','false'),(8,1,'admin_color','fresh'),(9,1,'use_ssl','0'),(10,1,'show_admin_bar_front','true'),(11,1,'locale',''),(12,1,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(13,1,'wp_user_level','10'),(14,1,'dismissed_wp_pointers','wp496_privacy,theme_editor_notice'),(15,1,'show_welcome_panel','1'),(17,1,'wp_dashboard_quick_press_last_post_id','215'),(18,1,'community-events-location','a:1:{s:2:\"ip\";s:13:\"107.140.190.0\";}'),(19,1,'wp_user-settings','editor=tinymce&libraryContent=browse'),(20,1,'wp_user-settings-time','1533746575'),(21,1,'nav_menu_recently_edited','2'),(22,1,'managenav-menuscolumnshidden','a:5:{i:0;s:11:\"link-target\";i:1;s:11:\"css-classes\";i:2;s:3:\"xfn\";i:3;s:11:\"description\";i:4;s:15:\"title-attribute\";}'),(23,1,'metaboxhidden_nav-menus','a:2:{i:0;s:12:\"add-post_tag\";i:1;s:15:\"add-post_format\";}'),(26,1,'show_try_gutenberg_panel','0'),(27,1,'tgmpa_dismissed_notice_wp-mail-smtp','1'),(28,1,'session_tokens','a:1:{s:64:\"0d1920f2118b5445ca7c28c27d72346d60aae2e9551bac05b4f926e02d2ed8ba\";a:4:{s:10:\"expiration\";i:1587354384;s:2:\"ip\";s:15:\"107.140.190.134\";s:2:\"ua\";s:121:\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\";s:5:\"login\";i:1587181584;}}'),(29,1,'wpcf7_hide_welcome_panel_on','a:1:{i:0;s:3:\"5.1\";}');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_pass` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_nicename` varchar(50) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_email` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_url` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`),
  KEY `user_email` (`user_email`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
INSERT INTO `wp_users` VALUES (1,'coderdx','$P$Bi14Rm//rFgE0t2nWfIwqphXCjEyFI0','coderdx','dave.brixius@gmail.com','','2018-07-01 19:56:29','',0,'CoderDx');
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-04-18  4:00:14
